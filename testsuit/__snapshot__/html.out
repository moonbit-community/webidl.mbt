LBRACKET, 6:1-6:2
ID("Exposed"), 6:2-6:9
EQUAL, 6:9-6:10
ID("Window"), 6:10-6:16
COMMA, 6:16-6:17
ID("LegacyUnenumerableNamedProperties"), 7:2-7:35
RBRACKET, 7:35-7:36
INTERFACE, 8:1-8:10
ID("HTMLAllCollection"), 8:11-8:28
LBRACE, 8:29-8:30
READONLY, 9:3-9:11
ATTRIBUTE, 9:12-9:21
UNSIGNED, 9:22-9:30
LONG, 9:31-9:35
ID("length"), 9:36-9:42
SEMI, 9:42-9:43
GETTER, 10:3-10:9
ID("Element"), 10:10-10:17
LPAREN, 10:18-10:19
UNSIGNED, 10:19-10:27
LONG, 10:28-10:32
ID("index"), 10:33-10:38
RPAREN, 10:38-10:39
SEMI, 10:39-10:40
GETTER, 11:3-11:9
LPAREN, 11:10-11:11
ID("HTMLCollection"), 11:11-11:25
OR, 11:26-11:28
ID("Element"), 11:29-11:36
RPAREN, 11:36-11:37
QUESTION, 11:37-11:38
ID("namedItem"), 11:39-11:48
LPAREN, 11:48-11:49
DOMSTRING, 11:49-11:58
ID("name"), 11:59-11:63
RPAREN, 11:63-11:64
SEMI, 11:64-11:65
LPAREN, 12:3-12:4
ID("HTMLCollection"), 12:4-12:18
OR, 12:19-12:21
ID("Element"), 12:22-12:29
RPAREN, 12:29-12:30
QUESTION, 12:30-12:31
ID("item"), 12:32-12:36
LPAREN, 12:36-12:37
OPTIONAL, 12:37-12:45
DOMSTRING, 12:46-12:55
ID("nameOrIndex"), 12:56-12:67
RPAREN, 12:67-12:68
SEMI, 12:68-12:69
RBRACE, 15:1-15:2
SEMI, 15:2-15:3
LBRACKET, 17:1-17:2
ID("Exposed"), 17:2-17:9
EQUAL, 17:9-17:10
ID("Window"), 17:10-17:16
RBRACKET, 17:16-17:17
INTERFACE, 18:1-18:10
ID("HTMLFormControlsCollection"), 18:11-18:37
COLON, 18:38-18:39
ID("HTMLCollection"), 18:40-18:54
LBRACE, 18:55-18:56
GETTER, 20:3-20:9
LPAREN, 20:10-20:11
ID("RadioNodeList"), 20:11-20:24
OR, 20:25-20:27
ID("Element"), 20:28-20:35
RPAREN, 20:35-20:36
QUESTION, 20:36-20:37
ID("namedItem"), 20:38-20:47
LPAREN, 20:47-20:48
DOMSTRING, 20:48-20:57
ID("name"), 20:58-20:62
RPAREN, 20:62-20:63
SEMI, 20:63-20:64
RBRACE, 21:1-21:2
SEMI, 21:2-21:3
LBRACKET, 23:1-23:2
ID("Exposed"), 23:2-23:9
EQUAL, 23:9-23:10
ID("Window"), 23:10-23:16
RBRACKET, 23:16-23:17
INTERFACE, 24:1-24:10
ID("RadioNodeList"), 24:11-24:24
COLON, 24:25-24:26
ID("NodeList"), 24:27-24:35
LBRACE, 24:36-24:37
ATTRIBUTE, 25:3-25:12
DOMSTRING, 25:13-25:22
ID("value"), 25:23-25:28
SEMI, 25:28-25:29
RBRACE, 26:1-26:2
SEMI, 26:2-26:3
LBRACKET, 28:1-28:2
ID("Exposed"), 28:2-28:9
EQUAL, 28:9-28:10
ID("Window"), 28:10-28:16
RBRACKET, 28:16-28:17
INTERFACE, 29:1-29:10
ID("HTMLOptionsCollection"), 29:11-29:32
COLON, 29:33-29:34
ID("HTMLCollection"), 29:35-29:49
LBRACE, 29:50-29:51
LBRACKET, 31:3-31:4
ID("CEReactions"), 31:4-31:15
RBRACKET, 31:15-31:16
ATTRIBUTE, 31:17-31:26
UNSIGNED, 31:27-31:35
LONG, 31:36-31:40
ID("length"), 31:41-31:47
SEMI, 31:47-31:48
LBRACKET, 32:3-32:4
ID("CEReactions"), 32:4-32:15
RBRACKET, 32:15-32:16
SETTER, 32:17-32:23
UNDEFINED, 32:24-32:33
LPAREN, 32:34-32:35
UNSIGNED, 32:35-32:43
LONG, 32:44-32:48
ID("index"), 32:49-32:54
COMMA, 32:54-32:55
ID("HTMLOptionElement"), 32:56-32:73
QUESTION, 32:73-32:74
ID("option"), 32:75-32:81
RPAREN, 32:81-32:82
SEMI, 32:82-32:83
LBRACKET, 33:3-33:4
ID("CEReactions"), 33:4-33:15
RBRACKET, 33:15-33:16
UNDEFINED, 33:17-33:26
ID("add"), 33:27-33:30
LPAREN, 33:30-33:31
LPAREN, 33:31-33:32
ID("HTMLOptionElement"), 33:32-33:49
OR, 33:50-33:52
ID("HTMLOptGroupElement"), 33:53-33:72
RPAREN, 33:72-33:73
ID("element"), 33:74-33:81
COMMA, 33:81-33:82
OPTIONAL, 33:83-33:91
LPAREN, 33:92-33:93
ID("HTMLElement"), 33:93-33:104
OR, 33:105-33:107
LONG, 33:108-33:112
RPAREN, 33:112-33:113
QUESTION, 33:113-33:114
ID("before"), 33:115-33:121
EQUAL, 33:122-33:123
NULL, 33:124-33:128
RPAREN, 33:128-33:129
SEMI, 33:129-33:130
LBRACKET, 34:3-34:4
ID("CEReactions"), 34:4-34:15
RBRACKET, 34:15-34:16
UNDEFINED, 34:17-34:26
ID("remove"), 34:27-34:33
LPAREN, 34:33-34:34
LONG, 34:34-34:38
ID("index"), 34:39-34:44
RPAREN, 34:44-34:45
SEMI, 34:45-34:46
ATTRIBUTE, 35:3-35:12
LONG, 35:13-35:17
ID("selectedIndex"), 35:18-35:31
SEMI, 35:31-35:32
RBRACE, 36:1-36:2
SEMI, 36:2-36:3
LBRACKET, 38:1-38:2
ID("Exposed"), 38:2-38:9
EQUAL, 38:9-38:10
LPAREN, 38:10-38:11
ID("Window"), 38:11-38:17
COMMA, 38:17-38:18
ID("Worker"), 38:18-38:24
RPAREN, 38:24-38:25
RBRACKET, 38:25-38:26
INTERFACE, 39:1-39:10
ID("DOMStringList"), 39:11-39:24
LBRACE, 39:25-39:26
READONLY, 40:3-40:11
ATTRIBUTE, 40:12-40:21
UNSIGNED, 40:22-40:30
LONG, 40:31-40:35
ID("length"), 40:36-40:42
SEMI, 40:42-40:43
GETTER, 41:3-41:9
DOMSTRING, 41:10-41:19
QUESTION, 41:19-41:20
ID("item"), 41:21-41:25
LPAREN, 41:25-41:26
UNSIGNED, 41:26-41:34
LONG, 41:35-41:39
ID("index"), 41:40-41:45
RPAREN, 41:45-41:46
SEMI, 41:46-41:47
BOOLEAN, 42:3-42:10
ID("contains"), 42:11-42:19
LPAREN, 42:19-42:20
DOMSTRING, 42:20-42:29
ID("string"), 42:30-42:36
RPAREN, 42:36-42:37
SEMI, 42:37-42:38
RBRACE, 43:1-43:2
SEMI, 43:2-43:3
ENUM, 45:1-45:5
ID("DocumentReadyState"), 45:6-45:24
LBRACE, 45:25-45:26
STRING("\"loading\""), 45:27-45:36
COMMA, 45:36-45:37
STRING("\"interactive\""), 45:38-45:51
COMMA, 45:51-45:52
STRING("\"complete\""), 45:53-45:63
RBRACE, 45:64-45:65
SEMI, 45:65-45:66
ENUM, 46:1-46:5
ID("DocumentVisibilityState"), 46:6-46:29
LBRACE, 46:30-46:31
STRING("\"visible\""), 46:32-46:41
COMMA, 46:41-46:42
STRING("\"hidden\""), 46:43-46:51
RBRACE, 46:52-46:53
SEMI, 46:53-46:54
TYPEDEF, 47:1-47:8
LPAREN, 47:9-47:10
ID("HTMLScriptElement"), 47:10-47:27
OR, 47:28-47:30
ID("SVGScriptElement"), 47:31-47:47
RPAREN, 47:47-47:48
ID("HTMLOrSVGScriptElement"), 47:49-47:71
SEMI, 47:71-47:72
LBRACKET, 49:1-49:2
ID("LegacyOverrideBuiltIns"), 49:2-49:24
RBRACKET, 49:24-49:25
PARTIAL, 50:1-50:8
INTERFACE, 50:9-50:18
ID("Document"), 50:19-50:27
LBRACE, 50:28-50:29
STATIC, 51:3-51:9
ID("Document"), 51:10-51:18
ID("parseHTMLUnsafe"), 51:19-51:34
LPAREN, 51:34-51:35
LPAREN, 51:35-51:36
ID("TrustedHTML"), 51:36-51:47
OR, 51:48-51:50
DOMSTRING, 51:51-51:60
RPAREN, 51:60-51:61
ID("html"), 51:62-51:66
RPAREN, 51:66-51:67
SEMI, 51:67-51:68
LBRACKET, 54:3-54:4
ID("PutForwards"), 54:4-54:15
EQUAL, 54:15-54:16
ID("href"), 54:16-54:20
COMMA, 54:20-54:21
ID("LegacyUnforgeable"), 54:22-54:39
RBRACKET, 54:39-54:40
READONLY, 54:41-54:49
ATTRIBUTE, 54:50-54:59
ID("Location"), 54:60-54:68
QUESTION, 54:68-54:69
ID("location"), 54:70-54:78
SEMI, 54:78-54:79
ATTRIBUTE, 55:3-55:12
USVSTRING, 55:13-55:22
ID("domain"), 55:23-55:29
SEMI, 55:29-55:30
READONLY, 56:3-56:11
ATTRIBUTE, 56:12-56:21
USVSTRING, 56:22-56:31
ID("referrer"), 56:32-56:40
SEMI, 56:40-56:41
ATTRIBUTE, 57:3-57:12
USVSTRING, 57:13-57:22
ID("cookie"), 57:23-57:29
SEMI, 57:29-57:30
READONLY, 58:3-58:11
ATTRIBUTE, 58:12-58:21
DOMSTRING, 58:22-58:31
ID("lastModified"), 58:32-58:44
SEMI, 58:44-58:45
READONLY, 59:3-59:11
ATTRIBUTE, 59:12-59:21
ID("DocumentReadyState"), 59:22-59:40
ID("readyState"), 59:41-59:51
SEMI, 59:51-59:52
GETTER, 62:3-62:9
OBJECT, 62:10-62:16
LPAREN, 62:17-62:18
DOMSTRING, 62:18-62:27
ID("name"), 62:28-62:32
RPAREN, 62:32-62:33
SEMI, 62:33-62:34
LBRACKET, 63:3-63:4
ID("CEReactions"), 63:4-63:15
RBRACKET, 63:15-63:16
ATTRIBUTE, 63:17-63:26
DOMSTRING, 63:27-63:36
ID("title"), 63:37-63:42
SEMI, 63:42-63:43
LBRACKET, 64:3-64:4
ID("CEReactions"), 64:4-64:15
RBRACKET, 64:15-64:16
ATTRIBUTE, 64:17-64:26
DOMSTRING, 64:27-64:36
ID("dir"), 64:37-64:40
SEMI, 64:40-64:41
LBRACKET, 65:3-65:4
ID("CEReactions"), 65:4-65:15
RBRACKET, 65:15-65:16
ATTRIBUTE, 65:17-65:26
ID("HTMLElement"), 65:27-65:38
QUESTION, 65:38-65:39
ID("body"), 65:40-65:44
SEMI, 65:44-65:45
READONLY, 66:3-66:11
ATTRIBUTE, 66:12-66:21
ID("HTMLHeadElement"), 66:22-66:37
QUESTION, 66:37-66:38
ID("head"), 66:39-66:43
SEMI, 66:43-66:44
LBRACKET, 67:3-67:4
ID("SameObject"), 67:4-67:14
RBRACKET, 67:14-67:15
READONLY, 67:16-67:24
ATTRIBUTE, 67:25-67:34
ID("HTMLCollection"), 67:35-67:49
ID("images"), 67:50-67:56
SEMI, 67:56-67:57
LBRACKET, 68:3-68:4
ID("SameObject"), 68:4-68:14
RBRACKET, 68:14-68:15
READONLY, 68:16-68:24
ATTRIBUTE, 68:25-68:34
ID("HTMLCollection"), 68:35-68:49
ID("embeds"), 68:50-68:56
SEMI, 68:56-68:57
LBRACKET, 69:3-69:4
ID("SameObject"), 69:4-69:14
RBRACKET, 69:14-69:15
READONLY, 69:16-69:24
ATTRIBUTE, 69:25-69:34
ID("HTMLCollection"), 69:35-69:49
ID("plugins"), 69:50-69:57
SEMI, 69:57-69:58
LBRACKET, 70:3-70:4
ID("SameObject"), 70:4-70:14
RBRACKET, 70:14-70:15
READONLY, 70:16-70:24
ATTRIBUTE, 70:25-70:34
ID("HTMLCollection"), 70:35-70:49
ID("links"), 70:50-70:55
SEMI, 70:55-70:56
LBRACKET, 71:3-71:4
ID("SameObject"), 71:4-71:14
RBRACKET, 71:14-71:15
READONLY, 71:16-71:24
ATTRIBUTE, 71:25-71:34
ID("HTMLCollection"), 71:35-71:49
ID("forms"), 71:50-71:55
SEMI, 71:55-71:56
LBRACKET, 72:3-72:4
ID("SameObject"), 72:4-72:14
RBRACKET, 72:14-72:15
READONLY, 72:16-72:24
ATTRIBUTE, 72:25-72:34
ID("HTMLCollection"), 72:35-72:49
ID("scripts"), 72:50-72:57
SEMI, 72:57-72:58
ID("NodeList"), 73:3-73:11
ID("getElementsByName"), 73:12-73:29
LPAREN, 73:29-73:30
DOMSTRING, 73:30-73:39
ID("elementName"), 73:40-73:51
RPAREN, 73:51-73:52
SEMI, 73:52-73:53
READONLY, 74:3-74:11
ATTRIBUTE, 74:12-74:21
ID("HTMLOrSVGScriptElement"), 74:22-74:44
QUESTION, 74:44-74:45
ID("currentScript"), 74:46-74:59
SEMI, 74:59-74:60
LBRACKET, 77:3-77:4
ID("CEReactions"), 77:4-77:15
RBRACKET, 77:15-77:16
ID("Document"), 77:17-77:25
ID("open"), 77:26-77:30
LPAREN, 77:30-77:31
OPTIONAL, 77:31-77:39
DOMSTRING, 77:40-77:49
ID("unused1"), 77:50-77:57
COMMA, 77:57-77:58
OPTIONAL, 77:59-77:67
DOMSTRING, 77:68-77:77
ID("unused2"), 77:78-77:85
RPAREN, 77:85-77:86
SEMI, 77:86-77:87
ID("WindowProxy"), 78:3-78:14
QUESTION, 78:14-78:15
ID("open"), 78:16-78:20
LPAREN, 78:20-78:21
USVSTRING, 78:21-78:30
ID("url"), 78:31-78:34
COMMA, 78:34-78:35
DOMSTRING, 78:36-78:45
ID("name"), 78:46-78:50
COMMA, 78:50-78:51
DOMSTRING, 78:52-78:61
ID("features"), 78:62-78:70
RPAREN, 78:70-78:71
SEMI, 78:71-78:72
LBRACKET, 79:3-79:4
ID("CEReactions"), 79:4-79:15
RBRACKET, 79:15-79:16
UNDEFINED, 79:17-79:26
ID("close"), 79:27-79:32
LPAREN, 79:32-79:33
RPAREN, 79:33-79:34
SEMI, 79:34-79:35
LBRACKET, 80:3-80:4
ID("CEReactions"), 80:4-80:15
RBRACKET, 80:15-80:16
UNDEFINED, 80:17-80:26
ID("write"), 80:27-80:32
LPAREN, 80:32-80:33
LPAREN, 80:33-80:34
ID("TrustedHTML"), 80:34-80:45
OR, 80:46-80:48
DOMSTRING, 80:49-80:58
RPAREN, 80:58-80:59
ELLIPS, 80:59-80:62
ID("text"), 80:63-80:67
RPAREN, 80:67-80:68
SEMI, 80:68-80:69
LBRACKET, 81:3-81:4
ID("CEReactions"), 81:4-81:15
RBRACKET, 81:15-81:16
UNDEFINED, 81:17-81:26
ID("writeln"), 81:27-81:34
LPAREN, 81:34-81:35
LPAREN, 81:35-81:36
ID("TrustedHTML"), 81:36-81:47
OR, 81:48-81:50
DOMSTRING, 81:51-81:60
RPAREN, 81:60-81:61
ELLIPS, 81:61-81:64
ID("text"), 81:65-81:69
RPAREN, 81:69-81:70
SEMI, 81:70-81:71
READONLY, 84:3-84:11
ATTRIBUTE, 84:12-84:21
ID("WindowProxy"), 84:22-84:33
QUESTION, 84:33-84:34
ID("defaultView"), 84:35-84:46
SEMI, 84:46-84:47
BOOLEAN, 85:3-85:10
ID("hasFocus"), 85:11-85:19
LPAREN, 85:19-85:20
RPAREN, 85:20-85:21
SEMI, 85:21-85:22
LBRACKET, 86:3-86:4
ID("CEReactions"), 86:4-86:15
RBRACKET, 86:15-86:16
ATTRIBUTE, 86:17-86:26
DOMSTRING, 86:27-86:36
ID("designMode"), 86:37-86:47
SEMI, 86:47-86:48
LBRACKET, 87:3-87:4
ID("CEReactions"), 87:4-87:15
RBRACKET, 87:15-87:16
BOOLEAN, 87:17-87:24
ID("execCommand"), 87:25-87:36
LPAREN, 87:36-87:37
DOMSTRING, 87:37-87:46
ID("commandId"), 87:47-87:56
COMMA, 87:56-87:57
OPTIONAL, 87:58-87:66
BOOLEAN, 87:67-87:74
ID("showUI"), 87:75-87:81
EQUAL, 87:82-87:83
FALSE, 87:84-87:89
COMMA, 87:89-87:90
OPTIONAL, 87:91-87:99
DOMSTRING, 87:100-87:109
ID("value"), 87:110-87:115
EQUAL, 87:116-87:117
STRING("\"\""), 87:118-87:120
RPAREN, 87:120-87:121
SEMI, 87:121-87:122
BOOLEAN, 88:3-88:10
ID("queryCommandEnabled"), 88:11-88:30
LPAREN, 88:30-88:31
DOMSTRING, 88:31-88:40
ID("commandId"), 88:41-88:50
RPAREN, 88:50-88:51
SEMI, 88:51-88:52
BOOLEAN, 89:3-89:10
ID("queryCommandIndeterm"), 89:11-89:31
LPAREN, 89:31-89:32
DOMSTRING, 89:32-89:41
ID("commandId"), 89:42-89:51
RPAREN, 89:51-89:52
SEMI, 89:52-89:53
BOOLEAN, 90:3-90:10
ID("queryCommandState"), 90:11-90:28
LPAREN, 90:28-90:29
DOMSTRING, 90:29-90:38
ID("commandId"), 90:39-90:48
RPAREN, 90:48-90:49
SEMI, 90:49-90:50
BOOLEAN, 91:3-91:10
ID("queryCommandSupported"), 91:11-91:32
LPAREN, 91:32-91:33
DOMSTRING, 91:33-91:42
ID("commandId"), 91:43-91:52
RPAREN, 91:52-91:53
SEMI, 91:53-91:54
DOMSTRING, 92:3-92:12
ID("queryCommandValue"), 92:13-92:30
LPAREN, 92:30-92:31
DOMSTRING, 92:31-92:40
ID("commandId"), 92:41-92:50
RPAREN, 92:50-92:51
SEMI, 92:51-92:52
READONLY, 93:3-93:11
ATTRIBUTE, 93:12-93:21
BOOLEAN, 93:22-93:29
ID("hidden"), 93:30-93:36
SEMI, 93:36-93:37
READONLY, 94:3-94:11
ATTRIBUTE, 94:12-94:21
ID("DocumentVisibilityState"), 94:22-94:45
ID("visibilityState"), 94:46-94:61
SEMI, 94:61-94:62
LBRACKET, 97:3-97:4
ID("LegacyLenientThis"), 97:4-97:21
RBRACKET, 97:21-97:22
ATTRIBUTE, 97:23-97:32
ID("EventHandler"), 97:33-97:45
ID("onreadystatechange"), 97:46-97:64
SEMI, 97:64-97:65
ATTRIBUTE, 98:3-98:12
ID("EventHandler"), 98:13-98:25
ID("onvisibilitychange"), 98:26-98:44
SEMI, 98:44-98:45
RBRACE, 101:1-101:2
SEMI, 101:2-101:3
ID("Document"), 102:1-102:9
INCLUDES, 102:10-102:18
ID("GlobalEventHandlers"), 102:19-102:38
SEMI, 102:38-102:39
PARTIAL, 104:1-104:8
INTERFACE, 104:9-104:18
MIXIN, 104:19-104:24
ID("DocumentOrShadowRoot"), 104:25-104:45
LBRACE, 104:46-104:47
READONLY, 105:3-105:11
ATTRIBUTE, 105:12-105:21
ID("Element"), 105:22-105:29
QUESTION, 105:29-105:30
ID("activeElement"), 105:31-105:44
SEMI, 105:44-105:45
RBRACE, 106:1-106:2
SEMI, 106:2-106:3
LBRACKET, 108:1-108:2
ID("Exposed"), 108:2-108:9
EQUAL, 108:9-108:10
ID("Window"), 108:10-108:16
RBRACKET, 108:16-108:17
INTERFACE, 109:1-109:10
ID("HTMLElement"), 109:11-109:22
COLON, 109:23-109:24
ID("Element"), 109:25-109:32
LBRACE, 109:33-109:34
LBRACKET, 110:3-110:4
ID("HTMLConstructor"), 110:4-110:19
RBRACKET, 110:19-110:20
CONSTRUCTOR, 110:21-110:32
LPAREN, 110:32-110:33
RPAREN, 110:33-110:34
SEMI, 110:34-110:35
LBRACKET, 113:3-113:4
ID("CEReactions"), 113:4-113:15
COMMA, 113:15-113:16
ID("Reflect"), 113:17-113:24
RBRACKET, 113:24-113:25
ATTRIBUTE, 113:26-113:35
DOMSTRING, 113:36-113:45
ID("title"), 113:46-113:51
SEMI, 113:51-113:52
LBRACKET, 114:3-114:4
ID("CEReactions"), 114:4-114:15
COMMA, 114:15-114:16
ID("Reflect"), 114:17-114:24
RBRACKET, 114:24-114:25
ATTRIBUTE, 114:26-114:35
DOMSTRING, 114:36-114:45
ID("lang"), 114:46-114:50
SEMI, 114:50-114:51
LBRACKET, 115:3-115:4
ID("CEReactions"), 115:4-115:15
RBRACKET, 115:15-115:16
ATTRIBUTE, 115:17-115:26
BOOLEAN, 115:27-115:34
ID("translate"), 115:35-115:44
SEMI, 115:44-115:45
LBRACKET, 116:3-116:4
ID("CEReactions"), 116:4-116:15
RBRACKET, 116:15-116:16
ATTRIBUTE, 116:17-116:26
DOMSTRING, 116:27-116:36
ID("dir"), 116:37-116:40
SEMI, 116:40-116:41
LBRACKET, 119:3-119:4
ID("CEReactions"), 119:4-119:15
RBRACKET, 119:15-119:16
ATTRIBUTE, 119:17-119:26
LPAREN, 119:27-119:28
BOOLEAN, 119:28-119:35
OR, 119:36-119:38
UNRESTRICTED, 119:39-119:51
DOUBLE, 119:52-119:58
OR, 119:59-119:61
DOMSTRING, 119:62-119:71
RPAREN, 119:71-119:72
QUESTION, 119:72-119:73
ID("hidden"), 119:74-119:80
SEMI, 119:80-119:81
LBRACKET, 120:3-120:4
ID("CEReactions"), 120:4-120:15
COMMA, 120:15-120:16
ID("Reflect"), 120:17-120:24
RBRACKET, 120:24-120:25
ATTRIBUTE, 120:26-120:35
BOOLEAN, 120:36-120:43
ID("inert"), 120:44-120:49
SEMI, 120:49-120:50
UNDEFINED, 121:3-121:12
ID("click"), 121:13-121:18
LPAREN, 121:18-121:19
RPAREN, 121:19-121:20
SEMI, 121:20-121:21
LBRACKET, 122:3-122:4
ID("CEReactions"), 122:4-122:15
COMMA, 122:15-122:16
ID("Reflect"), 122:17-122:24
RBRACKET, 122:24-122:25
ATTRIBUTE, 122:26-122:35
DOMSTRING, 122:36-122:45
ID("accessKey"), 122:46-122:55
SEMI, 122:55-122:56
READONLY, 123:3-123:11
ATTRIBUTE, 123:12-123:21
DOMSTRING, 123:22-123:31
ID("accessKeyLabel"), 123:32-123:46
SEMI, 123:46-123:47
LBRACKET, 124:3-124:4
ID("CEReactions"), 124:4-124:15
RBRACKET, 124:15-124:16
ATTRIBUTE, 124:17-124:26
BOOLEAN, 124:27-124:34
ID("draggable"), 124:35-124:44
SEMI, 124:44-124:45
LBRACKET, 125:3-125:4
ID("CEReactions"), 125:4-125:15
RBRACKET, 125:15-125:16
ATTRIBUTE, 125:17-125:26
BOOLEAN, 125:27-125:34
ID("spellcheck"), 125:35-125:45
SEMI, 125:45-125:46
LBRACKET, 126:3-126:4
ID("CEReactions"), 126:4-126:15
COMMA, 126:15-126:16
ID("ReflectSetter"), 126:17-126:30
RBRACKET, 126:30-126:31
ATTRIBUTE, 126:32-126:41
DOMSTRING, 126:42-126:51
ID("writingSuggestions"), 126:52-126:70
SEMI, 126:70-126:71
LBRACKET, 127:3-127:4
ID("CEReactions"), 127:4-127:15
COMMA, 127:15-127:16
ID("ReflectSetter"), 127:17-127:30
RBRACKET, 127:30-127:31
ATTRIBUTE, 127:32-127:41
DOMSTRING, 127:42-127:51
ID("autocapitalize"), 127:52-127:66
SEMI, 127:66-127:67
LBRACKET, 128:3-128:4
ID("CEReactions"), 128:4-128:15
RBRACKET, 128:15-128:16
ATTRIBUTE, 128:17-128:26
BOOLEAN, 128:27-128:34
ID("autocorrect"), 128:35-128:46
SEMI, 128:46-128:47
LBRACKET, 130:3-130:4
ID("CEReactions"), 130:4-130:15
RBRACKET, 130:15-130:16
ATTRIBUTE, 130:17-130:26
LBRACKET, 130:27-130:28
ID("LegacyNullToEmptyString"), 130:28-130:51
RBRACKET, 130:51-130:52
DOMSTRING, 130:53-130:62
ID("innerText"), 130:63-130:72
SEMI, 130:72-130:73
LBRACKET, 131:3-131:4
ID("CEReactions"), 131:4-131:15
RBRACKET, 131:15-131:16
ATTRIBUTE, 131:17-131:26
LBRACKET, 131:27-131:28
ID("LegacyNullToEmptyString"), 131:28-131:51
RBRACKET, 131:51-131:52
DOMSTRING, 131:53-131:62
ID("outerText"), 131:63-131:72
SEMI, 131:72-131:73
ID("ElementInternals"), 133:3-133:19
ID("attachInternals"), 133:20-133:35
LPAREN, 133:35-133:36
RPAREN, 133:36-133:37
SEMI, 133:37-133:38
UNDEFINED, 136:3-136:12
ID("showPopover"), 136:13-136:24
LPAREN, 136:24-136:25
OPTIONAL, 136:25-136:33
ID("ShowPopoverOptions"), 136:34-136:52
ID("options"), 136:53-136:60
EQUAL, 136:61-136:62
LBRACE, 136:63-136:64
RBRACE, 136:64-136:65
RPAREN, 136:65-136:66
SEMI, 136:66-136:67
UNDEFINED, 137:3-137:12
ID("hidePopover"), 137:13-137:24
LPAREN, 137:24-137:25
RPAREN, 137:25-137:26
SEMI, 137:26-137:27
BOOLEAN, 138:3-138:10
ID("togglePopover"), 138:11-138:24
LPAREN, 138:24-138:25
OPTIONAL, 138:25-138:33
LPAREN, 138:34-138:35
ID("TogglePopoverOptions"), 138:35-138:55
OR, 138:56-138:58
BOOLEAN, 138:59-138:66
RPAREN, 138:66-138:67
ID("options"), 138:68-138:75
EQUAL, 138:76-138:77
LBRACE, 138:78-138:79
RBRACE, 138:79-138:80
RPAREN, 138:80-138:81
SEMI, 138:81-138:82
LBRACKET, 139:3-139:4
ID("CEReactions"), 139:4-139:15
RBRACKET, 139:15-139:16
ATTRIBUTE, 139:17-139:26
DOMSTRING, 139:27-139:36
QUESTION, 139:36-139:37
ID("popover"), 139:38-139:45
SEMI, 139:45-139:46
LBRACKET, 141:3-141:4
ID("CEReactions"), 141:4-141:15
COMMA, 141:15-141:16
ID("Reflect"), 141:17-141:24
COMMA, 141:24-141:25
ID("ReflectRange"), 141:26-141:38
EQUAL, 141:38-141:39
LPAREN, 141:39-141:40
INT("0"), 141:40-141:41
COMMA, 141:41-141:42
INT("8"), 141:43-141:44
RPAREN, 141:44-141:45
RBRACKET, 141:45-141:46
ATTRIBUTE, 141:47-141:56
UNSIGNED, 141:57-141:65
LONG, 141:66-141:70
ID("headingOffset"), 141:71-141:84
SEMI, 141:84-141:85
LBRACKET, 142:3-142:4
ID("CEReactions"), 142:4-142:15
COMMA, 142:15-142:16
ID("Reflect"), 142:17-142:24
RBRACKET, 142:24-142:25
ATTRIBUTE, 142:26-142:35
BOOLEAN, 142:36-142:43
ID("headingReset"), 142:44-142:56
SEMI, 142:56-142:57
RBRACE, 143:1-143:2
SEMI, 143:2-143:3
DICTIONARY, 145:1-145:11
ID("ShowPopoverOptions"), 145:12-145:30
LBRACE, 145:31-145:32
ID("HTMLElement"), 146:3-146:14
ID("source"), 146:15-146:21
SEMI, 146:21-146:22
RBRACE, 147:1-147:2
SEMI, 147:2-147:3
DICTIONARY, 149:1-149:11
ID("TogglePopoverOptions"), 149:12-149:32
COLON, 149:33-149:34
ID("ShowPopoverOptions"), 149:35-149:53
LBRACE, 149:54-149:55
BOOLEAN, 150:3-150:10
ID("force"), 150:11-150:16
SEMI, 150:16-150:17
RBRACE, 151:1-151:2
SEMI, 151:2-151:3
ID("HTMLElement"), 153:1-153:12
INCLUDES, 153:13-153:21
ID("GlobalEventHandlers"), 153:22-153:41
SEMI, 153:41-153:42
ID("HTMLElement"), 154:1-154:12
INCLUDES, 154:13-154:21
ID("ElementContentEditable"), 154:22-154:44
SEMI, 154:44-154:45
ID("HTMLElement"), 155:1-155:12
INCLUDES, 155:13-155:21
ID("HTMLOrSVGElement"), 155:22-155:38
SEMI, 155:38-155:39
LBRACKET, 157:1-157:2
ID("Exposed"), 157:2-157:9
EQUAL, 157:9-157:10
ID("Window"), 157:10-157:16
RBRACKET, 157:16-157:17
INTERFACE, 158:1-158:10
ID("HTMLUnknownElement"), 158:11-158:29
COLON, 158:30-158:31
ID("HTMLElement"), 158:32-158:43
LBRACE, 158:44-158:45
RBRACE, 160:1-160:2
SEMI, 160:2-160:3
INTERFACE, 162:1-162:10
MIXIN, 162:11-162:16
ID("HTMLOrSVGElement"), 162:17-162:33
LBRACE, 162:34-162:35
LBRACKET, 163:3-163:4
ID("SameObject"), 163:4-163:14
RBRACKET, 163:14-163:15
READONLY, 163:16-163:24
ATTRIBUTE, 163:25-163:34
ID("DOMStringMap"), 163:35-163:47
ID("dataset"), 163:48-163:55
SEMI, 163:55-163:56
ATTRIBUTE, 164:3-164:12
DOMSTRING, 164:13-164:22
ID("nonce"), 164:23-164:28
SEMI, 164:28-164:29
LBRACKET, 166:3-166:4
ID("CEReactions"), 166:4-166:15
COMMA, 166:15-166:16
ID("Reflect"), 166:17-166:24
RBRACKET, 166:24-166:25
ATTRIBUTE, 166:26-166:35
BOOLEAN, 166:36-166:43
ID("autofocus"), 166:44-166:53
SEMI, 166:53-166:54
LBRACKET, 167:3-167:4
ID("CEReactions"), 167:4-167:15
COMMA, 167:15-167:16
ID("ReflectSetter"), 167:17-167:30
RBRACKET, 167:30-167:31
ATTRIBUTE, 167:32-167:41
LONG, 167:42-167:46
ID("tabIndex"), 167:47-167:55
SEMI, 167:55-167:56
UNDEFINED, 168:3-168:12
ID("focus"), 168:13-168:18
LPAREN, 168:18-168:19
OPTIONAL, 168:19-168:27
ID("FocusOptions"), 168:28-168:40
ID("options"), 168:41-168:48
EQUAL, 168:49-168:50
LBRACE, 168:51-168:52
RBRACE, 168:52-168:53
RPAREN, 168:53-168:54
SEMI, 168:54-168:55
UNDEFINED, 169:3-169:12
ID("blur"), 169:13-169:17
LPAREN, 169:17-169:18
RPAREN, 169:18-169:19
SEMI, 169:19-169:20
RBRACE, 170:1-170:2
SEMI, 170:2-170:3
LBRACKET, 172:1-172:2
ID("Exposed"), 172:2-172:9
EQUAL, 172:9-172:10
ID("Window"), 172:10-172:16
COMMA, 172:16-172:17
ID("LegacyOverrideBuiltIns"), 173:2-173:24
RBRACKET, 173:24-173:25
INTERFACE, 174:1-174:10
ID("DOMStringMap"), 174:11-174:23
LBRACE, 174:24-174:25
GETTER, 175:3-175:9
DOMSTRING, 175:10-175:19
LPAREN, 175:20-175:21
DOMSTRING, 175:21-175:30
ID("name"), 175:31-175:35
RPAREN, 175:35-175:36
SEMI, 175:36-175:37
LBRACKET, 176:3-176:4
ID("CEReactions"), 176:4-176:15
RBRACKET, 176:15-176:16
SETTER, 176:17-176:23
UNDEFINED, 176:24-176:33
LPAREN, 176:34-176:35
DOMSTRING, 176:35-176:44
ID("name"), 176:45-176:49
COMMA, 176:49-176:50
DOMSTRING, 176:51-176:60
ID("value"), 176:61-176:66
RPAREN, 176:66-176:67
SEMI, 176:67-176:68
LBRACKET, 177:3-177:4
ID("CEReactions"), 177:4-177:15
RBRACKET, 177:15-177:16
DELETER, 177:17-177:24
UNDEFINED, 177:25-177:34
LPAREN, 177:35-177:36
DOMSTRING, 177:36-177:45
ID("name"), 177:46-177:50
RPAREN, 177:50-177:51
SEMI, 177:51-177:52
RBRACE, 178:1-178:2
SEMI, 178:2-178:3
LBRACKET, 180:1-180:2
ID("Exposed"), 180:2-180:9
EQUAL, 180:9-180:10
ID("Window"), 180:10-180:16
RBRACKET, 180:16-180:17
INTERFACE, 181:1-181:10
ID("HTMLHtmlElement"), 181:11-181:26
COLON, 181:27-181:28
ID("HTMLElement"), 181:29-181:40
LBRACE, 181:41-181:42
LBRACKET, 182:3-182:4
ID("HTMLConstructor"), 182:4-182:19
RBRACKET, 182:19-182:20
CONSTRUCTOR, 182:21-182:32
LPAREN, 182:32-182:33
RPAREN, 182:33-182:34
SEMI, 182:34-182:35
RBRACE, 185:1-185:2
SEMI, 185:2-185:3
LBRACKET, 187:1-187:2
ID("Exposed"), 187:2-187:9
EQUAL, 187:9-187:10
ID("Window"), 187:10-187:16
RBRACKET, 187:16-187:17
INTERFACE, 188:1-188:10
ID("HTMLHeadElement"), 188:11-188:26
COLON, 188:27-188:28
ID("HTMLElement"), 188:29-188:40
LBRACE, 188:41-188:42
LBRACKET, 189:3-189:4
ID("HTMLConstructor"), 189:4-189:19
RBRACKET, 189:19-189:20
CONSTRUCTOR, 189:21-189:32
LPAREN, 189:32-189:33
RPAREN, 189:33-189:34
SEMI, 189:34-189:35
RBRACE, 190:1-190:2
SEMI, 190:2-190:3
LBRACKET, 192:1-192:2
ID("Exposed"), 192:2-192:9
EQUAL, 192:9-192:10
ID("Window"), 192:10-192:16
RBRACKET, 192:16-192:17
INTERFACE, 193:1-193:10
ID("HTMLTitleElement"), 193:11-193:27
COLON, 193:28-193:29
ID("HTMLElement"), 193:30-193:41
LBRACE, 193:42-193:43
LBRACKET, 194:3-194:4
ID("HTMLConstructor"), 194:4-194:19
RBRACKET, 194:19-194:20
CONSTRUCTOR, 194:21-194:32
LPAREN, 194:32-194:33
RPAREN, 194:33-194:34
SEMI, 194:34-194:35
LBRACKET, 196:3-196:4
ID("CEReactions"), 196:4-196:15
RBRACKET, 196:15-196:16
ATTRIBUTE, 196:17-196:26
DOMSTRING, 196:27-196:36
ID("text"), 196:37-196:41
SEMI, 196:41-196:42
RBRACE, 197:1-197:2
SEMI, 197:2-197:3
LBRACKET, 199:1-199:2
ID("Exposed"), 199:2-199:9
EQUAL, 199:9-199:10
ID("Window"), 199:10-199:16
RBRACKET, 199:16-199:17
INTERFACE, 200:1-200:10
ID("HTMLBaseElement"), 200:11-200:26
COLON, 200:27-200:28
ID("HTMLElement"), 200:29-200:40
LBRACE, 200:41-200:42
LBRACKET, 201:3-201:4
ID("HTMLConstructor"), 201:4-201:19
RBRACKET, 201:19-201:20
CONSTRUCTOR, 201:21-201:32
LPAREN, 201:32-201:33
RPAREN, 201:33-201:34
SEMI, 201:34-201:35
LBRACKET, 203:3-203:4
ID("CEReactions"), 203:4-203:15
COMMA, 203:15-203:16
ID("ReflectSetter"), 203:17-203:30
RBRACKET, 203:30-203:31
ATTRIBUTE, 203:32-203:41
USVSTRING, 203:42-203:51
ID("href"), 203:52-203:56
SEMI, 203:56-203:57
LBRACKET, 204:3-204:4
ID("CEReactions"), 204:4-204:15
COMMA, 204:15-204:16
ID("Reflect"), 204:17-204:24
RBRACKET, 204:24-204:25
ATTRIBUTE, 204:26-204:35
DOMSTRING, 204:36-204:45
ID("target"), 204:46-204:52
SEMI, 204:52-204:53
RBRACE, 205:1-205:2
SEMI, 205:2-205:3
LBRACKET, 207:1-207:2
ID("Exposed"), 207:2-207:9
EQUAL, 207:9-207:10
ID("Window"), 207:10-207:16
RBRACKET, 207:16-207:17
INTERFACE, 208:1-208:10
ID("HTMLLinkElement"), 208:11-208:26
COLON, 208:27-208:28
ID("HTMLElement"), 208:29-208:40
LBRACE, 208:41-208:42
LBRACKET, 209:3-209:4
ID("HTMLConstructor"), 209:4-209:19
RBRACKET, 209:19-209:20
CONSTRUCTOR, 209:21-209:32
LPAREN, 209:32-209:33
RPAREN, 209:33-209:34
SEMI, 209:34-209:35
LBRACKET, 211:3-211:4
ID("CEReactions"), 211:4-211:15
COMMA, 211:15-211:16
ID("ReflectURL"), 211:17-211:27
RBRACKET, 211:27-211:28
ATTRIBUTE, 211:29-211:38
USVSTRING, 211:39-211:48
ID("href"), 211:49-211:53
SEMI, 211:53-211:54
LBRACKET, 212:3-212:4
ID("CEReactions"), 212:4-212:15
RBRACKET, 212:15-212:16
ATTRIBUTE, 212:17-212:26
DOMSTRING, 212:27-212:36
QUESTION, 212:36-212:37
ID("crossOrigin"), 212:38-212:49
SEMI, 212:49-212:50
LBRACKET, 213:3-213:4
ID("CEReactions"), 213:4-213:15
COMMA, 213:15-213:16
ID("Reflect"), 213:17-213:24
RBRACKET, 213:24-213:25
ATTRIBUTE, 213:26-213:35
DOMSTRING, 213:36-213:45
ID("rel"), 213:46-213:49
SEMI, 213:49-213:50
LBRACKET, 214:3-214:4
ID("CEReactions"), 214:4-214:15
RBRACKET, 214:15-214:16
ATTRIBUTE, 214:17-214:26
DOMSTRING, 214:27-214:36
ID("as"), 214:37-214:39
SEMI, 214:39-214:40
LBRACKET, 215:3-215:4
ID("SameObject"), 215:4-215:14
COMMA, 215:14-215:15
ID("PutForwards"), 215:16-215:27
EQUAL, 215:27-215:28
ID("value"), 215:28-215:33
COMMA, 215:33-215:34
ID("Reflect"), 215:35-215:42
EQUAL, 215:42-215:43
STRING("\"rel\""), 215:43-215:48
RBRACKET, 215:48-215:49
READONLY, 215:50-215:58
ATTRIBUTE, 215:59-215:68
ID("DOMTokenList"), 215:69-215:81
ID("relList"), 215:82-215:89
SEMI, 215:89-215:90
LBRACKET, 216:3-216:4
ID("CEReactions"), 216:4-216:15
COMMA, 216:15-216:16
ID("Reflect"), 216:17-216:24
RBRACKET, 216:24-216:25
ATTRIBUTE, 216:26-216:35
DOMSTRING, 216:36-216:45
ID("media"), 216:46-216:51
SEMI, 216:51-216:52
LBRACKET, 217:3-217:4
ID("CEReactions"), 217:4-217:15
COMMA, 217:15-217:16
ID("Reflect"), 217:17-217:24
RBRACKET, 217:24-217:25
ATTRIBUTE, 217:26-217:35
DOMSTRING, 217:36-217:45
ID("integrity"), 217:46-217:55
SEMI, 217:55-217:56
LBRACKET, 218:3-218:4
ID("CEReactions"), 218:4-218:15
COMMA, 218:15-218:16
ID("Reflect"), 218:17-218:24
RBRACKET, 218:24-218:25
ATTRIBUTE, 218:26-218:35
DOMSTRING, 218:36-218:45
ID("hreflang"), 218:46-218:54
SEMI, 218:54-218:55
LBRACKET, 219:3-219:4
ID("CEReactions"), 219:4-219:15
COMMA, 219:15-219:16
ID("Reflect"), 219:17-219:24
RBRACKET, 219:24-219:25
ATTRIBUTE, 219:26-219:35
DOMSTRING, 219:36-219:45
ID("type"), 219:46-219:50
SEMI, 219:50-219:51
LBRACKET, 220:3-220:4
ID("SameObject"), 220:4-220:14
COMMA, 220:14-220:15
ID("PutForwards"), 220:16-220:27
EQUAL, 220:27-220:28
ID("value"), 220:28-220:33
COMMA, 220:33-220:34
ID("Reflect"), 220:35-220:42
RBRACKET, 220:42-220:43
READONLY, 220:44-220:52
ATTRIBUTE, 220:53-220:62
ID("DOMTokenList"), 220:63-220:75
ID("sizes"), 220:76-220:81
SEMI, 220:81-220:82
LBRACKET, 221:3-221:4
ID("CEReactions"), 221:4-221:15
COMMA, 221:15-221:16
ID("Reflect"), 221:17-221:24
RBRACKET, 221:24-221:25
ATTRIBUTE, 221:26-221:35
USVSTRING, 221:36-221:45
ID("imageSrcset"), 221:46-221:57
SEMI, 221:57-221:58
LBRACKET, 222:3-222:4
ID("CEReactions"), 222:4-222:15
COMMA, 222:15-222:16
ID("Reflect"), 222:17-222:24
RBRACKET, 222:24-222:25
ATTRIBUTE, 222:26-222:35
DOMSTRING, 222:36-222:45
ID("imageSizes"), 222:46-222:56
SEMI, 222:56-222:57
LBRACKET, 223:3-223:4
ID("CEReactions"), 223:4-223:15
RBRACKET, 223:15-223:16
ATTRIBUTE, 223:17-223:26
DOMSTRING, 223:27-223:36
ID("referrerPolicy"), 223:37-223:51
SEMI, 223:51-223:52
LBRACKET, 224:3-224:4
ID("SameObject"), 224:4-224:14
COMMA, 224:14-224:15
ID("PutForwards"), 224:16-224:27
EQUAL, 224:27-224:28
ID("value"), 224:28-224:33
COMMA, 224:33-224:34
ID("Reflect"), 224:35-224:42
RBRACKET, 224:42-224:43
READONLY, 224:44-224:52
ATTRIBUTE, 224:53-224:62
ID("DOMTokenList"), 224:63-224:75
ID("blocking"), 224:76-224:84
SEMI, 224:84-224:85
LBRACKET, 225:3-225:4
ID("CEReactions"), 225:4-225:15
COMMA, 225:15-225:16
ID("Reflect"), 225:17-225:24
RBRACKET, 225:24-225:25
ATTRIBUTE, 225:26-225:35
BOOLEAN, 225:36-225:43
ID("disabled"), 225:44-225:52
SEMI, 225:52-225:53
LBRACKET, 226:3-226:4
ID("CEReactions"), 226:4-226:15
RBRACKET, 226:15-226:16
ATTRIBUTE, 226:17-226:26
DOMSTRING, 226:27-226:36
ID("fetchPriority"), 226:37-226:50
SEMI, 226:50-226:51
RBRACE, 229:1-229:2
SEMI, 229:2-229:3
ID("HTMLLinkElement"), 230:1-230:16
INCLUDES, 230:17-230:25
ID("LinkStyle"), 230:26-230:35
SEMI, 230:35-230:36
LBRACKET, 232:1-232:2
ID("Exposed"), 232:2-232:9
EQUAL, 232:9-232:10
ID("Window"), 232:10-232:16
RBRACKET, 232:16-232:17
INTERFACE, 233:1-233:10
ID("HTMLMetaElement"), 233:11-233:26
COLON, 233:27-233:28
ID("HTMLElement"), 233:29-233:40
LBRACE, 233:41-233:42
LBRACKET, 234:3-234:4
ID("HTMLConstructor"), 234:4-234:19
RBRACKET, 234:19-234:20
CONSTRUCTOR, 234:21-234:32
LPAREN, 234:32-234:33
RPAREN, 234:33-234:34
SEMI, 234:34-234:35
LBRACKET, 236:3-236:4
ID("CEReactions"), 236:4-236:15
COMMA, 236:15-236:16
ID("Reflect"), 236:17-236:24
RBRACKET, 236:24-236:25
ATTRIBUTE, 236:26-236:35
DOMSTRING, 236:36-236:45
ID("name"), 236:46-236:50
SEMI, 236:50-236:51
LBRACKET, 237:3-237:4
ID("CEReactions"), 237:4-237:15
COMMA, 237:15-237:16
ID("Reflect"), 237:17-237:24
EQUAL, 237:24-237:25
STRING("\"http-equiv\""), 237:25-237:37
RBRACKET, 237:37-237:38
ATTRIBUTE, 237:39-237:48
DOMSTRING, 237:49-237:58
ID("httpEquiv"), 237:59-237:68
SEMI, 237:68-237:69
LBRACKET, 238:3-238:4
ID("CEReactions"), 238:4-238:15
COMMA, 238:15-238:16
ID("Reflect"), 238:17-238:24
RBRACKET, 238:24-238:25
ATTRIBUTE, 238:26-238:35
DOMSTRING, 238:36-238:45
ID("content"), 238:46-238:53
SEMI, 238:53-238:54
LBRACKET, 239:3-239:4
ID("CEReactions"), 239:4-239:15
COMMA, 239:15-239:16
ID("Reflect"), 239:17-239:24
RBRACKET, 239:24-239:25
ATTRIBUTE, 239:26-239:35
DOMSTRING, 239:36-239:45
ID("media"), 239:46-239:51
SEMI, 239:51-239:52
RBRACE, 242:1-242:2
SEMI, 242:2-242:3
LBRACKET, 244:1-244:2
ID("Exposed"), 244:2-244:9
EQUAL, 244:9-244:10
ID("Window"), 244:10-244:16
RBRACKET, 244:16-244:17
INTERFACE, 245:1-245:10
ID("HTMLStyleElement"), 245:11-245:27
COLON, 245:28-245:29
ID("HTMLElement"), 245:30-245:41
LBRACE, 245:42-245:43
LBRACKET, 246:3-246:4
ID("HTMLConstructor"), 246:4-246:19
RBRACKET, 246:19-246:20
CONSTRUCTOR, 246:21-246:32
LPAREN, 246:32-246:33
RPAREN, 246:33-246:34
SEMI, 246:34-246:35
ATTRIBUTE, 248:3-248:12
BOOLEAN, 248:13-248:20
ID("disabled"), 248:21-248:29
SEMI, 248:29-248:30
LBRACKET, 249:3-249:4
ID("CEReactions"), 249:4-249:15
COMMA, 249:15-249:16
ID("Reflect"), 249:17-249:24
RBRACKET, 249:24-249:25
ATTRIBUTE, 249:26-249:35
DOMSTRING, 249:36-249:45
ID("media"), 249:46-249:51
SEMI, 249:51-249:52
LBRACKET, 250:3-250:4
ID("SameObject"), 250:4-250:14
COMMA, 250:14-250:15
ID("PutForwards"), 250:16-250:27
EQUAL, 250:27-250:28
ID("value"), 250:28-250:33
COMMA, 250:33-250:34
ID("Reflect"), 250:35-250:42
RBRACKET, 250:42-250:43
READONLY, 250:44-250:52
ATTRIBUTE, 250:53-250:62
ID("DOMTokenList"), 250:63-250:75
ID("blocking"), 250:76-250:84
SEMI, 250:84-250:85
RBRACE, 253:1-253:2
SEMI, 253:2-253:3
ID("HTMLStyleElement"), 254:1-254:17
INCLUDES, 254:18-254:26
ID("LinkStyle"), 254:27-254:36
SEMI, 254:36-254:37
LBRACKET, 256:1-256:2
ID("Exposed"), 256:2-256:9
EQUAL, 256:9-256:10
ID("Window"), 256:10-256:16
RBRACKET, 256:16-256:17
INTERFACE, 257:1-257:10
ID("HTMLBodyElement"), 257:11-257:26
COLON, 257:27-257:28
ID("HTMLElement"), 257:29-257:40
LBRACE, 257:41-257:42
LBRACKET, 258:3-258:4
ID("HTMLConstructor"), 258:4-258:19
RBRACKET, 258:19-258:20
CONSTRUCTOR, 258:21-258:32
LPAREN, 258:32-258:33
RPAREN, 258:33-258:34
SEMI, 258:34-258:35
RBRACE, 261:1-261:2
SEMI, 261:2-261:3
ID("HTMLBodyElement"), 263:1-263:16
INCLUDES, 263:17-263:25
ID("WindowEventHandlers"), 263:26-263:45
SEMI, 263:45-263:46
LBRACKET, 265:1-265:2
ID("Exposed"), 265:2-265:9
EQUAL, 265:9-265:10
ID("Window"), 265:10-265:16
RBRACKET, 265:16-265:17
INTERFACE, 266:1-266:10
ID("HTMLHeadingElement"), 266:11-266:29
COLON, 266:30-266:31
ID("HTMLElement"), 266:32-266:43
LBRACE, 266:44-266:45
LBRACKET, 267:3-267:4
ID("HTMLConstructor"), 267:4-267:19
RBRACKET, 267:19-267:20
CONSTRUCTOR, 267:21-267:32
LPAREN, 267:32-267:33
RPAREN, 267:33-267:34
SEMI, 267:34-267:35
RBRACE, 270:1-270:2
SEMI, 270:2-270:3
LBRACKET, 272:1-272:2
ID("Exposed"), 272:2-272:9
EQUAL, 272:9-272:10
ID("Window"), 272:10-272:16
RBRACKET, 272:16-272:17
INTERFACE, 273:1-273:10
ID("HTMLParagraphElement"), 273:11-273:31
COLON, 273:32-273:33
ID("HTMLElement"), 273:34-273:45
LBRACE, 273:46-273:47
LBRACKET, 274:3-274:4
ID("HTMLConstructor"), 274:4-274:19
RBRACKET, 274:19-274:20
CONSTRUCTOR, 274:21-274:32
LPAREN, 274:32-274:33
RPAREN, 274:33-274:34
SEMI, 274:34-274:35
RBRACE, 277:1-277:2
SEMI, 277:2-277:3
LBRACKET, 279:1-279:2
ID("Exposed"), 279:2-279:9
EQUAL, 279:9-279:10
ID("Window"), 279:10-279:16
RBRACKET, 279:16-279:17
INTERFACE, 280:1-280:10
ID("HTMLHRElement"), 280:11-280:24
COLON, 280:25-280:26
ID("HTMLElement"), 280:27-280:38
LBRACE, 280:39-280:40
LBRACKET, 281:3-281:4
ID("HTMLConstructor"), 281:4-281:19
RBRACKET, 281:19-281:20
CONSTRUCTOR, 281:21-281:32
LPAREN, 281:32-281:33
RPAREN, 281:33-281:34
SEMI, 281:34-281:35
RBRACE, 284:1-284:2
SEMI, 284:2-284:3
LBRACKET, 286:1-286:2
ID("Exposed"), 286:2-286:9
EQUAL, 286:9-286:10
ID("Window"), 286:10-286:16
RBRACKET, 286:16-286:17
INTERFACE, 287:1-287:10
ID("HTMLPreElement"), 287:11-287:25
COLON, 287:26-287:27
ID("HTMLElement"), 287:28-287:39
LBRACE, 287:40-287:41
LBRACKET, 288:3-288:4
ID("HTMLConstructor"), 288:4-288:19
RBRACKET, 288:19-288:20
CONSTRUCTOR, 288:21-288:32
LPAREN, 288:32-288:33
RPAREN, 288:33-288:34
SEMI, 288:34-288:35
RBRACE, 291:1-291:2
SEMI, 291:2-291:3
LBRACKET, 293:1-293:2
ID("Exposed"), 293:2-293:9
EQUAL, 293:9-293:10
ID("Window"), 293:10-293:16
RBRACKET, 293:16-293:17
INTERFACE, 294:1-294:10
ID("HTMLQuoteElement"), 294:11-294:27
COLON, 294:28-294:29
ID("HTMLElement"), 294:30-294:41
LBRACE, 294:42-294:43
LBRACKET, 295:3-295:4
ID("HTMLConstructor"), 295:4-295:19
RBRACKET, 295:19-295:20
CONSTRUCTOR, 295:21-295:32
LPAREN, 295:32-295:33
RPAREN, 295:33-295:34
SEMI, 295:34-295:35
LBRACKET, 297:3-297:4
ID("CEReactions"), 297:4-297:15
COMMA, 297:15-297:16
ID("ReflectURL"), 297:17-297:27
RBRACKET, 297:27-297:28
ATTRIBUTE, 297:29-297:38
USVSTRING, 297:39-297:48
ID("cite"), 297:49-297:53
SEMI, 297:53-297:54
RBRACE, 298:1-298:2
SEMI, 298:2-298:3
LBRACKET, 300:1-300:2
ID("Exposed"), 300:2-300:9
EQUAL, 300:9-300:10
ID("Window"), 300:10-300:16
RBRACKET, 300:16-300:17
INTERFACE, 301:1-301:10
ID("HTMLOListElement"), 301:11-301:27
COLON, 301:28-301:29
ID("HTMLElement"), 301:30-301:41
LBRACE, 301:42-301:43
LBRACKET, 302:3-302:4
ID("HTMLConstructor"), 302:4-302:19
RBRACKET, 302:19-302:20
CONSTRUCTOR, 302:21-302:32
LPAREN, 302:32-302:33
RPAREN, 302:33-302:34
SEMI, 302:34-302:35
LBRACKET, 304:3-304:4
ID("CEReactions"), 304:4-304:15
COMMA, 304:15-304:16
ID("Reflect"), 304:17-304:24
RBRACKET, 304:24-304:25
ATTRIBUTE, 304:26-304:35
BOOLEAN, 304:36-304:43
ID("reversed"), 304:44-304:52
SEMI, 304:52-304:53
LBRACKET, 305:3-305:4
ID("CEReactions"), 305:4-305:15
COMMA, 305:15-305:16
ID("Reflect"), 305:17-305:24
COMMA, 305:24-305:25
ID("ReflectDefault"), 305:26-305:40
EQUAL, 305:40-305:41
INT("1"), 305:41-305:42
RBRACKET, 305:42-305:43
ATTRIBUTE, 305:44-305:53
LONG, 305:54-305:58
ID("start"), 305:59-305:64
SEMI, 305:64-305:65
LBRACKET, 306:3-306:4
ID("CEReactions"), 306:4-306:15
COMMA, 306:15-306:16
ID("Reflect"), 306:17-306:24
RBRACKET, 306:24-306:25
ATTRIBUTE, 306:26-306:35
DOMSTRING, 306:36-306:45
ID("type"), 306:46-306:50
SEMI, 306:50-306:51
RBRACE, 309:1-309:2
SEMI, 309:2-309:3
LBRACKET, 311:1-311:2
ID("Exposed"), 311:2-311:9
EQUAL, 311:9-311:10
ID("Window"), 311:10-311:16
RBRACKET, 311:16-311:17
INTERFACE, 312:1-312:10
ID("HTMLUListElement"), 312:11-312:27
COLON, 312:28-312:29
ID("HTMLElement"), 312:30-312:41
LBRACE, 312:42-312:43
LBRACKET, 313:3-313:4
ID("HTMLConstructor"), 313:4-313:19
RBRACKET, 313:19-313:20
CONSTRUCTOR, 313:21-313:32
LPAREN, 313:32-313:33
RPAREN, 313:33-313:34
SEMI, 313:34-313:35
RBRACE, 316:1-316:2
SEMI, 316:2-316:3
LBRACKET, 318:1-318:2
ID("Exposed"), 318:2-318:9
EQUAL, 318:9-318:10
ID("Window"), 318:10-318:16
RBRACKET, 318:16-318:17
INTERFACE, 319:1-319:10
ID("HTMLMenuElement"), 319:11-319:26
COLON, 319:27-319:28
ID("HTMLElement"), 319:29-319:40
LBRACE, 319:41-319:42
LBRACKET, 320:3-320:4
ID("HTMLConstructor"), 320:4-320:19
RBRACKET, 320:19-320:20
CONSTRUCTOR, 320:21-320:32
LPAREN, 320:32-320:33
RPAREN, 320:33-320:34
SEMI, 320:34-320:35
RBRACE, 323:1-323:2
SEMI, 323:2-323:3
LBRACKET, 325:1-325:2
ID("Exposed"), 325:2-325:9
EQUAL, 325:9-325:10
ID("Window"), 325:10-325:16
RBRACKET, 325:16-325:17
INTERFACE, 326:1-326:10
ID("HTMLLIElement"), 326:11-326:24
COLON, 326:25-326:26
ID("HTMLElement"), 326:27-326:38
LBRACE, 326:39-326:40
LBRACKET, 327:3-327:4
ID("HTMLConstructor"), 327:4-327:19
RBRACKET, 327:19-327:20
CONSTRUCTOR, 327:21-327:32
LPAREN, 327:32-327:33
RPAREN, 327:33-327:34
SEMI, 327:34-327:35
LBRACKET, 329:3-329:4
ID("CEReactions"), 329:4-329:15
COMMA, 329:15-329:16
ID("Reflect"), 329:17-329:24
RBRACKET, 329:24-329:25
ATTRIBUTE, 329:26-329:35
LONG, 329:36-329:40
ID("value"), 329:41-329:46
SEMI, 329:46-329:47
RBRACE, 332:1-332:2
SEMI, 332:2-332:3
LBRACKET, 334:1-334:2
ID("Exposed"), 334:2-334:9
EQUAL, 334:9-334:10
ID("Window"), 334:10-334:16
RBRACKET, 334:16-334:17
INTERFACE, 335:1-335:10
ID("HTMLDListElement"), 335:11-335:27
COLON, 335:28-335:29
ID("HTMLElement"), 335:30-335:41
LBRACE, 335:42-335:43
LBRACKET, 336:3-336:4
ID("HTMLConstructor"), 336:4-336:19
RBRACKET, 336:19-336:20
CONSTRUCTOR, 336:21-336:32
LPAREN, 336:32-336:33
RPAREN, 336:33-336:34
SEMI, 336:34-336:35
RBRACE, 339:1-339:2
SEMI, 339:2-339:3
LBRACKET, 341:1-341:2
ID("Exposed"), 341:2-341:9
EQUAL, 341:9-341:10
ID("Window"), 341:10-341:16
RBRACKET, 341:16-341:17
INTERFACE, 342:1-342:10
ID("HTMLDivElement"), 342:11-342:25
COLON, 342:26-342:27
ID("HTMLElement"), 342:28-342:39
LBRACE, 342:40-342:41
LBRACKET, 343:3-343:4
ID("HTMLConstructor"), 343:4-343:19
RBRACKET, 343:19-343:20
CONSTRUCTOR, 343:21-343:32
LPAREN, 343:32-343:33
RPAREN, 343:33-343:34
SEMI, 343:34-343:35
RBRACE, 346:1-346:2
SEMI, 346:2-346:3
LBRACKET, 348:1-348:2
ID("Exposed"), 348:2-348:9
EQUAL, 348:9-348:10
ID("Window"), 348:10-348:16
RBRACKET, 348:16-348:17
INTERFACE, 349:1-349:10
ID("HTMLAnchorElement"), 349:11-349:28
COLON, 349:29-349:30
ID("HTMLElement"), 349:31-349:42
LBRACE, 349:43-349:44
LBRACKET, 350:3-350:4
ID("HTMLConstructor"), 350:4-350:19
RBRACKET, 350:19-350:20
CONSTRUCTOR, 350:21-350:32
LPAREN, 350:32-350:33
RPAREN, 350:33-350:34
SEMI, 350:34-350:35
LBRACKET, 352:3-352:4
ID("CEReactions"), 352:4-352:15
COMMA, 352:15-352:16
ID("Reflect"), 352:17-352:24
RBRACKET, 352:24-352:25
ATTRIBUTE, 352:26-352:35
DOMSTRING, 352:36-352:45
ID("target"), 352:46-352:52
SEMI, 352:52-352:53
LBRACKET, 353:3-353:4
ID("CEReactions"), 353:4-353:15
COMMA, 353:15-353:16
ID("Reflect"), 353:17-353:24
RBRACKET, 353:24-353:25
ATTRIBUTE, 353:26-353:35
DOMSTRING, 353:36-353:45
ID("download"), 353:46-353:54
SEMI, 353:54-353:55
LBRACKET, 354:3-354:4
ID("CEReactions"), 354:4-354:15
COMMA, 354:15-354:16
ID("Reflect"), 354:17-354:24
RBRACKET, 354:24-354:25
ATTRIBUTE, 354:26-354:35
USVSTRING, 354:36-354:45
ID("ping"), 354:46-354:50
SEMI, 354:50-354:51
LBRACKET, 355:3-355:4
ID("CEReactions"), 355:4-355:15
COMMA, 355:15-355:16
ID("Reflect"), 355:17-355:24
RBRACKET, 355:24-355:25
ATTRIBUTE, 355:26-355:35
DOMSTRING, 355:36-355:45
ID("rel"), 355:46-355:49
SEMI, 355:49-355:50
LBRACKET, 356:3-356:4
ID("SameObject"), 356:4-356:14
COMMA, 356:14-356:15
ID("PutForwards"), 356:16-356:27
EQUAL, 356:27-356:28
ID("value"), 356:28-356:33
COMMA, 356:33-356:34
ID("Reflect"), 356:35-356:42
EQUAL, 356:42-356:43
STRING("\"rel\""), 356:43-356:48
RBRACKET, 356:48-356:49
READONLY, 356:50-356:58
ATTRIBUTE, 356:59-356:68
ID("DOMTokenList"), 356:69-356:81
ID("relList"), 356:82-356:89
SEMI, 356:89-356:90
LBRACKET, 357:3-357:4
ID("CEReactions"), 357:4-357:15
COMMA, 357:15-357:16
ID("Reflect"), 357:17-357:24
RBRACKET, 357:24-357:25
ATTRIBUTE, 357:26-357:35
DOMSTRING, 357:36-357:45
ID("hreflang"), 357:46-357:54
SEMI, 357:54-357:55
LBRACKET, 358:3-358:4
ID("CEReactions"), 358:4-358:15
COMMA, 358:15-358:16
ID("Reflect"), 358:17-358:24
RBRACKET, 358:24-358:25
ATTRIBUTE, 358:26-358:35
DOMSTRING, 358:36-358:45
ID("type"), 358:46-358:50
SEMI, 358:50-358:51
LBRACKET, 360:3-360:4
ID("CEReactions"), 360:4-360:15
RBRACKET, 360:15-360:16
ATTRIBUTE, 360:17-360:26
DOMSTRING, 360:27-360:36
ID("text"), 360:37-360:41
SEMI, 360:41-360:42
LBRACKET, 362:3-362:4
ID("CEReactions"), 362:4-362:15
RBRACKET, 362:15-362:16
ATTRIBUTE, 362:17-362:26
DOMSTRING, 362:27-362:36
ID("referrerPolicy"), 362:37-362:51
SEMI, 362:51-362:52
RBRACE, 365:1-365:2
SEMI, 365:2-365:3
ID("HTMLAnchorElement"), 366:1-366:18
INCLUDES, 366:19-366:27
ID("HTMLHyperlinkElementUtils"), 366:28-366:53
SEMI, 366:53-366:54
LBRACKET, 368:1-368:2
ID("Exposed"), 368:2-368:9
EQUAL, 368:9-368:10
ID("Window"), 368:10-368:16
RBRACKET, 368:16-368:17
INTERFACE, 369:1-369:10
ID("HTMLDataElement"), 369:11-369:26
COLON, 369:27-369:28
ID("HTMLElement"), 369:29-369:40
LBRACE, 369:41-369:42
LBRACKET, 370:3-370:4
ID("HTMLConstructor"), 370:4-370:19
RBRACKET, 370:19-370:20
CONSTRUCTOR, 370:21-370:32
LPAREN, 370:32-370:33
RPAREN, 370:33-370:34
SEMI, 370:34-370:35
LBRACKET, 372:3-372:4
ID("CEReactions"), 372:4-372:15
COMMA, 372:15-372:16
ID("Reflect"), 372:17-372:24
RBRACKET, 372:24-372:25
ATTRIBUTE, 372:26-372:35
DOMSTRING, 372:36-372:45
ID("value"), 372:46-372:51
SEMI, 372:51-372:52
RBRACE, 373:1-373:2
SEMI, 373:2-373:3
LBRACKET, 375:1-375:2
ID("Exposed"), 375:2-375:9
EQUAL, 375:9-375:10
ID("Window"), 375:10-375:16
RBRACKET, 375:16-375:17
INTERFACE, 376:1-376:10
ID("HTMLTimeElement"), 376:11-376:26
COLON, 376:27-376:28
ID("HTMLElement"), 376:29-376:40
LBRACE, 376:41-376:42
LBRACKET, 377:3-377:4
ID("HTMLConstructor"), 377:4-377:19
RBRACKET, 377:19-377:20
CONSTRUCTOR, 377:21-377:32
LPAREN, 377:32-377:33
RPAREN, 377:33-377:34
SEMI, 377:34-377:35
LBRACKET, 379:3-379:4
ID("CEReactions"), 379:4-379:15
COMMA, 379:15-379:16
ID("Reflect"), 379:17-379:24
RBRACKET, 379:24-379:25
ATTRIBUTE, 379:26-379:35
DOMSTRING, 379:36-379:45
ID("dateTime"), 379:46-379:54
SEMI, 379:54-379:55
RBRACE, 380:1-380:2
SEMI, 380:2-380:3
LBRACKET, 382:1-382:2
ID("Exposed"), 382:2-382:9
EQUAL, 382:9-382:10
ID("Window"), 382:10-382:16
RBRACKET, 382:16-382:17
INTERFACE, 383:1-383:10
ID("HTMLSpanElement"), 383:11-383:26
COLON, 383:27-383:28
ID("HTMLElement"), 383:29-383:40
LBRACE, 383:41-383:42
LBRACKET, 384:3-384:4
ID("HTMLConstructor"), 384:4-384:19
RBRACKET, 384:19-384:20
CONSTRUCTOR, 384:21-384:32
LPAREN, 384:32-384:33
RPAREN, 384:33-384:34
SEMI, 384:34-384:35
RBRACE, 385:1-385:2
SEMI, 385:2-385:3
LBRACKET, 387:1-387:2
ID("Exposed"), 387:2-387:9
EQUAL, 387:9-387:10
ID("Window"), 387:10-387:16
RBRACKET, 387:16-387:17
INTERFACE, 388:1-388:10
ID("HTMLBRElement"), 388:11-388:24
COLON, 388:25-388:26
ID("HTMLElement"), 388:27-388:38
LBRACE, 388:39-388:40
LBRACKET, 389:3-389:4
ID("HTMLConstructor"), 389:4-389:19
RBRACKET, 389:19-389:20
CONSTRUCTOR, 389:21-389:32
LPAREN, 389:32-389:33
RPAREN, 389:33-389:34
SEMI, 389:34-389:35
RBRACE, 392:1-392:2
SEMI, 392:2-392:3
INTERFACE, 394:1-394:10
MIXIN, 394:11-394:16
ID("HTMLHyperlinkElementUtils"), 394:17-394:42
LBRACE, 394:43-394:44
LBRACKET, 395:3-395:4
ID("CEReactions"), 395:4-395:15
COMMA, 395:15-395:16
ID("ReflectSetter"), 395:17-395:30
RBRACKET, 395:30-395:31
STRINGIFIER, 395:32-395:43
ATTRIBUTE, 395:44-395:53
USVSTRING, 395:54-395:63
ID("href"), 395:64-395:68
SEMI, 395:68-395:69
READONLY, 396:3-396:11
ATTRIBUTE, 396:12-396:21
USVSTRING, 396:22-396:31
ID("origin"), 396:32-396:38
SEMI, 396:38-396:39
LBRACKET, 397:3-397:4
ID("CEReactions"), 397:4-397:15
RBRACKET, 397:15-397:16
ATTRIBUTE, 397:17-397:26
USVSTRING, 397:27-397:36
ID("protocol"), 397:37-397:45
SEMI, 397:45-397:46
LBRACKET, 398:3-398:4
ID("CEReactions"), 398:4-398:15
RBRACKET, 398:15-398:16
ATTRIBUTE, 398:17-398:26
USVSTRING, 398:27-398:36
ID("username"), 398:37-398:45
SEMI, 398:45-398:46
LBRACKET, 399:3-399:4
ID("CEReactions"), 399:4-399:15
RBRACKET, 399:15-399:16
ATTRIBUTE, 399:17-399:26
USVSTRING, 399:27-399:36
ID("password"), 399:37-399:45
SEMI, 399:45-399:46
LBRACKET, 400:3-400:4
ID("CEReactions"), 400:4-400:15
RBRACKET, 400:15-400:16
ATTRIBUTE, 400:17-400:26
USVSTRING, 400:27-400:36
ID("host"), 400:37-400:41
SEMI, 400:41-400:42
LBRACKET, 401:3-401:4
ID("CEReactions"), 401:4-401:15
RBRACKET, 401:15-401:16
ATTRIBUTE, 401:17-401:26
USVSTRING, 401:27-401:36
ID("hostname"), 401:37-401:45
SEMI, 401:45-401:46
LBRACKET, 402:3-402:4
ID("CEReactions"), 402:4-402:15
RBRACKET, 402:15-402:16
ATTRIBUTE, 402:17-402:26
USVSTRING, 402:27-402:36
ID("port"), 402:37-402:41
SEMI, 402:41-402:42
LBRACKET, 403:3-403:4
ID("CEReactions"), 403:4-403:15
RBRACKET, 403:15-403:16
ATTRIBUTE, 403:17-403:26
USVSTRING, 403:27-403:36
ID("pathname"), 403:37-403:45
SEMI, 403:45-403:46
LBRACKET, 404:3-404:4
ID("CEReactions"), 404:4-404:15
RBRACKET, 404:15-404:16
ATTRIBUTE, 404:17-404:26
USVSTRING, 404:27-404:36
ID("search"), 404:37-404:43
SEMI, 404:43-404:44
LBRACKET, 405:3-405:4
ID("CEReactions"), 405:4-405:15
RBRACKET, 405:15-405:16
ATTRIBUTE, 405:17-405:26
USVSTRING, 405:27-405:36
ID("hash"), 405:37-405:41
SEMI, 405:41-405:42
RBRACE, 406:1-406:2
SEMI, 406:2-406:3
LBRACKET, 408:1-408:2
ID("Exposed"), 408:2-408:9
EQUAL, 408:9-408:10
ID("Window"), 408:10-408:16
RBRACKET, 408:16-408:17
INTERFACE, 409:1-409:10
ID("HTMLModElement"), 409:11-409:25
COLON, 409:26-409:27
ID("HTMLElement"), 409:28-409:39
LBRACE, 409:40-409:41
LBRACKET, 410:3-410:4
ID("HTMLConstructor"), 410:4-410:19
RBRACKET, 410:19-410:20
CONSTRUCTOR, 410:21-410:32
LPAREN, 410:32-410:33
RPAREN, 410:33-410:34
SEMI, 410:34-410:35
LBRACKET, 412:3-412:4
ID("CEReactions"), 412:4-412:15
COMMA, 412:15-412:16
ID("ReflectURL"), 412:17-412:27
RBRACKET, 412:27-412:28
ATTRIBUTE, 412:29-412:38
USVSTRING, 412:39-412:48
ID("cite"), 412:49-412:53
SEMI, 412:53-412:54
LBRACKET, 413:3-413:4
ID("CEReactions"), 413:4-413:15
COMMA, 413:15-413:16
ID("Reflect"), 413:17-413:24
RBRACKET, 413:24-413:25
ATTRIBUTE, 413:26-413:35
DOMSTRING, 413:36-413:45
ID("dateTime"), 413:46-413:54
SEMI, 413:54-413:55
RBRACE, 414:1-414:2
SEMI, 414:2-414:3
LBRACKET, 416:1-416:2
ID("Exposed"), 416:2-416:9
EQUAL, 416:9-416:10
ID("Window"), 416:10-416:16
RBRACKET, 416:16-416:17
INTERFACE, 417:1-417:10
ID("HTMLPictureElement"), 417:11-417:29
COLON, 417:30-417:31
ID("HTMLElement"), 417:32-417:43
LBRACE, 417:44-417:45
LBRACKET, 418:3-418:4
ID("HTMLConstructor"), 418:4-418:19
RBRACKET, 418:19-418:20
CONSTRUCTOR, 418:21-418:32
LPAREN, 418:32-418:33
RPAREN, 418:33-418:34
SEMI, 418:34-418:35
RBRACE, 419:1-419:2
SEMI, 419:2-419:3
LBRACKET, 421:1-421:2
ID("Exposed"), 421:2-421:9
EQUAL, 421:9-421:10
ID("Window"), 421:10-421:16
RBRACKET, 421:16-421:17
INTERFACE, 422:1-422:10
ID("HTMLSourceElement"), 422:11-422:28
COLON, 422:29-422:30
ID("HTMLElement"), 422:31-422:42
LBRACE, 422:43-422:44
LBRACKET, 423:3-423:4
ID("HTMLConstructor"), 423:4-423:19
RBRACKET, 423:19-423:20
CONSTRUCTOR, 423:21-423:32
LPAREN, 423:32-423:33
RPAREN, 423:33-423:34
SEMI, 423:34-423:35
LBRACKET, 425:3-425:4
ID("CEReactions"), 425:4-425:15
COMMA, 425:15-425:16
ID("ReflectURL"), 425:17-425:27
RBRACKET, 425:27-425:28
ATTRIBUTE, 425:29-425:38
USVSTRING, 425:39-425:48
ID("src"), 425:49-425:52
SEMI, 425:52-425:53
LBRACKET, 426:3-426:4
ID("CEReactions"), 426:4-426:15
COMMA, 426:15-426:16
ID("Reflect"), 426:17-426:24
RBRACKET, 426:24-426:25
ATTRIBUTE, 426:26-426:35
DOMSTRING, 426:36-426:45
ID("type"), 426:46-426:50
SEMI, 426:50-426:51
LBRACKET, 427:3-427:4
ID("CEReactions"), 427:4-427:15
COMMA, 427:15-427:16
ID("Reflect"), 427:17-427:24
RBRACKET, 427:24-427:25
ATTRIBUTE, 427:26-427:35
USVSTRING, 427:36-427:45
ID("srcset"), 427:46-427:52
SEMI, 427:52-427:53
LBRACKET, 428:3-428:4
ID("CEReactions"), 428:4-428:15
COMMA, 428:15-428:16
ID("Reflect"), 428:17-428:24
RBRACKET, 428:24-428:25
ATTRIBUTE, 428:26-428:35
DOMSTRING, 428:36-428:45
ID("sizes"), 428:46-428:51
SEMI, 428:51-428:52
LBRACKET, 429:3-429:4
ID("CEReactions"), 429:4-429:15
COMMA, 429:15-429:16
ID("Reflect"), 429:17-429:24
RBRACKET, 429:24-429:25
ATTRIBUTE, 429:26-429:35
DOMSTRING, 429:36-429:45
ID("media"), 429:46-429:51
SEMI, 429:51-429:52
LBRACKET, 430:3-430:4
ID("CEReactions"), 430:4-430:15
COMMA, 430:15-430:16
ID("Reflect"), 430:17-430:24
RBRACKET, 430:24-430:25
ATTRIBUTE, 430:26-430:35
UNSIGNED, 430:36-430:44
LONG, 430:45-430:49
ID("width"), 430:50-430:55
SEMI, 430:55-430:56
LBRACKET, 431:3-431:4
ID("CEReactions"), 431:4-431:15
COMMA, 431:15-431:16
ID("Reflect"), 431:17-431:24
RBRACKET, 431:24-431:25
ATTRIBUTE, 431:26-431:35
UNSIGNED, 431:36-431:44
LONG, 431:45-431:49
ID("height"), 431:50-431:56
SEMI, 431:56-431:57
RBRACE, 432:1-432:2
SEMI, 432:2-432:3
LBRACKET, 434:1-434:2
ID("Exposed"), 434:2-434:9
EQUAL, 434:9-434:10
ID("Window"), 434:10-434:16
COMMA, 434:16-434:17
ID("LegacyFactoryFunction"), 435:2-435:23
EQUAL, 435:23-435:24
ID("Image"), 435:24-435:29
LPAREN, 435:29-435:30
OPTIONAL, 435:30-435:38
UNSIGNED, 435:39-435:47
LONG, 435:48-435:52
ID("width"), 435:53-435:58
COMMA, 435:58-435:59
OPTIONAL, 435:60-435:68
UNSIGNED, 435:69-435:77
LONG, 435:78-435:82
ID("height"), 435:83-435:89
RPAREN, 435:89-435:90
RBRACKET, 435:90-435:91
INTERFACE, 436:1-436:10
ID("HTMLImageElement"), 436:11-436:27
COLON, 436:28-436:29
ID("HTMLElement"), 436:30-436:41
LBRACE, 436:42-436:43
LBRACKET, 437:3-437:4
ID("HTMLConstructor"), 437:4-437:19
RBRACKET, 437:19-437:20
CONSTRUCTOR, 437:21-437:32
LPAREN, 437:32-437:33
RPAREN, 437:33-437:34
SEMI, 437:34-437:35
LBRACKET, 439:3-439:4
ID("CEReactions"), 439:4-439:15
COMMA, 439:15-439:16
ID("Reflect"), 439:17-439:24
RBRACKET, 439:24-439:25
ATTRIBUTE, 439:26-439:35
DOMSTRING, 439:36-439:45
ID("alt"), 439:46-439:49
SEMI, 439:49-439:50
LBRACKET, 440:3-440:4
ID("CEReactions"), 440:4-440:15
COMMA, 440:15-440:16
ID("ReflectURL"), 440:17-440:27
RBRACKET, 440:27-440:28
ATTRIBUTE, 440:29-440:38
USVSTRING, 440:39-440:48
ID("src"), 440:49-440:52
SEMI, 440:52-440:53
LBRACKET, 441:3-441:4
ID("CEReactions"), 441:4-441:15
COMMA, 441:15-441:16
ID("Reflect"), 441:17-441:24
RBRACKET, 441:24-441:25
ATTRIBUTE, 441:26-441:35
USVSTRING, 441:36-441:45
ID("srcset"), 441:46-441:52
SEMI, 441:52-441:53
LBRACKET, 442:3-442:4
ID("CEReactions"), 442:4-442:15
COMMA, 442:15-442:16
ID("Reflect"), 442:17-442:24
RBRACKET, 442:24-442:25
ATTRIBUTE, 442:26-442:35
DOMSTRING, 442:36-442:45
ID("sizes"), 442:46-442:51
SEMI, 442:51-442:52
LBRACKET, 443:3-443:4
ID("CEReactions"), 443:4-443:15
RBRACKET, 443:15-443:16
ATTRIBUTE, 443:17-443:26
DOMSTRING, 443:27-443:36
QUESTION, 443:36-443:37
ID("crossOrigin"), 443:38-443:49
SEMI, 443:49-443:50
LBRACKET, 444:3-444:4
ID("CEReactions"), 444:4-444:15
COMMA, 444:15-444:16
ID("Reflect"), 444:17-444:24
RBRACKET, 444:24-444:25
ATTRIBUTE, 444:26-444:35
DOMSTRING, 444:36-444:45
ID("useMap"), 444:46-444:52
SEMI, 444:52-444:53
LBRACKET, 445:3-445:4
ID("CEReactions"), 445:4-445:15
COMMA, 445:15-445:16
ID("Reflect"), 445:17-445:24
RBRACKET, 445:24-445:25
ATTRIBUTE, 445:26-445:35
BOOLEAN, 445:36-445:43
ID("isMap"), 445:44-445:49
SEMI, 445:49-445:50
LBRACKET, 446:3-446:4
ID("CEReactions"), 446:4-446:15
COMMA, 446:15-446:16
ID("ReflectSetter"), 446:17-446:30
RBRACKET, 446:30-446:31
ATTRIBUTE, 446:32-446:41
UNSIGNED, 446:42-446:50
LONG, 446:51-446:55
ID("width"), 446:56-446:61
SEMI, 446:61-446:62
LBRACKET, 447:3-447:4
ID("CEReactions"), 447:4-447:15
COMMA, 447:15-447:16
ID("ReflectSetter"), 447:17-447:30
RBRACKET, 447:30-447:31
ATTRIBUTE, 447:32-447:41
UNSIGNED, 447:42-447:50
LONG, 447:51-447:55
ID("height"), 447:56-447:62
SEMI, 447:62-447:63
READONLY, 448:3-448:11
ATTRIBUTE, 448:12-448:21
UNSIGNED, 448:22-448:30
LONG, 448:31-448:35
ID("naturalWidth"), 448:36-448:48
SEMI, 448:48-448:49
READONLY, 449:3-449:11
ATTRIBUTE, 449:12-449:21
UNSIGNED, 449:22-449:30
LONG, 449:31-449:35
ID("naturalHeight"), 449:36-449:49
SEMI, 449:49-449:50
READONLY, 450:3-450:11
ATTRIBUTE, 450:12-450:21
BOOLEAN, 450:22-450:29
ID("complete"), 450:30-450:38
SEMI, 450:38-450:39
READONLY, 451:3-451:11
ATTRIBUTE, 451:12-451:21
USVSTRING, 451:22-451:31
ID("currentSrc"), 451:32-451:42
SEMI, 451:42-451:43
LBRACKET, 452:3-452:4
ID("CEReactions"), 452:4-452:15
RBRACKET, 452:15-452:16
ATTRIBUTE, 452:17-452:26
DOMSTRING, 452:27-452:36
ID("referrerPolicy"), 452:37-452:51
SEMI, 452:51-452:52
LBRACKET, 453:3-453:4
ID("CEReactions"), 453:4-453:15
RBRACKET, 453:15-453:16
ATTRIBUTE, 453:17-453:26
DOMSTRING, 453:27-453:36
ID("decoding"), 453:37-453:45
SEMI, 453:45-453:46
LBRACKET, 454:3-454:4
ID("CEReactions"), 454:4-454:15
RBRACKET, 454:15-454:16
ATTRIBUTE, 454:17-454:26
DOMSTRING, 454:27-454:36
ID("loading"), 454:37-454:44
SEMI, 454:44-454:45
LBRACKET, 455:3-455:4
ID("CEReactions"), 455:4-455:15
RBRACKET, 455:15-455:16
ATTRIBUTE, 455:17-455:26
DOMSTRING, 455:27-455:36
ID("fetchPriority"), 455:37-455:50
SEMI, 455:50-455:51
PROMISE, 457:3-457:10
LT, 457:10-457:11
UNDEFINED, 457:11-457:20
GT, 457:20-457:21
ID("decode"), 457:22-457:28
LPAREN, 457:28-457:29
RPAREN, 457:29-457:30
SEMI, 457:30-457:31
RBRACE, 460:1-460:2
SEMI, 460:2-460:3
LBRACKET, 462:1-462:2
ID("Exposed"), 462:2-462:9
EQUAL, 462:9-462:10
ID("Window"), 462:10-462:16
RBRACKET, 462:16-462:17
INTERFACE, 463:1-463:10
ID("HTMLIFrameElement"), 463:11-463:28
COLON, 463:29-463:30
ID("HTMLElement"), 463:31-463:42
LBRACE, 463:43-463:44
LBRACKET, 464:3-464:4
ID("HTMLConstructor"), 464:4-464:19
RBRACKET, 464:19-464:20
CONSTRUCTOR, 464:21-464:32
LPAREN, 464:32-464:33
RPAREN, 464:33-464:34
SEMI, 464:34-464:35
LBRACKET, 466:3-466:4
ID("CEReactions"), 466:4-466:15
COMMA, 466:15-466:16
ID("ReflectURL"), 466:17-466:27
RBRACKET, 466:27-466:28
ATTRIBUTE, 466:29-466:38
USVSTRING, 466:39-466:48
ID("src"), 466:49-466:52
SEMI, 466:52-466:53
LBRACKET, 467:3-467:4
ID("CEReactions"), 467:4-467:15
RBRACKET, 467:15-467:16
ATTRIBUTE, 467:17-467:26
LPAREN, 467:27-467:28
ID("TrustedHTML"), 467:28-467:39
OR, 467:40-467:42
DOMSTRING, 467:43-467:52
RPAREN, 467:52-467:53
ID("srcdoc"), 467:54-467:60
SEMI, 467:60-467:61
LBRACKET, 468:3-468:4
ID("CEReactions"), 468:4-468:15
COMMA, 468:15-468:16
ID("Reflect"), 468:17-468:24
RBRACKET, 468:24-468:25
ATTRIBUTE, 468:26-468:35
DOMSTRING, 468:36-468:45
ID("name"), 468:46-468:50
SEMI, 468:50-468:51
LBRACKET, 469:3-469:4
ID("SameObject"), 469:4-469:14
COMMA, 469:14-469:15
ID("PutForwards"), 469:16-469:27
EQUAL, 469:27-469:28
ID("value"), 469:28-469:33
COMMA, 469:33-469:34
ID("Reflect"), 469:35-469:42
RBRACKET, 469:42-469:43
READONLY, 469:44-469:52
ATTRIBUTE, 469:53-469:62
ID("DOMTokenList"), 469:63-469:75
ID("sandbox"), 469:76-469:83
SEMI, 469:83-469:84
LBRACKET, 470:3-470:4
ID("CEReactions"), 470:4-470:15
COMMA, 470:15-470:16
ID("Reflect"), 470:17-470:24
RBRACKET, 470:24-470:25
ATTRIBUTE, 470:26-470:35
DOMSTRING, 470:36-470:45
ID("allow"), 470:46-470:51
SEMI, 470:51-470:52
LBRACKET, 471:3-471:4
ID("CEReactions"), 471:4-471:15
COMMA, 471:15-471:16
ID("Reflect"), 471:17-471:24
RBRACKET, 471:24-471:25
ATTRIBUTE, 471:26-471:35
BOOLEAN, 471:36-471:43
ID("allowFullscreen"), 471:44-471:59
SEMI, 471:59-471:60
LBRACKET, 472:3-472:4
ID("CEReactions"), 472:4-472:15
COMMA, 472:15-472:16
ID("Reflect"), 472:17-472:24
RBRACKET, 472:24-472:25
ATTRIBUTE, 472:26-472:35
DOMSTRING, 472:36-472:45
ID("width"), 472:46-472:51
SEMI, 472:51-472:52
LBRACKET, 473:3-473:4
ID("CEReactions"), 473:4-473:15
COMMA, 473:15-473:16
ID("Reflect"), 473:17-473:24
RBRACKET, 473:24-473:25
ATTRIBUTE, 473:26-473:35
DOMSTRING, 473:36-473:45
ID("height"), 473:46-473:52
SEMI, 473:52-473:53
LBRACKET, 474:3-474:4
ID("CEReactions"), 474:4-474:15
RBRACKET, 474:15-474:16
ATTRIBUTE, 474:17-474:26
DOMSTRING, 474:27-474:36
ID("referrerPolicy"), 474:37-474:51
SEMI, 474:51-474:52
LBRACKET, 475:3-475:4
ID("CEReactions"), 475:4-475:15
RBRACKET, 475:15-475:16
ATTRIBUTE, 475:17-475:26
DOMSTRING, 475:27-475:36
ID("loading"), 475:37-475:44
SEMI, 475:44-475:45
READONLY, 476:3-476:11
ATTRIBUTE, 476:12-476:21
ID("Document"), 476:22-476:30
QUESTION, 476:30-476:31
ID("contentDocument"), 476:32-476:47
SEMI, 476:47-476:48
READONLY, 477:3-477:11
ATTRIBUTE, 477:12-477:21
ID("WindowProxy"), 477:22-477:33
QUESTION, 477:33-477:34
ID("contentWindow"), 477:35-477:48
SEMI, 477:48-477:49
ID("Document"), 478:3-478:11
QUESTION, 478:11-478:12
ID("getSVGDocument"), 478:13-478:27
LPAREN, 478:27-478:28
RPAREN, 478:28-478:29
SEMI, 478:29-478:30
RBRACE, 481:1-481:2
SEMI, 481:2-481:3
LBRACKET, 483:1-483:2
ID("Exposed"), 483:2-483:9
EQUAL, 483:9-483:10
ID("Window"), 483:10-483:16
RBRACKET, 483:16-483:17
INTERFACE, 484:1-484:10
ID("HTMLEmbedElement"), 484:11-484:27
COLON, 484:28-484:29
ID("HTMLElement"), 484:30-484:41
LBRACE, 484:42-484:43
LBRACKET, 485:3-485:4
ID("HTMLConstructor"), 485:4-485:19
RBRACKET, 485:19-485:20
CONSTRUCTOR, 485:21-485:32
LPAREN, 485:32-485:33
RPAREN, 485:33-485:34
SEMI, 485:34-485:35
LBRACKET, 487:3-487:4
ID("CEReactions"), 487:4-487:15
COMMA, 487:15-487:16
ID("ReflectURL"), 487:17-487:27
RBRACKET, 487:27-487:28
ATTRIBUTE, 487:29-487:38
USVSTRING, 487:39-487:48
ID("src"), 487:49-487:52
SEMI, 487:52-487:53
LBRACKET, 488:3-488:4
ID("CEReactions"), 488:4-488:15
COMMA, 488:15-488:16
ID("Reflect"), 488:17-488:24
RBRACKET, 488:24-488:25
ATTRIBUTE, 488:26-488:35
DOMSTRING, 488:36-488:45
ID("type"), 488:46-488:50
SEMI, 488:50-488:51
LBRACKET, 489:3-489:4
ID("CEReactions"), 489:4-489:15
COMMA, 489:15-489:16
ID("Reflect"), 489:17-489:24
RBRACKET, 489:24-489:25
ATTRIBUTE, 489:26-489:35
DOMSTRING, 489:36-489:45
ID("width"), 489:46-489:51
SEMI, 489:51-489:52
LBRACKET, 490:3-490:4
ID("CEReactions"), 490:4-490:15
COMMA, 490:15-490:16
ID("Reflect"), 490:17-490:24
RBRACKET, 490:24-490:25
ATTRIBUTE, 490:26-490:35
DOMSTRING, 490:36-490:45
ID("height"), 490:46-490:52
SEMI, 490:52-490:53
ID("Document"), 491:3-491:11
QUESTION, 491:11-491:12
ID("getSVGDocument"), 491:13-491:27
LPAREN, 491:27-491:28
RPAREN, 491:28-491:29
SEMI, 491:29-491:30
RBRACE, 494:1-494:2
SEMI, 494:2-494:3
LBRACKET, 496:1-496:2
ID("Exposed"), 496:2-496:9
EQUAL, 496:9-496:10
ID("Window"), 496:10-496:16
RBRACKET, 496:16-496:17
INTERFACE, 497:1-497:10
ID("HTMLObjectElement"), 497:11-497:28
COLON, 497:29-497:30
ID("HTMLElement"), 497:31-497:42
LBRACE, 497:43-497:44
LBRACKET, 498:3-498:4
ID("HTMLConstructor"), 498:4-498:19
RBRACKET, 498:19-498:20
CONSTRUCTOR, 498:21-498:32
LPAREN, 498:32-498:33
RPAREN, 498:33-498:34
SEMI, 498:34-498:35
LBRACKET, 500:3-500:4
ID("CEReactions"), 500:4-500:15
COMMA, 500:15-500:16
ID("ReflectURL"), 500:17-500:27
RBRACKET, 500:27-500:28
ATTRIBUTE, 500:29-500:38
USVSTRING, 500:39-500:48
ID("data"), 500:49-500:53
SEMI, 500:53-500:54
LBRACKET, 501:3-501:4
ID("CEReactions"), 501:4-501:15
COMMA, 501:15-501:16
ID("Reflect"), 501:17-501:24
RBRACKET, 501:24-501:25
ATTRIBUTE, 501:26-501:35
DOMSTRING, 501:36-501:45
ID("type"), 501:46-501:50
SEMI, 501:50-501:51
LBRACKET, 502:3-502:4
ID("CEReactions"), 502:4-502:15
COMMA, 502:15-502:16
ID("Reflect"), 502:17-502:24
RBRACKET, 502:24-502:25
ATTRIBUTE, 502:26-502:35
DOMSTRING, 502:36-502:45
ID("name"), 502:46-502:50
SEMI, 502:50-502:51
READONLY, 503:3-503:11
ATTRIBUTE, 503:12-503:21
ID("HTMLFormElement"), 503:22-503:37
QUESTION, 503:37-503:38
ID("form"), 503:39-503:43
SEMI, 503:43-503:44
LBRACKET, 504:3-504:4
ID("CEReactions"), 504:4-504:15
COMMA, 504:15-504:16
ID("Reflect"), 504:17-504:24
RBRACKET, 504:24-504:25
ATTRIBUTE, 504:26-504:35
DOMSTRING, 504:36-504:45
ID("width"), 504:46-504:51
SEMI, 504:51-504:52
LBRACKET, 505:3-505:4
ID("CEReactions"), 505:4-505:15
COMMA, 505:15-505:16
ID("Reflect"), 505:17-505:24
RBRACKET, 505:24-505:25
ATTRIBUTE, 505:26-505:35
DOMSTRING, 505:36-505:45
ID("height"), 505:46-505:52
SEMI, 505:52-505:53
READONLY, 506:3-506:11
ATTRIBUTE, 506:12-506:21
ID("Document"), 506:22-506:30
QUESTION, 506:30-506:31
ID("contentDocument"), 506:32-506:47
SEMI, 506:47-506:48
READONLY, 507:3-507:11
ATTRIBUTE, 507:12-507:21
ID("WindowProxy"), 507:22-507:33
QUESTION, 507:33-507:34
ID("contentWindow"), 507:35-507:48
SEMI, 507:48-507:49
ID("Document"), 508:3-508:11
QUESTION, 508:11-508:12
ID("getSVGDocument"), 508:13-508:27
LPAREN, 508:27-508:28
RPAREN, 508:28-508:29
SEMI, 508:29-508:30
READONLY, 510:3-510:11
ATTRIBUTE, 510:12-510:21
BOOLEAN, 510:22-510:29
ID("willValidate"), 510:30-510:42
SEMI, 510:42-510:43
READONLY, 511:3-511:11
ATTRIBUTE, 511:12-511:21
ID("ValidityState"), 511:22-511:35
ID("validity"), 511:36-511:44
SEMI, 511:44-511:45
READONLY, 512:3-512:11
ATTRIBUTE, 512:12-512:21
DOMSTRING, 512:22-512:31
ID("validationMessage"), 512:32-512:49
SEMI, 512:49-512:50
BOOLEAN, 513:3-513:10
ID("checkValidity"), 513:11-513:24
LPAREN, 513:24-513:25
RPAREN, 513:25-513:26
SEMI, 513:26-513:27
BOOLEAN, 514:3-514:10
ID("reportValidity"), 514:11-514:25
LPAREN, 514:25-514:26
RPAREN, 514:26-514:27
SEMI, 514:27-514:28
UNDEFINED, 515:3-515:12
ID("setCustomValidity"), 515:13-515:30
LPAREN, 515:30-515:31
DOMSTRING, 515:31-515:40
ID("error"), 515:41-515:46
RPAREN, 515:46-515:47
SEMI, 515:47-515:48
RBRACE, 518:1-518:2
SEMI, 518:2-518:3
LBRACKET, 520:1-520:2
ID("Exposed"), 520:2-520:9
EQUAL, 520:9-520:10
ID("Window"), 520:10-520:16
RBRACKET, 520:16-520:17
INTERFACE, 521:1-521:10
ID("HTMLVideoElement"), 521:11-521:27
COLON, 521:28-521:29
ID("HTMLMediaElement"), 521:30-521:46
LBRACE, 521:47-521:48
LBRACKET, 522:3-522:4
ID("HTMLConstructor"), 522:4-522:19
RBRACKET, 522:19-522:20
CONSTRUCTOR, 522:21-522:32
LPAREN, 522:32-522:33
RPAREN, 522:33-522:34
SEMI, 522:34-522:35
LBRACKET, 524:3-524:4
ID("CEReactions"), 524:4-524:15
COMMA, 524:15-524:16
ID("Reflect"), 524:17-524:24
RBRACKET, 524:24-524:25
ATTRIBUTE, 524:26-524:35
UNSIGNED, 524:36-524:44
LONG, 524:45-524:49
ID("width"), 524:50-524:55
SEMI, 524:55-524:56
LBRACKET, 525:3-525:4
ID("CEReactions"), 525:4-525:15
COMMA, 525:15-525:16
ID("Reflect"), 525:17-525:24
RBRACKET, 525:24-525:25
ATTRIBUTE, 525:26-525:35
UNSIGNED, 525:36-525:44
LONG, 525:45-525:49
ID("height"), 525:50-525:56
SEMI, 525:56-525:57
READONLY, 526:3-526:11
ATTRIBUTE, 526:12-526:21
UNSIGNED, 526:22-526:30
LONG, 526:31-526:35
ID("videoWidth"), 526:36-526:46
SEMI, 526:46-526:47
READONLY, 527:3-527:11
ATTRIBUTE, 527:12-527:21
UNSIGNED, 527:22-527:30
LONG, 527:31-527:35
ID("videoHeight"), 527:36-527:47
SEMI, 527:47-527:48
LBRACKET, 528:3-528:4
ID("CEReactions"), 528:4-528:15
COMMA, 528:15-528:16
ID("ReflectURL"), 528:17-528:27
RBRACKET, 528:27-528:28
ATTRIBUTE, 528:29-528:38
USVSTRING, 528:39-528:48
ID("poster"), 528:49-528:55
SEMI, 528:55-528:56
LBRACKET, 529:3-529:4
ID("CEReactions"), 529:4-529:15
COMMA, 529:15-529:16
ID("Reflect"), 529:17-529:24
RBRACKET, 529:24-529:25
ATTRIBUTE, 529:26-529:35
BOOLEAN, 529:36-529:43
ID("playsInline"), 529:44-529:55
SEMI, 529:55-529:56
RBRACE, 530:1-530:2
SEMI, 530:2-530:3
LBRACKET, 532:1-532:2
ID("Exposed"), 532:2-532:9
EQUAL, 532:9-532:10
ID("Window"), 532:10-532:16
COMMA, 532:16-532:17
ID("LegacyFactoryFunction"), 533:2-533:23
EQUAL, 533:23-533:24
ID("Audio"), 533:24-533:29
LPAREN, 533:29-533:30
OPTIONAL, 533:30-533:38
DOMSTRING, 533:39-533:48
ID("src"), 533:49-533:52
RPAREN, 533:52-533:53
RBRACKET, 533:53-533:54
INTERFACE, 534:1-534:10
ID("HTMLAudioElement"), 534:11-534:27
COLON, 534:28-534:29
ID("HTMLMediaElement"), 534:30-534:46
LBRACE, 534:47-534:48
LBRACKET, 535:3-535:4
ID("HTMLConstructor"), 535:4-535:19
RBRACKET, 535:19-535:20
CONSTRUCTOR, 535:21-535:32
LPAREN, 535:32-535:33
RPAREN, 535:33-535:34
SEMI, 535:34-535:35
RBRACE, 536:1-536:2
SEMI, 536:2-536:3
LBRACKET, 538:1-538:2
ID("Exposed"), 538:2-538:9
EQUAL, 538:9-538:10
ID("Window"), 538:10-538:16
RBRACKET, 538:16-538:17
INTERFACE, 539:1-539:10
ID("HTMLTrackElement"), 539:11-539:27
COLON, 539:28-539:29
ID("HTMLElement"), 539:30-539:41
LBRACE, 539:42-539:43
LBRACKET, 540:3-540:4
ID("HTMLConstructor"), 540:4-540:19
RBRACKET, 540:19-540:20
CONSTRUCTOR, 540:21-540:32
LPAREN, 540:32-540:33
RPAREN, 540:33-540:34
SEMI, 540:34-540:35
LBRACKET, 542:3-542:4
ID("CEReactions"), 542:4-542:15
RBRACKET, 542:15-542:16
ATTRIBUTE, 542:17-542:26
DOMSTRING, 542:27-542:36
ID("kind"), 542:37-542:41
SEMI, 542:41-542:42
LBRACKET, 543:3-543:4
ID("CEReactions"), 543:4-543:15
COMMA, 543:15-543:16
ID("ReflectURL"), 543:17-543:27
RBRACKET, 543:27-543:28
ATTRIBUTE, 543:29-543:38
USVSTRING, 543:39-543:48
ID("src"), 543:49-543:52
SEMI, 543:52-543:53
LBRACKET, 544:3-544:4
ID("CEReactions"), 544:4-544:15
COMMA, 544:15-544:16
ID("Reflect"), 544:17-544:24
RBRACKET, 544:24-544:25
ATTRIBUTE, 544:26-544:35
DOMSTRING, 544:36-544:45
ID("srclang"), 544:46-544:53
SEMI, 544:53-544:54
LBRACKET, 545:3-545:4
ID("CEReactions"), 545:4-545:15
COMMA, 545:15-545:16
ID("Reflect"), 545:17-545:24
RBRACKET, 545:24-545:25
ATTRIBUTE, 545:26-545:35
DOMSTRING, 545:36-545:45
ID("label"), 545:46-545:51
SEMI, 545:51-545:52
LBRACKET, 546:3-546:4
ID("CEReactions"), 546:4-546:15
COMMA, 546:15-546:16
ID("Reflect"), 546:17-546:24
RBRACKET, 546:24-546:25
ATTRIBUTE, 546:26-546:35
BOOLEAN, 546:36-546:43
ID("default"), 546:44-546:51
SEMI, 546:51-546:52
CONST, 548:3-548:8
UNSIGNED, 548:9-548:17
SHORT, 548:18-548:23
ID("NONE"), 548:24-548:28
EQUAL, 548:29-548:30
INT("0"), 548:31-548:32
SEMI, 548:32-548:33
CONST, 549:3-549:8
UNSIGNED, 549:9-549:17
SHORT, 549:18-549:23
ID("LOADING"), 549:24-549:31
EQUAL, 549:32-549:33
INT("1"), 549:34-549:35
SEMI, 549:35-549:36
CONST, 550:3-550:8
UNSIGNED, 550:9-550:17
SHORT, 550:18-550:23
ID("LOADED"), 550:24-550:30
EQUAL, 550:31-550:32
INT("2"), 550:33-550:34
SEMI, 550:34-550:35
CONST, 551:3-551:8
UNSIGNED, 551:9-551:17
SHORT, 551:18-551:23
ID("ERROR"), 551:24-551:29
EQUAL, 551:30-551:31
INT("3"), 551:32-551:33
SEMI, 551:33-551:34
READONLY, 552:3-552:11
ATTRIBUTE, 552:12-552:21
UNSIGNED, 552:22-552:30
SHORT, 552:31-552:36
ID("readyState"), 552:37-552:47
SEMI, 552:47-552:48
READONLY, 554:3-554:11
ATTRIBUTE, 554:12-554:21
ID("TextTrack"), 554:22-554:31
ID("track"), 554:32-554:37
SEMI, 554:37-554:38
RBRACE, 555:1-555:2
SEMI, 555:2-555:3
ENUM, 557:1-557:5
ID("CanPlayTypeResult"), 557:6-557:23
LBRACE, 557:24-557:25
STRING("\"\""), 557:26-557:28
COMMA, 557:47-557:48
STRING("\"maybe\""), 557:49-557:56
COMMA, 557:56-557:57
STRING("\"probably\""), 557:58-557:68
RBRACE, 557:69-557:70
SEMI, 557:70-557:71
TYPEDEF, 558:1-558:8
LPAREN, 558:9-558:10
ID("MediaStream"), 558:10-558:21
OR, 558:22-558:24
ID("MediaSource"), 558:25-558:36
OR, 558:37-558:39
ID("Blob"), 558:40-558:44
RPAREN, 558:44-558:45
ID("MediaProvider"), 558:46-558:59
SEMI, 558:59-558:60
LBRACKET, 560:1-560:2
ID("Exposed"), 560:2-560:9
EQUAL, 560:9-560:10
ID("Window"), 560:10-560:16
RBRACKET, 560:16-560:17
INTERFACE, 561:1-561:10
ID("HTMLMediaElement"), 561:11-561:27
COLON, 561:28-561:29
ID("HTMLElement"), 561:30-561:41
LBRACE, 561:42-561:43
READONLY, 564:3-564:11
ATTRIBUTE, 564:12-564:21
ID("MediaError"), 564:22-564:32
QUESTION, 564:32-564:33
ID("error"), 564:34-564:39
SEMI, 564:39-564:40
LBRACKET, 567:3-567:4
ID("CEReactions"), 567:4-567:15
COMMA, 567:15-567:16
ID("ReflectURL"), 567:17-567:27
RBRACKET, 567:27-567:28
ATTRIBUTE, 567:29-567:38
USVSTRING, 567:39-567:48
ID("src"), 567:49-567:52
SEMI, 567:52-567:53
ATTRIBUTE, 568:3-568:12
ID("MediaProvider"), 568:13-568:26
QUESTION, 568:26-568:27
ID("srcObject"), 568:28-568:37
SEMI, 568:37-568:38
READONLY, 569:3-569:11
ATTRIBUTE, 569:12-569:21
USVSTRING, 569:22-569:31
ID("currentSrc"), 569:32-569:42
SEMI, 569:42-569:43
LBRACKET, 570:3-570:4
ID("CEReactions"), 570:4-570:15
RBRACKET, 570:15-570:16
ATTRIBUTE, 570:17-570:26
DOMSTRING, 570:27-570:36
QUESTION, 570:36-570:37
ID("crossOrigin"), 570:38-570:49
SEMI, 570:49-570:50
CONST, 571:3-571:8
UNSIGNED, 571:9-571:17
SHORT, 571:18-571:23
ID("NETWORK_EMPTY"), 571:24-571:37
EQUAL, 571:38-571:39
INT("0"), 571:40-571:41
SEMI, 571:41-571:42
CONST, 572:3-572:8
UNSIGNED, 572:9-572:17
SHORT, 572:18-572:23
ID("NETWORK_IDLE"), 572:24-572:36
EQUAL, 572:37-572:38
INT("1"), 572:39-572:40
SEMI, 572:40-572:41
CONST, 573:3-573:8
UNSIGNED, 573:9-573:17
SHORT, 573:18-573:23
ID("NETWORK_LOADING"), 573:24-573:39
EQUAL, 573:40-573:41
INT("2"), 573:42-573:43
SEMI, 573:43-573:44
CONST, 574:3-574:8
UNSIGNED, 574:9-574:17
SHORT, 574:18-574:23
ID("NETWORK_NO_SOURCE"), 574:24-574:41
EQUAL, 574:42-574:43
INT("3"), 574:44-574:45
SEMI, 574:45-574:46
READONLY, 575:3-575:11
ATTRIBUTE, 575:12-575:21
UNSIGNED, 575:22-575:30
SHORT, 575:31-575:36
ID("networkState"), 575:37-575:49
SEMI, 575:49-575:50
LBRACKET, 576:3-576:4
ID("CEReactions"), 576:4-576:15
RBRACKET, 576:15-576:16
ATTRIBUTE, 576:17-576:26
DOMSTRING, 576:27-576:36
ID("preload"), 576:37-576:44
SEMI, 576:44-576:45
READONLY, 577:3-577:11
ATTRIBUTE, 577:12-577:21
ID("TimeRanges"), 577:22-577:32
ID("buffered"), 577:33-577:41
SEMI, 577:41-577:42
UNDEFINED, 578:3-578:12
ID("load"), 578:13-578:17
LPAREN, 578:17-578:18
RPAREN, 578:18-578:19
SEMI, 578:19-578:20
ID("CanPlayTypeResult"), 579:3-579:20
ID("canPlayType"), 579:21-579:32
LPAREN, 579:32-579:33
DOMSTRING, 579:33-579:42
ID("type"), 579:43-579:47
RPAREN, 579:47-579:48
SEMI, 579:48-579:49
CONST, 582:3-582:8
UNSIGNED, 582:9-582:17
SHORT, 582:18-582:23
ID("HAVE_NOTHING"), 582:24-582:36
EQUAL, 582:37-582:38
INT("0"), 582:39-582:40
SEMI, 582:40-582:41
CONST, 583:3-583:8
UNSIGNED, 583:9-583:17
SHORT, 583:18-583:23
ID("HAVE_METADATA"), 583:24-583:37
EQUAL, 583:38-583:39
INT("1"), 583:40-583:41
SEMI, 583:41-583:42
CONST, 584:3-584:8
UNSIGNED, 584:9-584:17
SHORT, 584:18-584:23
ID("HAVE_CURRENT_DATA"), 584:24-584:41
EQUAL, 584:42-584:43
INT("2"), 584:44-584:45
SEMI, 584:45-584:46
CONST, 585:3-585:8
UNSIGNED, 585:9-585:17
SHORT, 585:18-585:23
ID("HAVE_FUTURE_DATA"), 585:24-585:40
EQUAL, 585:41-585:42
INT("3"), 585:43-585:44
SEMI, 585:44-585:45
CONST, 586:3-586:8
UNSIGNED, 586:9-586:17
SHORT, 586:18-586:23
ID("HAVE_ENOUGH_DATA"), 586:24-586:40
EQUAL, 586:41-586:42
INT("4"), 586:43-586:44
SEMI, 586:44-586:45
READONLY, 587:3-587:11
ATTRIBUTE, 587:12-587:21
UNSIGNED, 587:22-587:30
SHORT, 587:31-587:36
ID("readyState"), 587:37-587:47
SEMI, 587:47-587:48
READONLY, 588:3-588:11
ATTRIBUTE, 588:12-588:21
BOOLEAN, 588:22-588:29
ID("seeking"), 588:30-588:37
SEMI, 588:37-588:38
ATTRIBUTE, 591:3-591:12
DOUBLE, 591:13-591:19
ID("currentTime"), 591:20-591:31
SEMI, 591:31-591:32
UNDEFINED, 592:3-592:12
ID("fastSeek"), 592:13-592:21
LPAREN, 592:21-592:22
DOUBLE, 592:22-592:28
ID("time"), 592:29-592:33
RPAREN, 592:33-592:34
SEMI, 592:34-592:35
READONLY, 593:3-593:11
ATTRIBUTE, 593:12-593:21
UNRESTRICTED, 593:22-593:34
DOUBLE, 593:35-593:41
ID("duration"), 593:42-593:50
SEMI, 593:50-593:51
OBJECT, 594:3-594:9
ID("getStartDate"), 594:10-594:22
LPAREN, 594:22-594:23
RPAREN, 594:23-594:24
SEMI, 594:24-594:25
READONLY, 595:3-595:11
ATTRIBUTE, 595:12-595:21
BOOLEAN, 595:22-595:29
ID("paused"), 595:30-595:36
SEMI, 595:36-595:37
ATTRIBUTE, 596:3-596:12
DOUBLE, 596:13-596:19
ID("defaultPlaybackRate"), 596:20-596:39
SEMI, 596:39-596:40
ATTRIBUTE, 597:3-597:12
DOUBLE, 597:13-597:19
ID("playbackRate"), 597:20-597:32
SEMI, 597:32-597:33
ATTRIBUTE, 598:3-598:12
BOOLEAN, 598:13-598:20
ID("preservesPitch"), 598:21-598:35
SEMI, 598:35-598:36
READONLY, 599:3-599:11
ATTRIBUTE, 599:12-599:21
ID("TimeRanges"), 599:22-599:32
ID("played"), 599:33-599:39
SEMI, 599:39-599:40
READONLY, 600:3-600:11
ATTRIBUTE, 600:12-600:21
ID("TimeRanges"), 600:22-600:32
ID("seekable"), 600:33-600:41
SEMI, 600:41-600:42
READONLY, 601:3-601:11
ATTRIBUTE, 601:12-601:21
BOOLEAN, 601:22-601:29
ID("ended"), 601:30-601:35
SEMI, 601:35-601:36
LBRACKET, 602:3-602:4
ID("CEReactions"), 602:4-602:15
COMMA, 602:15-602:16
ID("Reflect"), 602:17-602:24
RBRACKET, 602:24-602:25
ATTRIBUTE, 602:26-602:35
BOOLEAN, 602:36-602:43
ID("autoplay"), 602:44-602:52
SEMI, 602:52-602:53
LBRACKET, 603:3-603:4
ID("CEReactions"), 603:4-603:15
COMMA, 603:15-603:16
ID("Reflect"), 603:17-603:24
RBRACKET, 603:24-603:25
ATTRIBUTE, 603:26-603:35
BOOLEAN, 603:36-603:43
ID("loop"), 603:44-603:48
SEMI, 603:48-603:49
PROMISE, 604:3-604:10
LT, 604:10-604:11
UNDEFINED, 604:11-604:20
GT, 604:20-604:21
ID("play"), 604:22-604:26
LPAREN, 604:26-604:27
RPAREN, 604:27-604:28
SEMI, 604:28-604:29
UNDEFINED, 605:3-605:12
ID("pause"), 605:13-605:18
LPAREN, 605:18-605:19
RPAREN, 605:19-605:20
SEMI, 605:20-605:21
LBRACKET, 608:3-608:4
ID("CEReactions"), 608:4-608:15
COMMA, 608:15-608:16
ID("Reflect"), 608:17-608:24
RBRACKET, 608:24-608:25
ATTRIBUTE, 608:26-608:35
BOOLEAN, 608:36-608:43
ID("controls"), 608:44-608:52
SEMI, 608:52-608:53
ATTRIBUTE, 609:3-609:12
DOUBLE, 609:13-609:19
ID("volume"), 609:20-609:26
SEMI, 609:26-609:27
ATTRIBUTE, 610:3-610:12
BOOLEAN, 610:13-610:20
ID("muted"), 610:21-610:26
SEMI, 610:26-610:27
LBRACKET, 611:3-611:4
ID("CEReactions"), 611:4-611:15
COMMA, 611:15-611:16
ID("Reflect"), 611:17-611:24
EQUAL, 611:24-611:25
STRING("\"muted\""), 611:25-611:32
RBRACKET, 611:32-611:33
ATTRIBUTE, 611:34-611:43
BOOLEAN, 611:44-611:51
ID("defaultMuted"), 611:52-611:64
SEMI, 611:64-611:65
LBRACKET, 614:3-614:4
ID("SameObject"), 614:4-614:14
RBRACKET, 614:14-614:15
READONLY, 614:16-614:24
ATTRIBUTE, 614:25-614:34
ID("AudioTrackList"), 614:35-614:49
ID("audioTracks"), 614:50-614:61
SEMI, 614:61-614:62
LBRACKET, 615:3-615:4
ID("SameObject"), 615:4-615:14
RBRACKET, 615:14-615:15
READONLY, 615:16-615:24
ATTRIBUTE, 615:25-615:34
ID("VideoTrackList"), 615:35-615:49
ID("videoTracks"), 615:50-615:61
SEMI, 615:61-615:62
LBRACKET, 616:3-616:4
ID("SameObject"), 616:4-616:14
RBRACKET, 616:14-616:15
READONLY, 616:16-616:24
ATTRIBUTE, 616:25-616:34
ID("TextTrackList"), 616:35-616:48
ID("textTracks"), 616:49-616:59
SEMI, 616:59-616:60
ID("TextTrack"), 617:3-617:12
ID("addTextTrack"), 617:13-617:25
LPAREN, 617:25-617:26
ID("TextTrackKind"), 617:26-617:39
ID("kind"), 617:40-617:44
COMMA, 617:44-617:45
OPTIONAL, 617:46-617:54
DOMSTRING, 617:55-617:64
ID("label"), 617:65-617:70
EQUAL, 617:71-617:72
STRING("\"\""), 617:73-617:75
COMMA, 617:75-617:76
OPTIONAL, 617:77-617:85
DOMSTRING, 617:86-617:95
ID("language"), 617:96-617:104
EQUAL, 617:105-617:106
STRING("\"\""), 617:107-617:109
RPAREN, 617:109-617:110
SEMI, 617:110-617:111
RBRACE, 618:1-618:2
SEMI, 618:2-618:3
LBRACKET, 620:1-620:2
ID("Exposed"), 620:2-620:9
EQUAL, 620:9-620:10
ID("Window"), 620:10-620:16
RBRACKET, 620:16-620:17
INTERFACE, 621:1-621:10
ID("MediaError"), 621:11-621:21
LBRACE, 621:22-621:23
CONST, 622:3-622:8
UNSIGNED, 622:9-622:17
SHORT, 622:18-622:23
ID("MEDIA_ERR_ABORTED"), 622:24-622:41
EQUAL, 622:42-622:43
INT("1"), 622:44-622:45
SEMI, 622:45-622:46
CONST, 623:3-623:8
UNSIGNED, 623:9-623:17
SHORT, 623:18-623:23
ID("MEDIA_ERR_NETWORK"), 623:24-623:41
EQUAL, 623:42-623:43
INT("2"), 623:44-623:45
SEMI, 623:45-623:46
CONST, 624:3-624:8
UNSIGNED, 624:9-624:17
SHORT, 624:18-624:23
ID("MEDIA_ERR_DECODE"), 624:24-624:40
EQUAL, 624:41-624:42
INT("3"), 624:43-624:44
SEMI, 624:44-624:45
CONST, 625:3-625:8
UNSIGNED, 625:9-625:17
SHORT, 625:18-625:23
ID("MEDIA_ERR_SRC_NOT_SUPPORTED"), 625:24-625:51
EQUAL, 625:52-625:53
INT("4"), 625:54-625:55
SEMI, 625:55-625:56
READONLY, 627:3-627:11
ATTRIBUTE, 627:12-627:21
UNSIGNED, 627:22-627:30
SHORT, 627:31-627:36
ID("code"), 627:37-627:41
SEMI, 627:41-627:42
READONLY, 628:3-628:11
ATTRIBUTE, 628:12-628:21
DOMSTRING, 628:22-628:31
ID("message"), 628:32-628:39
SEMI, 628:39-628:40
RBRACE, 629:1-629:2
SEMI, 629:2-629:3
LBRACKET, 631:1-631:2
ID("Exposed"), 631:2-631:9
EQUAL, 631:9-631:10
ID("Window"), 631:10-631:16
RBRACKET, 631:16-631:17
INTERFACE, 632:1-632:10
ID("AudioTrackList"), 632:11-632:25
COLON, 632:26-632:27
ID("EventTarget"), 632:28-632:39
LBRACE, 632:40-632:41
READONLY, 633:3-633:11
ATTRIBUTE, 633:12-633:21
UNSIGNED, 633:22-633:30
LONG, 633:31-633:35
ID("length"), 633:36-633:42
SEMI, 633:42-633:43
GETTER, 634:3-634:9
ID("AudioTrack"), 634:10-634:20
LPAREN, 634:21-634:22
UNSIGNED, 634:22-634:30
LONG, 634:31-634:35
ID("index"), 634:36-634:41
RPAREN, 634:41-634:42
SEMI, 634:42-634:43
ID("AudioTrack"), 635:3-635:13
QUESTION, 635:13-635:14
ID("getTrackById"), 635:15-635:27
LPAREN, 635:27-635:28
DOMSTRING, 635:28-635:37
ID("id"), 635:38-635:40
RPAREN, 635:40-635:41
SEMI, 635:41-635:42
ATTRIBUTE, 637:3-637:12
ID("EventHandler"), 637:13-637:25
ID("onchange"), 637:26-637:34
SEMI, 637:34-637:35
ATTRIBUTE, 638:3-638:12
ID("EventHandler"), 638:13-638:25
ID("onaddtrack"), 638:26-638:36
SEMI, 638:36-638:37
ATTRIBUTE, 639:3-639:12
ID("EventHandler"), 639:13-639:25
ID("onremovetrack"), 639:26-639:39
SEMI, 639:39-639:40
RBRACE, 640:1-640:2
SEMI, 640:2-640:3
LBRACKET, 642:1-642:2
ID("Exposed"), 642:2-642:9
EQUAL, 642:9-642:10
ID("Window"), 642:10-642:16
RBRACKET, 642:16-642:17
INTERFACE, 643:1-643:10
ID("AudioTrack"), 643:11-643:21
LBRACE, 643:22-643:23
READONLY, 644:3-644:11
ATTRIBUTE, 644:12-644:21
DOMSTRING, 644:22-644:31
ID("id"), 644:32-644:34
SEMI, 644:34-644:35
READONLY, 645:3-645:11
ATTRIBUTE, 645:12-645:21
DOMSTRING, 645:22-645:31
ID("kind"), 645:32-645:36
SEMI, 645:36-645:37
READONLY, 646:3-646:11
ATTRIBUTE, 646:12-646:21
DOMSTRING, 646:22-646:31
ID("label"), 646:32-646:37
SEMI, 646:37-646:38
READONLY, 647:3-647:11
ATTRIBUTE, 647:12-647:21
DOMSTRING, 647:22-647:31
ID("language"), 647:32-647:40
SEMI, 647:40-647:41
ATTRIBUTE, 648:3-648:12
BOOLEAN, 648:13-648:20
ID("enabled"), 648:21-648:28
SEMI, 648:28-648:29
RBRACE, 649:1-649:2
SEMI, 649:2-649:3
LBRACKET, 651:1-651:2
ID("Exposed"), 651:2-651:9
EQUAL, 651:9-651:10
ID("Window"), 651:10-651:16
RBRACKET, 651:16-651:17
INTERFACE, 652:1-652:10
ID("VideoTrackList"), 652:11-652:25
COLON, 652:26-652:27
ID("EventTarget"), 652:28-652:39
LBRACE, 652:40-652:41
READONLY, 653:3-653:11
ATTRIBUTE, 653:12-653:21
UNSIGNED, 653:22-653:30
LONG, 653:31-653:35
ID("length"), 653:36-653:42
SEMI, 653:42-653:43
GETTER, 654:3-654:9
ID("VideoTrack"), 654:10-654:20
LPAREN, 654:21-654:22
UNSIGNED, 654:22-654:30
LONG, 654:31-654:35
ID("index"), 654:36-654:41
RPAREN, 654:41-654:42
SEMI, 654:42-654:43
ID("VideoTrack"), 655:3-655:13
QUESTION, 655:13-655:14
ID("getTrackById"), 655:15-655:27
LPAREN, 655:27-655:28
DOMSTRING, 655:28-655:37
ID("id"), 655:38-655:40
RPAREN, 655:40-655:41
SEMI, 655:41-655:42
READONLY, 656:3-656:11
ATTRIBUTE, 656:12-656:21
LONG, 656:22-656:26
ID("selectedIndex"), 656:27-656:40
SEMI, 656:40-656:41
ATTRIBUTE, 658:3-658:12
ID("EventHandler"), 658:13-658:25
ID("onchange"), 658:26-658:34
SEMI, 658:34-658:35
ATTRIBUTE, 659:3-659:12
ID("EventHandler"), 659:13-659:25
ID("onaddtrack"), 659:26-659:36
SEMI, 659:36-659:37
ATTRIBUTE, 660:3-660:12
ID("EventHandler"), 660:13-660:25
ID("onremovetrack"), 660:26-660:39
SEMI, 660:39-660:40
RBRACE, 661:1-661:2
SEMI, 661:2-661:3
LBRACKET, 663:1-663:2
ID("Exposed"), 663:2-663:9
EQUAL, 663:9-663:10
ID("Window"), 663:10-663:16
RBRACKET, 663:16-663:17
INTERFACE, 664:1-664:10
ID("VideoTrack"), 664:11-664:21
LBRACE, 664:22-664:23
READONLY, 665:3-665:11
ATTRIBUTE, 665:12-665:21
DOMSTRING, 665:22-665:31
ID("id"), 665:32-665:34
SEMI, 665:34-665:35
READONLY, 666:3-666:11
ATTRIBUTE, 666:12-666:21
DOMSTRING, 666:22-666:31
ID("kind"), 666:32-666:36
SEMI, 666:36-666:37
READONLY, 667:3-667:11
ATTRIBUTE, 667:12-667:21
DOMSTRING, 667:22-667:31
ID("label"), 667:32-667:37
SEMI, 667:37-667:38
READONLY, 668:3-668:11
ATTRIBUTE, 668:12-668:21
DOMSTRING, 668:22-668:31
ID("language"), 668:32-668:40
SEMI, 668:40-668:41
ATTRIBUTE, 669:3-669:12
BOOLEAN, 669:13-669:20
ID("selected"), 669:21-669:29
SEMI, 669:29-669:30
RBRACE, 670:1-670:2
SEMI, 670:2-670:3
LBRACKET, 672:1-672:2
ID("Exposed"), 672:2-672:9
EQUAL, 672:9-672:10
ID("Window"), 672:10-672:16
RBRACKET, 672:16-672:17
INTERFACE, 673:1-673:10
ID("TextTrackList"), 673:11-673:24
COLON, 673:25-673:26
ID("EventTarget"), 673:27-673:38
LBRACE, 673:39-673:40
READONLY, 674:3-674:11
ATTRIBUTE, 674:12-674:21
UNSIGNED, 674:22-674:30
LONG, 674:31-674:35
ID("length"), 674:36-674:42
SEMI, 674:42-674:43
GETTER, 675:3-675:9
ID("TextTrack"), 675:10-675:19
LPAREN, 675:20-675:21
UNSIGNED, 675:21-675:29
LONG, 675:30-675:34
ID("index"), 675:35-675:40
RPAREN, 675:40-675:41
SEMI, 675:41-675:42
ID("TextTrack"), 676:3-676:12
QUESTION, 676:12-676:13
ID("getTrackById"), 676:14-676:26
LPAREN, 676:26-676:27
DOMSTRING, 676:27-676:36
ID("id"), 676:37-676:39
RPAREN, 676:39-676:40
SEMI, 676:40-676:41
ATTRIBUTE, 678:3-678:12
ID("EventHandler"), 678:13-678:25
ID("onchange"), 678:26-678:34
SEMI, 678:34-678:35
ATTRIBUTE, 679:3-679:12
ID("EventHandler"), 679:13-679:25
ID("onaddtrack"), 679:26-679:36
SEMI, 679:36-679:37
ATTRIBUTE, 680:3-680:12
ID("EventHandler"), 680:13-680:25
ID("onremovetrack"), 680:26-680:39
SEMI, 680:39-680:40
RBRACE, 681:1-681:2
SEMI, 681:2-681:3
ENUM, 683:1-683:5
ID("TextTrackMode"), 683:6-683:19
LBRACE, 683:20-683:21
STRING("\"disabled\""), 683:22-683:32
COMMA, 683:32-683:33
STRING("\"hidden\""), 683:35-683:43
COMMA, 683:43-683:44
STRING("\"showing\""), 683:46-683:55
RBRACE, 683:56-683:57
SEMI, 683:57-683:58
ENUM, 684:1-684:5
ID("TextTrackKind"), 684:6-684:19
LBRACE, 684:20-684:21
STRING("\"subtitles\""), 684:22-684:33
COMMA, 684:33-684:34
STRING("\"captions\""), 684:36-684:46
COMMA, 684:46-684:47
STRING("\"descriptions\""), 684:49-684:63
COMMA, 684:63-684:64
STRING("\"chapters\""), 684:66-684:76
COMMA, 684:76-684:77
STRING("\"metadata\""), 684:79-684:89
RBRACE, 684:90-684:91
SEMI, 684:91-684:92
LBRACKET, 686:1-686:2
ID("Exposed"), 686:2-686:9
EQUAL, 686:9-686:10
ID("Window"), 686:10-686:16
RBRACKET, 686:16-686:17
INTERFACE, 687:1-687:10
ID("TextTrack"), 687:11-687:20
COLON, 687:21-687:22
ID("EventTarget"), 687:23-687:34
LBRACE, 687:35-687:36
READONLY, 688:3-688:11
ATTRIBUTE, 688:12-688:21
ID("TextTrackKind"), 688:22-688:35
ID("kind"), 688:36-688:40
SEMI, 688:40-688:41
READONLY, 689:3-689:11
ATTRIBUTE, 689:12-689:21
DOMSTRING, 689:22-689:31
ID("label"), 689:32-689:37
SEMI, 689:37-689:38
READONLY, 690:3-690:11
ATTRIBUTE, 690:12-690:21
DOMSTRING, 690:22-690:31
ID("language"), 690:32-690:40
SEMI, 690:40-690:41
READONLY, 692:3-692:11
ATTRIBUTE, 692:12-692:21
DOMSTRING, 692:22-692:31
ID("id"), 692:32-692:34
SEMI, 692:34-692:35
READONLY, 693:3-693:11
ATTRIBUTE, 693:12-693:21
DOMSTRING, 693:22-693:31
ID("inBandMetadataTrackDispatchType"), 693:32-693:63
SEMI, 693:63-693:64
ATTRIBUTE, 695:3-695:12
ID("TextTrackMode"), 695:13-695:26
ID("mode"), 695:27-695:31
SEMI, 695:31-695:32
READONLY, 697:3-697:11
ATTRIBUTE, 697:12-697:21
ID("TextTrackCueList"), 697:22-697:38
QUESTION, 697:38-697:39
ID("cues"), 697:40-697:44
SEMI, 697:44-697:45
READONLY, 698:3-698:11
ATTRIBUTE, 698:12-698:21
ID("TextTrackCueList"), 698:22-698:38
QUESTION, 698:38-698:39
ID("activeCues"), 698:40-698:50
SEMI, 698:50-698:51
UNDEFINED, 700:3-700:12
ID("addCue"), 700:13-700:19
LPAREN, 700:19-700:20
ID("TextTrackCue"), 700:20-700:32
ID("cue"), 700:33-700:36
RPAREN, 700:36-700:37
SEMI, 700:37-700:38
UNDEFINED, 701:3-701:12
ID("removeCue"), 701:13-701:22
LPAREN, 701:22-701:23
ID("TextTrackCue"), 701:23-701:35
ID("cue"), 701:36-701:39
RPAREN, 701:39-701:40
SEMI, 701:40-701:41
ATTRIBUTE, 703:3-703:12
ID("EventHandler"), 703:13-703:25
ID("oncuechange"), 703:26-703:37
SEMI, 703:37-703:38
RBRACE, 704:1-704:2
SEMI, 704:2-704:3
LBRACKET, 706:1-706:2
ID("Exposed"), 706:2-706:9
EQUAL, 706:9-706:10
ID("Window"), 706:10-706:16
RBRACKET, 706:16-706:17
INTERFACE, 707:1-707:10
ID("TextTrackCueList"), 707:11-707:27
LBRACE, 707:28-707:29
READONLY, 708:3-708:11
ATTRIBUTE, 708:12-708:21
UNSIGNED, 708:22-708:30
LONG, 708:31-708:35
ID("length"), 708:36-708:42
SEMI, 708:42-708:43
GETTER, 709:3-709:9
ID("TextTrackCue"), 709:10-709:22
LPAREN, 709:23-709:24
UNSIGNED, 709:24-709:32
LONG, 709:33-709:37
ID("index"), 709:38-709:43
RPAREN, 709:43-709:44
SEMI, 709:44-709:45
ID("TextTrackCue"), 710:3-710:15
QUESTION, 710:15-710:16
ID("getCueById"), 710:17-710:27
LPAREN, 710:27-710:28
DOMSTRING, 710:28-710:37
ID("id"), 710:38-710:40
RPAREN, 710:40-710:41
SEMI, 710:41-710:42
RBRACE, 711:1-711:2
SEMI, 711:2-711:3
LBRACKET, 713:1-713:2
ID("Exposed"), 713:2-713:9
EQUAL, 713:9-713:10
ID("Window"), 713:10-713:16
RBRACKET, 713:16-713:17
INTERFACE, 714:1-714:10
ID("TextTrackCue"), 714:11-714:23
COLON, 714:24-714:25
ID("EventTarget"), 714:26-714:37
LBRACE, 714:38-714:39
READONLY, 715:3-715:11
ATTRIBUTE, 715:12-715:21
ID("TextTrack"), 715:22-715:31
QUESTION, 715:31-715:32
ID("track"), 715:33-715:38
SEMI, 715:38-715:39
ATTRIBUTE, 717:3-717:12
DOMSTRING, 717:13-717:22
ID("id"), 717:23-717:25
SEMI, 717:25-717:26
ATTRIBUTE, 718:3-718:12
DOUBLE, 718:13-718:19
ID("startTime"), 718:20-718:29
SEMI, 718:29-718:30
ATTRIBUTE, 719:3-719:12
UNRESTRICTED, 719:13-719:25
DOUBLE, 719:26-719:32
ID("endTime"), 719:33-719:40
SEMI, 719:40-719:41
ATTRIBUTE, 720:3-720:12
BOOLEAN, 720:13-720:20
ID("pauseOnExit"), 720:21-720:32
SEMI, 720:32-720:33
ATTRIBUTE, 722:3-722:12
ID("EventHandler"), 722:13-722:25
ID("onenter"), 722:26-722:33
SEMI, 722:33-722:34
ATTRIBUTE, 723:3-723:12
ID("EventHandler"), 723:13-723:25
ID("onexit"), 723:26-723:32
SEMI, 723:32-723:33
RBRACE, 724:1-724:2
SEMI, 724:2-724:3
LBRACKET, 726:1-726:2
ID("Exposed"), 726:2-726:9
EQUAL, 726:9-726:10
ID("Window"), 726:10-726:16
RBRACKET, 726:16-726:17
INTERFACE, 727:1-727:10
ID("TimeRanges"), 727:11-727:21
LBRACE, 727:22-727:23
READONLY, 728:3-728:11
ATTRIBUTE, 728:12-728:21
UNSIGNED, 728:22-728:30
LONG, 728:31-728:35
ID("length"), 728:36-728:42
SEMI, 728:42-728:43
DOUBLE, 729:3-729:9
ID("start"), 729:10-729:15
LPAREN, 729:15-729:16
UNSIGNED, 729:16-729:24
LONG, 729:25-729:29
ID("index"), 729:30-729:35
RPAREN, 729:35-729:36
SEMI, 729:36-729:37
DOUBLE, 730:3-730:9
ID("end"), 730:10-730:13
LPAREN, 730:13-730:14
UNSIGNED, 730:14-730:22
LONG, 730:23-730:27
ID("index"), 730:28-730:33
RPAREN, 730:33-730:34
SEMI, 730:34-730:35
RBRACE, 731:1-731:2
SEMI, 731:2-731:3
LBRACKET, 733:1-733:2
ID("Exposed"), 733:2-733:9
EQUAL, 733:9-733:10
ID("Window"), 733:10-733:16
RBRACKET, 733:16-733:17
INTERFACE, 734:1-734:10
ID("TrackEvent"), 734:11-734:21
COLON, 734:22-734:23
ID("Event"), 734:24-734:29
LBRACE, 734:30-734:31
CONSTRUCTOR, 735:3-735:14
LPAREN, 735:14-735:15
DOMSTRING, 735:15-735:24
ID("type"), 735:25-735:29
COMMA, 735:29-735:30
OPTIONAL, 735:31-735:39
ID("TrackEventInit"), 735:40-735:54
ID("eventInitDict"), 735:55-735:68
EQUAL, 735:69-735:70
LBRACE, 735:71-735:72
RBRACE, 735:72-735:73
RPAREN, 735:73-735:74
SEMI, 735:74-735:75
READONLY, 737:3-737:11
ATTRIBUTE, 737:12-737:21
LPAREN, 737:22-737:23
ID("VideoTrack"), 737:23-737:33
OR, 737:34-737:36
ID("AudioTrack"), 737:37-737:47
OR, 737:48-737:50
ID("TextTrack"), 737:51-737:60
RPAREN, 737:60-737:61
QUESTION, 737:61-737:62
ID("track"), 737:63-737:68
SEMI, 737:68-737:69
RBRACE, 738:1-738:2
SEMI, 738:2-738:3
DICTIONARY, 740:1-740:11
ID("TrackEventInit"), 740:12-740:26
COLON, 740:27-740:28
ID("EventInit"), 740:29-740:38
LBRACE, 740:39-740:40
LPAREN, 741:3-741:4
ID("VideoTrack"), 741:4-741:14
OR, 741:15-741:17
ID("AudioTrack"), 741:18-741:28
OR, 741:29-741:31
ID("TextTrack"), 741:32-741:41
RPAREN, 741:41-741:42
QUESTION, 741:42-741:43
ID("track"), 741:44-741:49
EQUAL, 741:50-741:51
NULL, 741:52-741:56
SEMI, 741:56-741:57
RBRACE, 742:1-742:2
SEMI, 742:2-742:3
LBRACKET, 744:1-744:2
ID("Exposed"), 744:2-744:9
EQUAL, 744:9-744:10
ID("Window"), 744:10-744:16
RBRACKET, 744:16-744:17
INTERFACE, 745:1-745:10
ID("HTMLMapElement"), 745:11-745:25
COLON, 745:26-745:27
ID("HTMLElement"), 745:28-745:39
LBRACE, 745:40-745:41
LBRACKET, 746:3-746:4
ID("HTMLConstructor"), 746:4-746:19
RBRACKET, 746:19-746:20
CONSTRUCTOR, 746:21-746:32
LPAREN, 746:32-746:33
RPAREN, 746:33-746:34
SEMI, 746:34-746:35
LBRACKET, 748:3-748:4
ID("CEReactions"), 748:4-748:15
COMMA, 748:15-748:16
ID("Reflect"), 748:17-748:24
RBRACKET, 748:24-748:25
ATTRIBUTE, 748:26-748:35
DOMSTRING, 748:36-748:45
ID("name"), 748:46-748:50
SEMI, 748:50-748:51
LBRACKET, 749:3-749:4
ID("SameObject"), 749:4-749:14
RBRACKET, 749:14-749:15
READONLY, 749:16-749:24
ATTRIBUTE, 749:25-749:34
ID("HTMLCollection"), 749:35-749:49
ID("areas"), 749:50-749:55
SEMI, 749:55-749:56
RBRACE, 750:1-750:2
SEMI, 750:2-750:3
LBRACKET, 752:1-752:2
ID("Exposed"), 752:2-752:9
EQUAL, 752:9-752:10
ID("Window"), 752:10-752:16
RBRACKET, 752:16-752:17
INTERFACE, 753:1-753:10
ID("HTMLAreaElement"), 753:11-753:26
COLON, 753:27-753:28
ID("HTMLElement"), 753:29-753:40
LBRACE, 753:41-753:42
LBRACKET, 754:3-754:4
ID("HTMLConstructor"), 754:4-754:19
RBRACKET, 754:19-754:20
CONSTRUCTOR, 754:21-754:32
LPAREN, 754:32-754:33
RPAREN, 754:33-754:34
SEMI, 754:34-754:35
LBRACKET, 756:3-756:4
ID("CEReactions"), 756:4-756:15
COMMA, 756:15-756:16
ID("Reflect"), 756:17-756:24
RBRACKET, 756:24-756:25
ATTRIBUTE, 756:26-756:35
DOMSTRING, 756:36-756:45
ID("alt"), 756:46-756:49
SEMI, 756:49-756:50
LBRACKET, 757:3-757:4
ID("CEReactions"), 757:4-757:15
COMMA, 757:15-757:16
ID("Reflect"), 757:17-757:24
RBRACKET, 757:24-757:25
ATTRIBUTE, 757:26-757:35
DOMSTRING, 757:36-757:45
ID("coords"), 757:46-757:52
SEMI, 757:52-757:53
LBRACKET, 758:3-758:4
ID("CEReactions"), 758:4-758:15
COMMA, 758:15-758:16
ID("Reflect"), 758:17-758:24
RBRACKET, 758:24-758:25
ATTRIBUTE, 758:26-758:35
DOMSTRING, 758:36-758:45
ID("shape"), 758:46-758:51
SEMI, 758:51-758:52
LBRACKET, 759:3-759:4
ID("CEReactions"), 759:4-759:15
COMMA, 759:15-759:16
ID("Reflect"), 759:17-759:24
RBRACKET, 759:24-759:25
ATTRIBUTE, 759:26-759:35
DOMSTRING, 759:36-759:45
ID("target"), 759:46-759:52
SEMI, 759:52-759:53
LBRACKET, 760:3-760:4
ID("CEReactions"), 760:4-760:15
COMMA, 760:15-760:16
ID("Reflect"), 760:17-760:24
RBRACKET, 760:24-760:25
ATTRIBUTE, 760:26-760:35
DOMSTRING, 760:36-760:45
ID("download"), 760:46-760:54
SEMI, 760:54-760:55
LBRACKET, 761:3-761:4
ID("CEReactions"), 761:4-761:15
COMMA, 761:15-761:16
ID("Reflect"), 761:17-761:24
RBRACKET, 761:24-761:25
ATTRIBUTE, 761:26-761:35
USVSTRING, 761:36-761:45
ID("ping"), 761:46-761:50
SEMI, 761:50-761:51
LBRACKET, 762:3-762:4
ID("CEReactions"), 762:4-762:15
COMMA, 762:15-762:16
ID("Reflect"), 762:17-762:24
RBRACKET, 762:24-762:25
ATTRIBUTE, 762:26-762:35
DOMSTRING, 762:36-762:45
ID("rel"), 762:46-762:49
SEMI, 762:49-762:50
LBRACKET, 763:3-763:4
ID("SameObject"), 763:4-763:14
COMMA, 763:14-763:15
ID("PutForwards"), 763:16-763:27
EQUAL, 763:27-763:28
ID("value"), 763:28-763:33
COMMA, 763:33-763:34
ID("Reflect"), 763:35-763:42
EQUAL, 763:42-763:43
STRING("\"rel\""), 763:43-763:48
RBRACKET, 763:48-763:49
READONLY, 763:50-763:58
ATTRIBUTE, 763:59-763:68
ID("DOMTokenList"), 763:69-763:81
ID("relList"), 763:82-763:89
SEMI, 763:89-763:90
LBRACKET, 764:3-764:4
ID("CEReactions"), 764:4-764:15
RBRACKET, 764:15-764:16
ATTRIBUTE, 764:17-764:26
DOMSTRING, 764:27-764:36
ID("referrerPolicy"), 764:37-764:51
SEMI, 764:51-764:52
RBRACE, 767:1-767:2
SEMI, 767:2-767:3
ID("HTMLAreaElement"), 768:1-768:16
INCLUDES, 768:17-768:25
ID("HTMLHyperlinkElementUtils"), 768:26-768:51
SEMI, 768:51-768:52
LBRACKET, 770:1-770:2
ID("Exposed"), 770:2-770:9
EQUAL, 770:9-770:10
ID("Window"), 770:10-770:16
RBRACKET, 770:16-770:17
INTERFACE, 771:1-771:10
ID("HTMLTableElement"), 771:11-771:27
COLON, 771:28-771:29
ID("HTMLElement"), 771:30-771:41
LBRACE, 771:42-771:43
LBRACKET, 772:3-772:4
ID("HTMLConstructor"), 772:4-772:19
RBRACKET, 772:19-772:20
CONSTRUCTOR, 772:21-772:32
LPAREN, 772:32-772:33
RPAREN, 772:33-772:34
SEMI, 772:34-772:35
LBRACKET, 774:3-774:4
ID("CEReactions"), 774:4-774:15
RBRACKET, 774:15-774:16
ATTRIBUTE, 774:17-774:26
ID("HTMLTableCaptionElement"), 774:27-774:50
QUESTION, 774:50-774:51
ID("caption"), 774:52-774:59
SEMI, 774:59-774:60
ID("HTMLTableCaptionElement"), 775:3-775:26
ID("createCaption"), 775:27-775:40
LPAREN, 775:40-775:41
RPAREN, 775:41-775:42
SEMI, 775:42-775:43
LBRACKET, 776:3-776:4
ID("CEReactions"), 776:4-776:15
RBRACKET, 776:15-776:16
UNDEFINED, 776:17-776:26
ID("deleteCaption"), 776:27-776:40
LPAREN, 776:40-776:41
RPAREN, 776:41-776:42
SEMI, 776:42-776:43
LBRACKET, 778:3-778:4
ID("CEReactions"), 778:4-778:15
RBRACKET, 778:15-778:16
ATTRIBUTE, 778:17-778:26
ID("HTMLTableSectionElement"), 778:27-778:50
QUESTION, 778:50-778:51
ID("tHead"), 778:52-778:57
SEMI, 778:57-778:58
ID("HTMLTableSectionElement"), 779:3-779:26
ID("createTHead"), 779:27-779:38
LPAREN, 779:38-779:39
RPAREN, 779:39-779:40
SEMI, 779:40-779:41
LBRACKET, 780:3-780:4
ID("CEReactions"), 780:4-780:15
RBRACKET, 780:15-780:16
UNDEFINED, 780:17-780:26
ID("deleteTHead"), 780:27-780:38
LPAREN, 780:38-780:39
RPAREN, 780:39-780:40
SEMI, 780:40-780:41
LBRACKET, 782:3-782:4
ID("CEReactions"), 782:4-782:15
RBRACKET, 782:15-782:16
ATTRIBUTE, 782:17-782:26
ID("HTMLTableSectionElement"), 782:27-782:50
QUESTION, 782:50-782:51
ID("tFoot"), 782:52-782:57
SEMI, 782:57-782:58
ID("HTMLTableSectionElement"), 783:3-783:26
ID("createTFoot"), 783:27-783:38
LPAREN, 783:38-783:39
RPAREN, 783:39-783:40
SEMI, 783:40-783:41
LBRACKET, 784:3-784:4
ID("CEReactions"), 784:4-784:15
RBRACKET, 784:15-784:16
UNDEFINED, 784:17-784:26
ID("deleteTFoot"), 784:27-784:38
LPAREN, 784:38-784:39
RPAREN, 784:39-784:40
SEMI, 784:40-784:41
LBRACKET, 786:3-786:4
ID("SameObject"), 786:4-786:14
RBRACKET, 786:14-786:15
READONLY, 786:16-786:24
ATTRIBUTE, 786:25-786:34
ID("HTMLCollection"), 786:35-786:49
ID("tBodies"), 786:50-786:57
SEMI, 786:57-786:58
ID("HTMLTableSectionElement"), 787:3-787:26
ID("createTBody"), 787:27-787:38
LPAREN, 787:38-787:39
RPAREN, 787:39-787:40
SEMI, 787:40-787:41
LBRACKET, 789:3-789:4
ID("SameObject"), 789:4-789:14
RBRACKET, 789:14-789:15
READONLY, 789:16-789:24
ATTRIBUTE, 789:25-789:34
ID("HTMLCollection"), 789:35-789:49
ID("rows"), 789:50-789:54
SEMI, 789:54-789:55
ID("HTMLTableRowElement"), 790:3-790:22
ID("insertRow"), 790:23-790:32
LPAREN, 790:32-790:33
OPTIONAL, 790:33-790:41
LONG, 790:42-790:46
ID("index"), 790:47-790:52
EQUAL, 790:53-790:54
INT("-1"), 790:55-790:57
RPAREN, 790:57-790:58
SEMI, 790:58-790:59
LBRACKET, 791:3-791:4
ID("CEReactions"), 791:4-791:15
RBRACKET, 791:15-791:16
UNDEFINED, 791:17-791:26
ID("deleteRow"), 791:27-791:36
LPAREN, 791:36-791:37
LONG, 791:37-791:41
ID("index"), 791:42-791:47
RPAREN, 791:47-791:48
SEMI, 791:48-791:49
RBRACE, 794:1-794:2
SEMI, 794:2-794:3
LBRACKET, 796:1-796:2
ID("Exposed"), 796:2-796:9
EQUAL, 796:9-796:10
ID("Window"), 796:10-796:16
RBRACKET, 796:16-796:17
INTERFACE, 797:1-797:10
ID("HTMLTableCaptionElement"), 797:11-797:34
COLON, 797:35-797:36
ID("HTMLElement"), 797:37-797:48
LBRACE, 797:49-797:50
LBRACKET, 798:3-798:4
ID("HTMLConstructor"), 798:4-798:19
RBRACKET, 798:19-798:20
CONSTRUCTOR, 798:21-798:32
LPAREN, 798:32-798:33
RPAREN, 798:33-798:34
SEMI, 798:34-798:35
RBRACE, 801:1-801:2
SEMI, 801:2-801:3
LBRACKET, 803:1-803:2
ID("Exposed"), 803:2-803:9
EQUAL, 803:9-803:10
ID("Window"), 803:10-803:16
RBRACKET, 803:16-803:17
INTERFACE, 804:1-804:10
ID("HTMLTableColElement"), 804:11-804:30
COLON, 804:31-804:32
ID("HTMLElement"), 804:33-804:44
LBRACE, 804:45-804:46
LBRACKET, 805:3-805:4
ID("HTMLConstructor"), 805:4-805:19
RBRACKET, 805:19-805:20
CONSTRUCTOR, 805:21-805:32
LPAREN, 805:32-805:33
RPAREN, 805:33-805:34
SEMI, 805:34-805:35
LBRACKET, 807:3-807:4
ID("CEReactions"), 807:4-807:15
COMMA, 807:15-807:16
ID("Reflect"), 807:17-807:24
COMMA, 807:24-807:25
ID("ReflectDefault"), 807:26-807:40
EQUAL, 807:40-807:41
INT("1"), 807:41-807:42
COMMA, 807:42-807:43
ID("ReflectRange"), 807:44-807:56
EQUAL, 807:56-807:57
LPAREN, 807:57-807:58
INT("1"), 807:58-807:59
COMMA, 807:59-807:60
INT("1000"), 807:61-807:65
RPAREN, 807:65-807:66
RBRACKET, 807:66-807:67
ATTRIBUTE, 807:68-807:77
UNSIGNED, 807:78-807:86
LONG, 807:87-807:91
ID("span"), 807:92-807:96
SEMI, 807:96-807:97
RBRACE, 810:1-810:2
SEMI, 810:2-810:3
LBRACKET, 812:1-812:2
ID("Exposed"), 812:2-812:9
EQUAL, 812:9-812:10
ID("Window"), 812:10-812:16
RBRACKET, 812:16-812:17
INTERFACE, 813:1-813:10
ID("HTMLTableSectionElement"), 813:11-813:34
COLON, 813:35-813:36
ID("HTMLElement"), 813:37-813:48
LBRACE, 813:49-813:50
LBRACKET, 814:3-814:4
ID("HTMLConstructor"), 814:4-814:19
RBRACKET, 814:19-814:20
CONSTRUCTOR, 814:21-814:32
LPAREN, 814:32-814:33
RPAREN, 814:33-814:34
SEMI, 814:34-814:35
LBRACKET, 816:3-816:4
ID("SameObject"), 816:4-816:14
RBRACKET, 816:14-816:15
READONLY, 816:16-816:24
ATTRIBUTE, 816:25-816:34
ID("HTMLCollection"), 816:35-816:49
ID("rows"), 816:50-816:54
SEMI, 816:54-816:55
ID("HTMLTableRowElement"), 817:3-817:22
ID("insertRow"), 817:23-817:32
LPAREN, 817:32-817:33
OPTIONAL, 817:33-817:41
LONG, 817:42-817:46
ID("index"), 817:47-817:52
EQUAL, 817:53-817:54
INT("-1"), 817:55-817:57
RPAREN, 817:57-817:58
SEMI, 817:58-817:59
LBRACKET, 818:3-818:4
ID("CEReactions"), 818:4-818:15
RBRACKET, 818:15-818:16
UNDEFINED, 818:17-818:26
ID("deleteRow"), 818:27-818:36
LPAREN, 818:36-818:37
LONG, 818:37-818:41
ID("index"), 818:42-818:47
RPAREN, 818:47-818:48
SEMI, 818:48-818:49
RBRACE, 821:1-821:2
SEMI, 821:2-821:3
LBRACKET, 823:1-823:2
ID("Exposed"), 823:2-823:9
EQUAL, 823:9-823:10
ID("Window"), 823:10-823:16
RBRACKET, 823:16-823:17
INTERFACE, 824:1-824:10
ID("HTMLTableRowElement"), 824:11-824:30
COLON, 824:31-824:32
ID("HTMLElement"), 824:33-824:44
LBRACE, 824:45-824:46
LBRACKET, 825:3-825:4
ID("HTMLConstructor"), 825:4-825:19
RBRACKET, 825:19-825:20
CONSTRUCTOR, 825:21-825:32
LPAREN, 825:32-825:33
RPAREN, 825:33-825:34
SEMI, 825:34-825:35
READONLY, 827:3-827:11
ATTRIBUTE, 827:12-827:21
LONG, 827:22-827:26
ID("rowIndex"), 827:27-827:35
SEMI, 827:35-827:36
READONLY, 828:3-828:11
ATTRIBUTE, 828:12-828:21
LONG, 828:22-828:26
ID("sectionRowIndex"), 828:27-828:42
SEMI, 828:42-828:43
LBRACKET, 829:3-829:4
ID("SameObject"), 829:4-829:14
RBRACKET, 829:14-829:15
READONLY, 829:16-829:24
ATTRIBUTE, 829:25-829:34
ID("HTMLCollection"), 829:35-829:49
ID("cells"), 829:50-829:55
SEMI, 829:55-829:56
ID("HTMLTableCellElement"), 830:3-830:23
ID("insertCell"), 830:24-830:34
LPAREN, 830:34-830:35
OPTIONAL, 830:35-830:43
LONG, 830:44-830:48
ID("index"), 830:49-830:54
EQUAL, 830:55-830:56
INT("-1"), 830:57-830:59
RPAREN, 830:59-830:60
SEMI, 830:60-830:61
LBRACKET, 831:3-831:4
ID("CEReactions"), 831:4-831:15
RBRACKET, 831:15-831:16
UNDEFINED, 831:17-831:26
ID("deleteCell"), 831:27-831:37
LPAREN, 831:37-831:38
LONG, 831:38-831:42
ID("index"), 831:43-831:48
RPAREN, 831:48-831:49
SEMI, 831:49-831:50
RBRACE, 834:1-834:2
SEMI, 834:2-834:3
LBRACKET, 836:1-836:2
ID("Exposed"), 836:2-836:9
EQUAL, 836:9-836:10
ID("Window"), 836:10-836:16
RBRACKET, 836:16-836:17
INTERFACE, 837:1-837:10
ID("HTMLTableCellElement"), 837:11-837:31
COLON, 837:32-837:33
ID("HTMLElement"), 837:34-837:45
LBRACE, 837:46-837:47
LBRACKET, 838:3-838:4
ID("HTMLConstructor"), 838:4-838:19
RBRACKET, 838:19-838:20
CONSTRUCTOR, 838:21-838:32
LPAREN, 838:32-838:33
RPAREN, 838:33-838:34
SEMI, 838:34-838:35
LBRACKET, 840:3-840:4
ID("CEReactions"), 840:4-840:15
COMMA, 840:15-840:16
ID("Reflect"), 840:17-840:24
COMMA, 840:24-840:25
ID("ReflectDefault"), 840:26-840:40
EQUAL, 840:40-840:41
INT("1"), 840:41-840:42
COMMA, 840:42-840:43
ID("ReflectRange"), 840:44-840:56
EQUAL, 840:56-840:57
LPAREN, 840:57-840:58
INT("1"), 840:58-840:59
COMMA, 840:59-840:60
INT("1000"), 840:61-840:65
RPAREN, 840:65-840:66
RBRACKET, 840:66-840:67
ATTRIBUTE, 840:68-840:77
UNSIGNED, 840:78-840:86
LONG, 840:87-840:91
ID("colSpan"), 840:92-840:99
SEMI, 840:99-840:100
LBRACKET, 841:3-841:4
ID("CEReactions"), 841:4-841:15
COMMA, 841:15-841:16
ID("Reflect"), 841:17-841:24
COMMA, 841:24-841:25
ID("ReflectDefault"), 841:26-841:40
EQUAL, 841:40-841:41
INT("1"), 841:41-841:42
COMMA, 841:42-841:43
ID("ReflectRange"), 841:44-841:56
EQUAL, 841:56-841:57
LPAREN, 841:57-841:58
INT("0"), 841:58-841:59
COMMA, 841:59-841:60
INT("65534"), 841:61-841:66
RPAREN, 841:66-841:67
RBRACKET, 841:67-841:68
ATTRIBUTE, 841:69-841:78
UNSIGNED, 841:79-841:87
LONG, 841:88-841:92
ID("rowSpan"), 841:93-841:100
SEMI, 841:100-841:101
LBRACKET, 842:3-842:4
ID("CEReactions"), 842:4-842:15
COMMA, 842:15-842:16
ID("Reflect"), 842:17-842:24
RBRACKET, 842:24-842:25
ATTRIBUTE, 842:26-842:35
DOMSTRING, 842:36-842:45
ID("headers"), 842:46-842:53
SEMI, 842:53-842:54
READONLY, 843:3-843:11
ATTRIBUTE, 843:12-843:21
LONG, 843:22-843:26
ID("cellIndex"), 843:27-843:36
SEMI, 843:36-843:37
LBRACKET, 845:3-845:4
ID("CEReactions"), 845:4-845:15
RBRACKET, 845:15-845:16
ATTRIBUTE, 845:17-845:26
DOMSTRING, 845:27-845:36
ID("scope"), 845:37-845:42
SEMI, 845:42-845:43
LBRACKET, 846:3-846:4
ID("CEReactions"), 846:4-846:15
COMMA, 846:15-846:16
ID("Reflect"), 846:17-846:24
RBRACKET, 846:24-846:25
ATTRIBUTE, 846:26-846:35
DOMSTRING, 846:36-846:45
ID("abbr"), 846:46-846:50
SEMI, 846:50-846:51
RBRACE, 849:1-849:2
SEMI, 849:2-849:3
LBRACKET, 851:1-851:2
ID("Exposed"), 851:2-851:9
EQUAL, 851:9-851:10
ID("Window"), 851:10-851:16
COMMA, 851:16-851:17
ID("LegacyOverrideBuiltIns"), 852:2-852:24
COMMA, 852:24-852:25
ID("LegacyUnenumerableNamedProperties"), 853:2-853:35
RBRACKET, 853:35-853:36
INTERFACE, 854:1-854:10
ID("HTMLFormElement"), 854:11-854:26
COLON, 854:27-854:28
ID("HTMLElement"), 854:29-854:40
LBRACE, 854:41-854:42
LBRACKET, 855:3-855:4
ID("HTMLConstructor"), 855:4-855:19
RBRACKET, 855:19-855:20
CONSTRUCTOR, 855:21-855:32
LPAREN, 855:32-855:33
RPAREN, 855:33-855:34
SEMI, 855:34-855:35
LBRACKET, 857:3-857:4
ID("CEReactions"), 857:4-857:15
COMMA, 857:15-857:16
ID("Reflect"), 857:17-857:24
EQUAL, 857:24-857:25
STRING("\"accept-charset\""), 857:25-857:41
RBRACKET, 857:41-857:42
ATTRIBUTE, 857:43-857:52
DOMSTRING, 857:53-857:62
ID("acceptCharset"), 857:63-857:76
SEMI, 857:76-857:77
LBRACKET, 858:3-858:4
ID("CEReactions"), 858:4-858:15
COMMA, 858:15-858:16
ID("ReflectSetter"), 858:17-858:30
RBRACKET, 858:30-858:31
ATTRIBUTE, 858:32-858:41
USVSTRING, 858:42-858:51
ID("action"), 858:52-858:58
SEMI, 858:58-858:59
LBRACKET, 859:3-859:4
ID("CEReactions"), 859:4-859:15
RBRACKET, 859:15-859:16
ATTRIBUTE, 859:17-859:26
DOMSTRING, 859:27-859:36
ID("autocomplete"), 859:37-859:49
SEMI, 859:49-859:50
LBRACKET, 860:3-860:4
ID("CEReactions"), 860:4-860:15
RBRACKET, 860:15-860:16
ATTRIBUTE, 860:17-860:26
DOMSTRING, 860:27-860:36
ID("enctype"), 860:37-860:44
SEMI, 860:44-860:45
LBRACKET, 861:3-861:4
ID("CEReactions"), 861:4-861:15
RBRACKET, 861:15-861:16
ATTRIBUTE, 861:17-861:26
DOMSTRING, 861:27-861:36
ID("encoding"), 861:37-861:45
SEMI, 861:45-861:46
LBRACKET, 862:3-862:4
ID("CEReactions"), 862:4-862:15
RBRACKET, 862:15-862:16
ATTRIBUTE, 862:17-862:26
DOMSTRING, 862:27-862:36
ID("method"), 862:37-862:43
SEMI, 862:43-862:44
LBRACKET, 863:3-863:4
ID("CEReactions"), 863:4-863:15
COMMA, 863:15-863:16
ID("Reflect"), 863:17-863:24
RBRACKET, 863:24-863:25
ATTRIBUTE, 863:26-863:35
DOMSTRING, 863:36-863:45
ID("name"), 863:46-863:50
SEMI, 863:50-863:51
LBRACKET, 864:3-864:4
ID("CEReactions"), 864:4-864:15
COMMA, 864:15-864:16
ID("Reflect"), 864:17-864:24
RBRACKET, 864:24-864:25
ATTRIBUTE, 864:26-864:35
BOOLEAN, 864:36-864:43
ID("noValidate"), 864:44-864:54
SEMI, 864:54-864:55
LBRACKET, 865:3-865:4
ID("CEReactions"), 865:4-865:15
COMMA, 865:15-865:16
ID("Reflect"), 865:17-865:24
RBRACKET, 865:24-865:25
ATTRIBUTE, 865:26-865:35
DOMSTRING, 865:36-865:45
ID("target"), 865:46-865:52
SEMI, 865:52-865:53
LBRACKET, 866:3-866:4
ID("CEReactions"), 866:4-866:15
COMMA, 866:15-866:16
ID("Reflect"), 866:17-866:24
RBRACKET, 866:24-866:25
ATTRIBUTE, 866:26-866:35
DOMSTRING, 866:36-866:45
ID("rel"), 866:46-866:49
SEMI, 866:49-866:50
LBRACKET, 867:3-867:4
ID("SameObject"), 867:4-867:14
COMMA, 867:14-867:15
ID("PutForwards"), 867:16-867:27
EQUAL, 867:27-867:28
ID("value"), 867:28-867:33
COMMA, 867:33-867:34
ID("Reflect"), 867:35-867:42
EQUAL, 867:42-867:43
STRING("\"rel\""), 867:43-867:48
RBRACKET, 867:48-867:49
READONLY, 867:50-867:58
ATTRIBUTE, 867:59-867:68
ID("DOMTokenList"), 867:69-867:81
ID("relList"), 867:82-867:89
SEMI, 867:89-867:90
LBRACKET, 869:3-869:4
ID("SameObject"), 869:4-869:14
RBRACKET, 869:14-869:15
READONLY, 869:16-869:24
ATTRIBUTE, 869:25-869:34
ID("HTMLFormControlsCollection"), 869:35-869:61
ID("elements"), 869:62-869:70
SEMI, 869:70-869:71
READONLY, 870:3-870:11
ATTRIBUTE, 870:12-870:21
UNSIGNED, 870:22-870:30
LONG, 870:31-870:35
ID("length"), 870:36-870:42
SEMI, 870:42-870:43
GETTER, 871:3-871:9
ID("Element"), 871:10-871:17
LPAREN, 871:18-871:19
UNSIGNED, 871:19-871:27
LONG, 871:28-871:32
ID("index"), 871:33-871:38
RPAREN, 871:38-871:39
SEMI, 871:39-871:40
GETTER, 872:3-872:9
LPAREN, 872:10-872:11
ID("RadioNodeList"), 872:11-872:24
OR, 872:25-872:27
ID("Element"), 872:28-872:35
RPAREN, 872:35-872:36
LPAREN, 872:37-872:38
DOMSTRING, 872:38-872:47
ID("name"), 872:48-872:52
RPAREN, 872:52-872:53
SEMI, 872:53-872:54
UNDEFINED, 874:3-874:12
ID("submit"), 874:13-874:19
LPAREN, 874:19-874:20
RPAREN, 874:20-874:21
SEMI, 874:21-874:22
UNDEFINED, 875:3-875:12
ID("requestSubmit"), 875:13-875:26
LPAREN, 875:26-875:27
OPTIONAL, 875:27-875:35
ID("HTMLElement"), 875:36-875:47
QUESTION, 875:47-875:48
ID("submitter"), 875:49-875:58
EQUAL, 875:59-875:60
NULL, 875:61-875:65
RPAREN, 875:65-875:66
SEMI, 875:66-875:67
LBRACKET, 876:3-876:4
ID("CEReactions"), 876:4-876:15
RBRACKET, 876:15-876:16
UNDEFINED, 876:17-876:26
ID("reset"), 876:27-876:32
LPAREN, 876:32-876:33
RPAREN, 876:33-876:34
SEMI, 876:34-876:35
BOOLEAN, 877:3-877:10
ID("checkValidity"), 877:11-877:24
LPAREN, 877:24-877:25
RPAREN, 877:25-877:26
SEMI, 877:26-877:27
BOOLEAN, 878:3-878:10
ID("reportValidity"), 878:11-878:25
LPAREN, 878:25-878:26
RPAREN, 878:26-878:27
SEMI, 878:27-878:28
RBRACE, 879:1-879:2
SEMI, 879:2-879:3
LBRACKET, 881:1-881:2
ID("Exposed"), 881:2-881:9
EQUAL, 881:9-881:10
ID("Window"), 881:10-881:16
RBRACKET, 881:16-881:17
INTERFACE, 882:1-882:10
ID("HTMLLabelElement"), 882:11-882:27
COLON, 882:28-882:29
ID("HTMLElement"), 882:30-882:41
LBRACE, 882:42-882:43
LBRACKET, 883:3-883:4
ID("HTMLConstructor"), 883:4-883:19
RBRACKET, 883:19-883:20
CONSTRUCTOR, 883:21-883:32
LPAREN, 883:32-883:33
RPAREN, 883:33-883:34
SEMI, 883:34-883:35
READONLY, 885:3-885:11
ATTRIBUTE, 885:12-885:21
ID("HTMLFormElement"), 885:22-885:37
QUESTION, 885:37-885:38
ID("form"), 885:39-885:43
SEMI, 885:43-885:44
LBRACKET, 886:3-886:4
ID("CEReactions"), 886:4-886:15
COMMA, 886:15-886:16
ID("Reflect"), 886:17-886:24
EQUAL, 886:24-886:25
STRING("\"for\""), 886:25-886:30
RBRACKET, 886:30-886:31
ATTRIBUTE, 886:32-886:41
DOMSTRING, 886:42-886:51
ID("htmlFor"), 886:52-886:59
SEMI, 886:59-886:60
READONLY, 887:3-887:11
ATTRIBUTE, 887:12-887:21
ID("HTMLElement"), 887:22-887:33
QUESTION, 887:33-887:34
ID("control"), 887:35-887:42
SEMI, 887:42-887:43
RBRACE, 888:1-888:2
SEMI, 888:2-888:3
LBRACKET, 890:1-890:2
ID("Exposed"), 890:2-890:9
EQUAL, 890:9-890:10
ID("Window"), 890:10-890:16
RBRACKET, 890:16-890:17
INTERFACE, 891:1-891:10
ID("HTMLInputElement"), 891:11-891:27
COLON, 891:28-891:29
ID("HTMLElement"), 891:30-891:41
LBRACE, 891:42-891:43
LBRACKET, 892:3-892:4
ID("HTMLConstructor"), 892:4-892:19
RBRACKET, 892:19-892:20
CONSTRUCTOR, 892:21-892:32
LPAREN, 892:32-892:33
RPAREN, 892:33-892:34
SEMI, 892:34-892:35
LBRACKET, 894:3-894:4
ID("CEReactions"), 894:4-894:15
COMMA, 894:15-894:16
ID("Reflect"), 894:17-894:24
RBRACKET, 894:24-894:25
ATTRIBUTE, 894:26-894:35
DOMSTRING, 894:36-894:45
ID("accept"), 894:46-894:52
SEMI, 894:52-894:53
LBRACKET, 895:3-895:4
ID("CEReactions"), 895:4-895:15
COMMA, 895:15-895:16
ID("Reflect"), 895:17-895:24
RBRACKET, 895:24-895:25
ATTRIBUTE, 895:26-895:35
BOOLEAN, 895:36-895:43
ID("alpha"), 895:44-895:49
SEMI, 895:49-895:50
LBRACKET, 896:3-896:4
ID("CEReactions"), 896:4-896:15
COMMA, 896:15-896:16
ID("Reflect"), 896:17-896:24
RBRACKET, 896:24-896:25
ATTRIBUTE, 896:26-896:35
DOMSTRING, 896:36-896:45
ID("alt"), 896:46-896:49
SEMI, 896:49-896:50
LBRACKET, 897:3-897:4
ID("CEReactions"), 897:4-897:15
COMMA, 897:15-897:16
ID("ReflectSetter"), 897:17-897:30
RBRACKET, 897:30-897:31
ATTRIBUTE, 897:32-897:41
DOMSTRING, 897:42-897:51
ID("autocomplete"), 897:52-897:64
SEMI, 897:64-897:65
LBRACKET, 898:3-898:4
ID("CEReactions"), 898:4-898:15
COMMA, 898:15-898:16
ID("Reflect"), 898:17-898:24
EQUAL, 898:24-898:25
STRING("\"checked\""), 898:25-898:34
RBRACKET, 898:34-898:35
ATTRIBUTE, 898:36-898:45
BOOLEAN, 898:46-898:53
ID("defaultChecked"), 898:54-898:68
SEMI, 898:68-898:69
ATTRIBUTE, 899:3-899:12
BOOLEAN, 899:13-899:20
ID("checked"), 899:21-899:28
SEMI, 899:28-899:29
LBRACKET, 900:3-900:4
ID("CEReactions"), 900:4-900:15
RBRACKET, 900:15-900:16
ATTRIBUTE, 900:17-900:26
DOMSTRING, 900:27-900:36
ID("colorSpace"), 900:37-900:47
SEMI, 900:47-900:48
LBRACKET, 901:3-901:4
ID("CEReactions"), 901:4-901:15
COMMA, 901:15-901:16
ID("Reflect"), 901:17-901:24
RBRACKET, 901:24-901:25
ATTRIBUTE, 901:26-901:35
DOMSTRING, 901:36-901:45
ID("dirName"), 901:46-901:53
SEMI, 901:53-901:54
LBRACKET, 902:3-902:4
ID("CEReactions"), 902:4-902:15
COMMA, 902:15-902:16
ID("Reflect"), 902:17-902:24
RBRACKET, 902:24-902:25
ATTRIBUTE, 902:26-902:35
BOOLEAN, 902:36-902:43
ID("disabled"), 902:44-902:52
SEMI, 902:52-902:53
READONLY, 903:3-903:11
ATTRIBUTE, 903:12-903:21
ID("HTMLFormElement"), 903:22-903:37
QUESTION, 903:37-903:38
ID("form"), 903:39-903:43
SEMI, 903:43-903:44
ATTRIBUTE, 904:3-904:12
ID("FileList"), 904:13-904:21
QUESTION, 904:21-904:22
ID("files"), 904:23-904:28
SEMI, 904:28-904:29
LBRACKET, 905:3-905:4
ID("CEReactions"), 905:4-905:15
COMMA, 905:15-905:16
ID("ReflectSetter"), 905:17-905:30
RBRACKET, 905:30-905:31
ATTRIBUTE, 905:32-905:41
USVSTRING, 905:42-905:51
ID("formAction"), 905:52-905:62
SEMI, 905:62-905:63
LBRACKET, 906:3-906:4
ID("CEReactions"), 906:4-906:15
RBRACKET, 906:15-906:16
ATTRIBUTE, 906:17-906:26
DOMSTRING, 906:27-906:36
ID("formEnctype"), 906:37-906:48
SEMI, 906:48-906:49
LBRACKET, 907:3-907:4
ID("CEReactions"), 907:4-907:15
RBRACKET, 907:15-907:16
ATTRIBUTE, 907:17-907:26
DOMSTRING, 907:27-907:36
ID("formMethod"), 907:37-907:47
SEMI, 907:47-907:48
LBRACKET, 908:3-908:4
ID("CEReactions"), 908:4-908:15
COMMA, 908:15-908:16
ID("Reflect"), 908:17-908:24
RBRACKET, 908:24-908:25
ATTRIBUTE, 908:26-908:35
BOOLEAN, 908:36-908:43
ID("formNoValidate"), 908:44-908:58
SEMI, 908:58-908:59
LBRACKET, 909:3-909:4
ID("CEReactions"), 909:4-909:15
COMMA, 909:15-909:16
ID("Reflect"), 909:17-909:24
RBRACKET, 909:24-909:25
ATTRIBUTE, 909:26-909:35
DOMSTRING, 909:36-909:45
ID("formTarget"), 909:46-909:56
SEMI, 909:56-909:57
LBRACKET, 910:3-910:4
ID("CEReactions"), 910:4-910:15
COMMA, 910:15-910:16
ID("ReflectSetter"), 910:17-910:30
RBRACKET, 910:30-910:31
ATTRIBUTE, 910:32-910:41
UNSIGNED, 910:42-910:50
LONG, 910:51-910:55
ID("height"), 910:56-910:62
SEMI, 910:62-910:63
ATTRIBUTE, 911:3-911:12
BOOLEAN, 911:13-911:20
ID("indeterminate"), 911:21-911:34
SEMI, 911:34-911:35
READONLY, 912:3-912:11
ATTRIBUTE, 912:12-912:21
ID("HTMLDataListElement"), 912:22-912:41
QUESTION, 912:41-912:42
ID("list"), 912:43-912:47
SEMI, 912:47-912:48
LBRACKET, 913:3-913:4
ID("CEReactions"), 913:4-913:15
COMMA, 913:15-913:16
ID("Reflect"), 913:17-913:24
RBRACKET, 913:24-913:25
ATTRIBUTE, 913:26-913:35
DOMSTRING, 913:36-913:45
ID("max"), 913:46-913:49
SEMI, 913:49-913:50
LBRACKET, 914:3-914:4
ID("CEReactions"), 914:4-914:15
COMMA, 914:15-914:16
ID("ReflectNonNegative"), 914:17-914:35
RBRACKET, 914:35-914:36
ATTRIBUTE, 914:37-914:46
LONG, 914:47-914:51
ID("maxLength"), 914:52-914:61
SEMI, 914:61-914:62
LBRACKET, 915:3-915:4
ID("CEReactions"), 915:4-915:15
COMMA, 915:15-915:16
ID("Reflect"), 915:17-915:24
RBRACKET, 915:24-915:25
ATTRIBUTE, 915:26-915:35
DOMSTRING, 915:36-915:45
ID("min"), 915:46-915:49
SEMI, 915:49-915:50
LBRACKET, 916:3-916:4
ID("CEReactions"), 916:4-916:15
COMMA, 916:15-916:16
ID("ReflectNonNegative"), 916:17-916:35
RBRACKET, 916:35-916:36
ATTRIBUTE, 916:37-916:46
LONG, 916:47-916:51
ID("minLength"), 916:52-916:61
SEMI, 916:61-916:62
LBRACKET, 917:3-917:4
ID("CEReactions"), 917:4-917:15
COMMA, 917:15-917:16
ID("Reflect"), 917:17-917:24
RBRACKET, 917:24-917:25
ATTRIBUTE, 917:26-917:35
BOOLEAN, 917:36-917:43
ID("multiple"), 917:44-917:52
SEMI, 917:52-917:53
LBRACKET, 918:3-918:4
ID("CEReactions"), 918:4-918:15
COMMA, 918:15-918:16
ID("Reflect"), 918:17-918:24
RBRACKET, 918:24-918:25
ATTRIBUTE, 918:26-918:35
DOMSTRING, 918:36-918:45
ID("name"), 918:46-918:50
SEMI, 918:50-918:51
LBRACKET, 919:3-919:4
ID("CEReactions"), 919:4-919:15
COMMA, 919:15-919:16
ID("Reflect"), 919:17-919:24
RBRACKET, 919:24-919:25
ATTRIBUTE, 919:26-919:35
DOMSTRING, 919:36-919:45
ID("pattern"), 919:46-919:53
SEMI, 919:53-919:54
LBRACKET, 920:3-920:4
ID("CEReactions"), 920:4-920:15
COMMA, 920:15-920:16
ID("Reflect"), 920:17-920:24
RBRACKET, 920:24-920:25
ATTRIBUTE, 920:26-920:35
DOMSTRING, 920:36-920:45
ID("placeholder"), 920:46-920:57
SEMI, 920:57-920:58
LBRACKET, 921:3-921:4
ID("CEReactions"), 921:4-921:15
COMMA, 921:15-921:16
ID("Reflect"), 921:17-921:24
RBRACKET, 921:24-921:25
ATTRIBUTE, 921:26-921:35
BOOLEAN, 921:36-921:43
ID("readOnly"), 921:44-921:52
SEMI, 921:52-921:53
LBRACKET, 922:3-922:4
ID("CEReactions"), 922:4-922:15
COMMA, 922:15-922:16
ID("Reflect"), 922:17-922:24
RBRACKET, 922:24-922:25
ATTRIBUTE, 922:26-922:35
BOOLEAN, 922:36-922:43
REQUIRED, 922:44-922:52
SEMI, 922:52-922:53
LBRACKET, 923:3-923:4
ID("CEReactions"), 923:4-923:15
COMMA, 923:15-923:16
ID("Reflect"), 923:17-923:24
RBRACKET, 923:24-923:25
ATTRIBUTE, 923:26-923:35
UNSIGNED, 923:36-923:44
LONG, 923:45-923:49
ID("size"), 923:50-923:54
SEMI, 923:54-923:55
LBRACKET, 924:3-924:4
ID("CEReactions"), 924:4-924:15
COMMA, 924:15-924:16
ID("ReflectURL"), 924:17-924:27
RBRACKET, 924:27-924:28
ATTRIBUTE, 924:29-924:38
USVSTRING, 924:39-924:48
ID("src"), 924:49-924:52
SEMI, 924:52-924:53
LBRACKET, 925:3-925:4
ID("CEReactions"), 925:4-925:15
COMMA, 925:15-925:16
ID("Reflect"), 925:17-925:24
RBRACKET, 925:24-925:25
ATTRIBUTE, 925:26-925:35
DOMSTRING, 925:36-925:45
ID("step"), 925:46-925:50
SEMI, 925:50-925:51
LBRACKET, 926:3-926:4
ID("CEReactions"), 926:4-926:15
RBRACKET, 926:15-926:16
ATTRIBUTE, 926:17-926:26
DOMSTRING, 926:27-926:36
ID("type"), 926:37-926:41
SEMI, 926:41-926:42
LBRACKET, 927:3-927:4
ID("CEReactions"), 927:4-927:15
COMMA, 927:15-927:16
ID("Reflect"), 927:17-927:24
EQUAL, 927:24-927:25
STRING("\"value\""), 927:25-927:32
RBRACKET, 927:32-927:33
ATTRIBUTE, 927:34-927:43
DOMSTRING, 927:44-927:53
ID("defaultValue"), 927:54-927:66
SEMI, 927:66-927:67
LBRACKET, 928:3-928:4
ID("CEReactions"), 928:4-928:15
RBRACKET, 928:15-928:16
ATTRIBUTE, 928:17-928:26
LBRACKET, 928:27-928:28
ID("LegacyNullToEmptyString"), 928:28-928:51
RBRACKET, 928:51-928:52
DOMSTRING, 928:53-928:62
ID("value"), 928:63-928:68
SEMI, 928:68-928:69
ATTRIBUTE, 929:3-929:12
OBJECT, 929:13-929:19
QUESTION, 929:19-929:20
ID("valueAsDate"), 929:21-929:32
SEMI, 929:32-929:33
ATTRIBUTE, 930:3-930:12
UNRESTRICTED, 930:13-930:25
DOUBLE, 930:26-930:32
ID("valueAsNumber"), 930:33-930:46
SEMI, 930:46-930:47
LBRACKET, 931:3-931:4
ID("CEReactions"), 931:4-931:15
COMMA, 931:15-931:16
ID("ReflectSetter"), 931:17-931:30
RBRACKET, 931:30-931:31
ATTRIBUTE, 931:32-931:41
UNSIGNED, 931:42-931:50
LONG, 931:51-931:55
ID("width"), 931:56-931:61
SEMI, 931:61-931:62
UNDEFINED, 933:3-933:12
ID("stepUp"), 933:13-933:19
LPAREN, 933:19-933:20
OPTIONAL, 933:20-933:28
LONG, 933:29-933:33
ID("n"), 933:34-933:35
EQUAL, 933:36-933:37
INT("1"), 933:38-933:39
RPAREN, 933:39-933:40
SEMI, 933:40-933:41
UNDEFINED, 934:3-934:12
ID("stepDown"), 934:13-934:21
LPAREN, 934:21-934:22
OPTIONAL, 934:22-934:30
LONG, 934:31-934:35
ID("n"), 934:36-934:37
EQUAL, 934:38-934:39
INT("1"), 934:40-934:41
RPAREN, 934:41-934:42
SEMI, 934:42-934:43
READONLY, 936:3-936:11
ATTRIBUTE, 936:12-936:21
BOOLEAN, 936:22-936:29
ID("willValidate"), 936:30-936:42
SEMI, 936:42-936:43
READONLY, 937:3-937:11
ATTRIBUTE, 937:12-937:21
ID("ValidityState"), 937:22-937:35
ID("validity"), 937:36-937:44
SEMI, 937:44-937:45
READONLY, 938:3-938:11
ATTRIBUTE, 938:12-938:21
DOMSTRING, 938:22-938:31
ID("validationMessage"), 938:32-938:49
SEMI, 938:49-938:50
BOOLEAN, 939:3-939:10
ID("checkValidity"), 939:11-939:24
LPAREN, 939:24-939:25
RPAREN, 939:25-939:26
SEMI, 939:26-939:27
BOOLEAN, 940:3-940:10
ID("reportValidity"), 940:11-940:25
LPAREN, 940:25-940:26
RPAREN, 940:26-940:27
SEMI, 940:27-940:28
UNDEFINED, 941:3-941:12
ID("setCustomValidity"), 941:13-941:30
LPAREN, 941:30-941:31
DOMSTRING, 941:31-941:40
ID("error"), 941:41-941:46
RPAREN, 941:46-941:47
SEMI, 941:47-941:48
READONLY, 943:3-943:11
ATTRIBUTE, 943:12-943:21
ID("NodeList"), 943:22-943:30
QUESTION, 943:30-943:31
ID("labels"), 943:32-943:38
SEMI, 943:38-943:39
UNDEFINED, 945:3-945:12
ID("select"), 945:13-945:19
LPAREN, 945:19-945:20
RPAREN, 945:20-945:21
SEMI, 945:21-945:22
ATTRIBUTE, 946:3-946:12
UNSIGNED, 946:13-946:21
LONG, 946:22-946:26
QUESTION, 946:26-946:27
ID("selectionStart"), 946:28-946:42
SEMI, 946:42-946:43
ATTRIBUTE, 947:3-947:12
UNSIGNED, 947:13-947:21
LONG, 947:22-947:26
QUESTION, 947:26-947:27
ID("selectionEnd"), 947:28-947:40
SEMI, 947:40-947:41
ATTRIBUTE, 948:3-948:12
DOMSTRING, 948:13-948:22
QUESTION, 948:22-948:23
ID("selectionDirection"), 948:24-948:42
SEMI, 948:42-948:43
UNDEFINED, 949:3-949:12
ID("setRangeText"), 949:13-949:25
LPAREN, 949:25-949:26
DOMSTRING, 949:26-949:35
ID("replacement"), 949:36-949:47
RPAREN, 949:47-949:48
SEMI, 949:48-949:49
UNDEFINED, 950:3-950:12
ID("setRangeText"), 950:13-950:25
LPAREN, 950:25-950:26
DOMSTRING, 950:26-950:35
ID("replacement"), 950:36-950:47
COMMA, 950:47-950:48
UNSIGNED, 950:49-950:57
LONG, 950:58-950:62
ID("start"), 950:63-950:68
COMMA, 950:68-950:69
UNSIGNED, 950:70-950:78
LONG, 950:79-950:83
ID("end"), 950:84-950:87
COMMA, 950:87-950:88
OPTIONAL, 950:89-950:97
ID("SelectionMode"), 950:98-950:111
ID("selectionMode"), 950:112-950:125
EQUAL, 950:126-950:127
STRING("\"preserve\""), 950:128-950:138
RPAREN, 950:138-950:139
SEMI, 950:139-950:140
UNDEFINED, 951:3-951:12
ID("setSelectionRange"), 951:13-951:30
LPAREN, 951:30-951:31
UNSIGNED, 951:31-951:39
LONG, 951:40-951:44
ID("start"), 951:45-951:50
COMMA, 951:50-951:51
UNSIGNED, 951:52-951:60
LONG, 951:61-951:65
ID("end"), 951:66-951:69
COMMA, 951:69-951:70
OPTIONAL, 951:71-951:79
DOMSTRING, 951:80-951:89
ID("direction"), 951:90-951:99
RPAREN, 951:99-951:100
SEMI, 951:100-951:101
UNDEFINED, 953:3-953:12
ID("showPicker"), 953:13-953:23
LPAREN, 953:23-953:24
RPAREN, 953:24-953:25
SEMI, 953:25-953:26
RBRACE, 956:1-956:2
SEMI, 956:2-956:3
ID("HTMLInputElement"), 957:1-957:17
INCLUDES, 957:18-957:26
ID("PopoverTargetAttributes"), 957:27-957:50
SEMI, 957:50-957:51
LBRACKET, 959:1-959:2
ID("Exposed"), 959:2-959:9
EQUAL, 959:9-959:10
ID("Window"), 959:10-959:16
RBRACKET, 959:16-959:17
INTERFACE, 960:1-960:10
ID("HTMLButtonElement"), 960:11-960:28
COLON, 960:29-960:30
ID("HTMLElement"), 960:31-960:42
LBRACE, 960:43-960:44
LBRACKET, 961:3-961:4
ID("HTMLConstructor"), 961:4-961:19
RBRACKET, 961:19-961:20
CONSTRUCTOR, 961:21-961:32
LPAREN, 961:32-961:33
RPAREN, 961:33-961:34
SEMI, 961:34-961:35
LBRACKET, 963:3-963:4
ID("CEReactions"), 963:4-963:15
COMMA, 963:15-963:16
ID("ReflectSetter"), 963:17-963:30
RBRACKET, 963:30-963:31
ATTRIBUTE, 963:32-963:41
DOMSTRING, 963:42-963:51
ID("command"), 963:52-963:59
SEMI, 963:59-963:60
LBRACKET, 964:3-964:4
ID("CEReactions"), 964:4-964:15
COMMA, 964:15-964:16
ID("Reflect"), 964:17-964:24
RBRACKET, 964:24-964:25
ATTRIBUTE, 964:26-964:35
ID("Element"), 964:36-964:43
QUESTION, 964:43-964:44
ID("commandForElement"), 964:45-964:62
SEMI, 964:62-964:63
LBRACKET, 965:3-965:4
ID("CEReactions"), 965:4-965:15
COMMA, 965:15-965:16
ID("Reflect"), 965:17-965:24
RBRACKET, 965:24-965:25
ATTRIBUTE, 965:26-965:35
BOOLEAN, 965:36-965:43
ID("disabled"), 965:44-965:52
SEMI, 965:52-965:53
READONLY, 966:3-966:11
ATTRIBUTE, 966:12-966:21
ID("HTMLFormElement"), 966:22-966:37
QUESTION, 966:37-966:38
ID("form"), 966:39-966:43
SEMI, 966:43-966:44
LBRACKET, 967:3-967:4
ID("CEReactions"), 967:4-967:15
COMMA, 967:15-967:16
ID("ReflectSetter"), 967:17-967:30
RBRACKET, 967:30-967:31
ATTRIBUTE, 967:32-967:41
USVSTRING, 967:42-967:51
ID("formAction"), 967:52-967:62
SEMI, 967:62-967:63
LBRACKET, 968:3-968:4
ID("CEReactions"), 968:4-968:15
RBRACKET, 968:15-968:16
ATTRIBUTE, 968:17-968:26
DOMSTRING, 968:27-968:36
ID("formEnctype"), 968:37-968:48
SEMI, 968:48-968:49
LBRACKET, 969:3-969:4
ID("CEReactions"), 969:4-969:15
RBRACKET, 969:15-969:16
ATTRIBUTE, 969:17-969:26
DOMSTRING, 969:27-969:36
ID("formMethod"), 969:37-969:47
SEMI, 969:47-969:48
LBRACKET, 970:3-970:4
ID("CEReactions"), 970:4-970:15
COMMA, 970:15-970:16
ID("Reflect"), 970:17-970:24
RBRACKET, 970:24-970:25
ATTRIBUTE, 970:26-970:35
BOOLEAN, 970:36-970:43
ID("formNoValidate"), 970:44-970:58
SEMI, 970:58-970:59
LBRACKET, 971:3-971:4
ID("CEReactions"), 971:4-971:15
COMMA, 971:15-971:16
ID("Reflect"), 971:17-971:24
RBRACKET, 971:24-971:25
ATTRIBUTE, 971:26-971:35
DOMSTRING, 971:36-971:45
ID("formTarget"), 971:46-971:56
SEMI, 971:56-971:57
LBRACKET, 972:3-972:4
ID("CEReactions"), 972:4-972:15
COMMA, 972:15-972:16
ID("Reflect"), 972:17-972:24
RBRACKET, 972:24-972:25
ATTRIBUTE, 972:26-972:35
DOMSTRING, 972:36-972:45
ID("name"), 972:46-972:50
SEMI, 972:50-972:51
LBRACKET, 973:3-973:4
ID("CEReactions"), 973:4-973:15
COMMA, 973:15-973:16
ID("ReflectSetter"), 973:17-973:30
RBRACKET, 973:30-973:31
ATTRIBUTE, 973:32-973:41
DOMSTRING, 973:42-973:51
ID("type"), 973:52-973:56
SEMI, 973:56-973:57
LBRACKET, 974:3-974:4
ID("CEReactions"), 974:4-974:15
COMMA, 974:15-974:16
ID("Reflect"), 974:17-974:24
RBRACKET, 974:24-974:25
ATTRIBUTE, 974:26-974:35
DOMSTRING, 974:36-974:45
ID("value"), 974:46-974:51
SEMI, 974:51-974:52
READONLY, 976:3-976:11
ATTRIBUTE, 976:12-976:21
BOOLEAN, 976:22-976:29
ID("willValidate"), 976:30-976:42
SEMI, 976:42-976:43
READONLY, 977:3-977:11
ATTRIBUTE, 977:12-977:21
ID("ValidityState"), 977:22-977:35
ID("validity"), 977:36-977:44
SEMI, 977:44-977:45
READONLY, 978:3-978:11
ATTRIBUTE, 978:12-978:21
DOMSTRING, 978:22-978:31
ID("validationMessage"), 978:32-978:49
SEMI, 978:49-978:50
BOOLEAN, 979:3-979:10
ID("checkValidity"), 979:11-979:24
LPAREN, 979:24-979:25
RPAREN, 979:25-979:26
SEMI, 979:26-979:27
BOOLEAN, 980:3-980:10
ID("reportValidity"), 980:11-980:25
LPAREN, 980:25-980:26
RPAREN, 980:26-980:27
SEMI, 980:27-980:28
UNDEFINED, 981:3-981:12
ID("setCustomValidity"), 981:13-981:30
LPAREN, 981:30-981:31
DOMSTRING, 981:31-981:40
ID("error"), 981:41-981:46
RPAREN, 981:46-981:47
SEMI, 981:47-981:48
READONLY, 983:3-983:11
ATTRIBUTE, 983:12-983:21
ID("NodeList"), 983:22-983:30
ID("labels"), 983:31-983:37
SEMI, 983:37-983:38
RBRACE, 984:1-984:2
SEMI, 984:2-984:3
ID("HTMLButtonElement"), 985:1-985:18
INCLUDES, 985:19-985:27
ID("PopoverTargetAttributes"), 985:28-985:51
SEMI, 985:51-985:52
LBRACKET, 987:1-987:2
ID("Exposed"), 987:2-987:9
EQUAL, 987:9-987:10
ID("Window"), 987:10-987:16
RBRACKET, 987:16-987:17
INTERFACE, 988:1-988:10
ID("HTMLSelectElement"), 988:11-988:28
COLON, 988:29-988:30
ID("HTMLElement"), 988:31-988:42
LBRACE, 988:43-988:44
LBRACKET, 989:3-989:4
ID("HTMLConstructor"), 989:4-989:19
RBRACKET, 989:19-989:20
CONSTRUCTOR, 989:21-989:32
LPAREN, 989:32-989:33
RPAREN, 989:33-989:34
SEMI, 989:34-989:35
LBRACKET, 991:3-991:4
ID("CEReactions"), 991:4-991:15
COMMA, 991:15-991:16
ID("ReflectSetter"), 991:17-991:30
RBRACKET, 991:30-991:31
ATTRIBUTE, 991:32-991:41
DOMSTRING, 991:42-991:51
ID("autocomplete"), 991:52-991:64
SEMI, 991:64-991:65
LBRACKET, 992:3-992:4
ID("CEReactions"), 992:4-992:15
COMMA, 992:15-992:16
ID("Reflect"), 992:17-992:24
RBRACKET, 992:24-992:25
ATTRIBUTE, 992:26-992:35
BOOLEAN, 992:36-992:43
ID("disabled"), 992:44-992:52
SEMI, 992:52-992:53
READONLY, 993:3-993:11
ATTRIBUTE, 993:12-993:21
ID("HTMLFormElement"), 993:22-993:37
QUESTION, 993:37-993:38
ID("form"), 993:39-993:43
SEMI, 993:43-993:44
LBRACKET, 994:3-994:4
ID("CEReactions"), 994:4-994:15
COMMA, 994:15-994:16
ID("Reflect"), 994:17-994:24
RBRACKET, 994:24-994:25
ATTRIBUTE, 994:26-994:35
BOOLEAN, 994:36-994:43
ID("multiple"), 994:44-994:52
SEMI, 994:52-994:53
LBRACKET, 995:3-995:4
ID("CEReactions"), 995:4-995:15
COMMA, 995:15-995:16
ID("Reflect"), 995:17-995:24
RBRACKET, 995:24-995:25
ATTRIBUTE, 995:26-995:35
DOMSTRING, 995:36-995:45
ID("name"), 995:46-995:50
SEMI, 995:50-995:51
LBRACKET, 996:3-996:4
ID("CEReactions"), 996:4-996:15
COMMA, 996:15-996:16
ID("Reflect"), 996:17-996:24
RBRACKET, 996:24-996:25
ATTRIBUTE, 996:26-996:35
BOOLEAN, 996:36-996:43
REQUIRED, 996:44-996:52
SEMI, 996:52-996:53
LBRACKET, 997:3-997:4
ID("CEReactions"), 997:4-997:15
COMMA, 997:15-997:16
ID("Reflect"), 997:17-997:24
COMMA, 997:24-997:25
ID("ReflectDefault"), 997:26-997:40
EQUAL, 997:40-997:41
INT("0"), 997:41-997:42
RBRACKET, 997:42-997:43
ATTRIBUTE, 997:44-997:53
UNSIGNED, 997:54-997:62
LONG, 997:63-997:67
ID("size"), 997:68-997:72
SEMI, 997:72-997:73
READONLY, 999:3-999:11
ATTRIBUTE, 999:12-999:21
DOMSTRING, 999:22-999:31
ID("type"), 999:32-999:36
SEMI, 999:36-999:37
LBRACKET, 1001:3-1001:4
ID("SameObject"), 1001:4-1001:14
RBRACKET, 1001:14-1001:15
READONLY, 1001:16-1001:24
ATTRIBUTE, 1001:25-1001:34
ID("HTMLOptionsCollection"), 1001:35-1001:56
ID("options"), 1001:57-1001:64
SEMI, 1001:64-1001:65
LBRACKET, 1002:3-1002:4
ID("CEReactions"), 1002:4-1002:15
RBRACKET, 1002:15-1002:16
ATTRIBUTE, 1002:17-1002:26
UNSIGNED, 1002:27-1002:35
LONG, 1002:36-1002:40
ID("length"), 1002:41-1002:47
SEMI, 1002:47-1002:48
GETTER, 1003:3-1003:9
ID("HTMLOptionElement"), 1003:10-1003:27
QUESTION, 1003:27-1003:28
ID("item"), 1003:29-1003:33
LPAREN, 1003:33-1003:34
UNSIGNED, 1003:34-1003:42
LONG, 1003:43-1003:47
ID("index"), 1003:48-1003:53
RPAREN, 1003:53-1003:54
SEMI, 1003:54-1003:55
ID("HTMLOptionElement"), 1004:3-1004:20
QUESTION, 1004:20-1004:21
ID("namedItem"), 1004:22-1004:31
LPAREN, 1004:31-1004:32
DOMSTRING, 1004:32-1004:41
ID("name"), 1004:42-1004:46
RPAREN, 1004:46-1004:47
SEMI, 1004:47-1004:48
LBRACKET, 1005:3-1005:4
ID("CEReactions"), 1005:4-1005:15
RBRACKET, 1005:15-1005:16
UNDEFINED, 1005:17-1005:26
ID("add"), 1005:27-1005:30
LPAREN, 1005:30-1005:31
LPAREN, 1005:31-1005:32
ID("HTMLOptionElement"), 1005:32-1005:49
OR, 1005:50-1005:52
ID("HTMLOptGroupElement"), 1005:53-1005:72
RPAREN, 1005:72-1005:73
ID("element"), 1005:74-1005:81
COMMA, 1005:81-1005:82
OPTIONAL, 1005:83-1005:91
LPAREN, 1005:92-1005:93
ID("HTMLElement"), 1005:93-1005:104
OR, 1005:105-1005:107
LONG, 1005:108-1005:112
RPAREN, 1005:112-1005:113
QUESTION, 1005:113-1005:114
ID("before"), 1005:115-1005:121
EQUAL, 1005:122-1005:123
NULL, 1005:124-1005:128
RPAREN, 1005:128-1005:129
SEMI, 1005:129-1005:130
LBRACKET, 1006:3-1006:4
ID("CEReactions"), 1006:4-1006:15
RBRACKET, 1006:15-1006:16
UNDEFINED, 1006:17-1006:26
ID("remove"), 1006:27-1006:33
LPAREN, 1006:33-1006:34
RPAREN, 1006:34-1006:35
SEMI, 1006:35-1006:36
LBRACKET, 1007:3-1007:4
ID("CEReactions"), 1007:4-1007:15
RBRACKET, 1007:15-1007:16
UNDEFINED, 1007:17-1007:26
ID("remove"), 1007:27-1007:33
LPAREN, 1007:33-1007:34
LONG, 1007:34-1007:38
ID("index"), 1007:39-1007:44
RPAREN, 1007:44-1007:45
SEMI, 1007:45-1007:46
LBRACKET, 1008:3-1008:4
ID("CEReactions"), 1008:4-1008:15
RBRACKET, 1008:15-1008:16
SETTER, 1008:17-1008:23
UNDEFINED, 1008:24-1008:33
LPAREN, 1008:34-1008:35
UNSIGNED, 1008:35-1008:43
LONG, 1008:44-1008:48
ID("index"), 1008:49-1008:54
COMMA, 1008:54-1008:55
ID("HTMLOptionElement"), 1008:56-1008:73
QUESTION, 1008:73-1008:74
ID("option"), 1008:75-1008:81
RPAREN, 1008:81-1008:82
SEMI, 1008:82-1008:83
LBRACKET, 1010:3-1010:4
ID("SameObject"), 1010:4-1010:14
RBRACKET, 1010:14-1010:15
READONLY, 1010:16-1010:24
ATTRIBUTE, 1010:25-1010:34
ID("HTMLCollection"), 1010:35-1010:49
ID("selectedOptions"), 1010:50-1010:65
SEMI, 1010:65-1010:66
ATTRIBUTE, 1011:3-1011:12
LONG, 1011:13-1011:17
ID("selectedIndex"), 1011:18-1011:31
SEMI, 1011:31-1011:32
ATTRIBUTE, 1012:3-1012:12
DOMSTRING, 1012:13-1012:22
ID("value"), 1012:23-1012:28
SEMI, 1012:28-1012:29
READONLY, 1014:3-1014:11
ATTRIBUTE, 1014:12-1014:21
BOOLEAN, 1014:22-1014:29
ID("willValidate"), 1014:30-1014:42
SEMI, 1014:42-1014:43
READONLY, 1015:3-1015:11
ATTRIBUTE, 1015:12-1015:21
ID("ValidityState"), 1015:22-1015:35
ID("validity"), 1015:36-1015:44
SEMI, 1015:44-1015:45
READONLY, 1016:3-1016:11
ATTRIBUTE, 1016:12-1016:21
DOMSTRING, 1016:22-1016:31
ID("validationMessage"), 1016:32-1016:49
SEMI, 1016:49-1016:50
BOOLEAN, 1017:3-1017:10
ID("checkValidity"), 1017:11-1017:24
LPAREN, 1017:24-1017:25
RPAREN, 1017:25-1017:26
SEMI, 1017:26-1017:27
BOOLEAN, 1018:3-1018:10
ID("reportValidity"), 1018:11-1018:25
LPAREN, 1018:25-1018:26
RPAREN, 1018:26-1018:27
SEMI, 1018:27-1018:28
UNDEFINED, 1019:3-1019:12
ID("setCustomValidity"), 1019:13-1019:30
LPAREN, 1019:30-1019:31
DOMSTRING, 1019:31-1019:40
ID("error"), 1019:41-1019:46
RPAREN, 1019:46-1019:47
SEMI, 1019:47-1019:48
UNDEFINED, 1021:3-1021:12
ID("showPicker"), 1021:13-1021:23
LPAREN, 1021:23-1021:24
RPAREN, 1021:24-1021:25
SEMI, 1021:25-1021:26
READONLY, 1023:3-1023:11
ATTRIBUTE, 1023:12-1023:21
ID("NodeList"), 1023:22-1023:30
ID("labels"), 1023:31-1023:37
SEMI, 1023:37-1023:38
RBRACE, 1024:1-1024:2
SEMI, 1024:2-1024:3
LBRACKET, 1026:1-1026:2
ID("Exposed"), 1026:2-1026:9
EQUAL, 1026:9-1026:10
ID("Window"), 1026:10-1026:16
RBRACKET, 1026:16-1026:17
INTERFACE, 1027:1-1027:10
ID("HTMLDataListElement"), 1027:11-1027:30
COLON, 1027:31-1027:32
ID("HTMLElement"), 1027:33-1027:44
LBRACE, 1027:45-1027:46
LBRACKET, 1028:3-1028:4
ID("HTMLConstructor"), 1028:4-1028:19
RBRACKET, 1028:19-1028:20
CONSTRUCTOR, 1028:21-1028:32
LPAREN, 1028:32-1028:33
RPAREN, 1028:33-1028:34
SEMI, 1028:34-1028:35
LBRACKET, 1030:3-1030:4
ID("SameObject"), 1030:4-1030:14
RBRACKET, 1030:14-1030:15
READONLY, 1030:16-1030:24
ATTRIBUTE, 1030:25-1030:34
ID("HTMLCollection"), 1030:35-1030:49
ID("options"), 1030:50-1030:57
SEMI, 1030:57-1030:58
RBRACE, 1031:1-1031:2
SEMI, 1031:2-1031:3
LBRACKET, 1033:1-1033:2
ID("Exposed"), 1033:2-1033:9
EQUAL, 1033:9-1033:10
ID("Window"), 1033:10-1033:16
RBRACKET, 1033:16-1033:17
INTERFACE, 1034:1-1034:10
ID("HTMLOptGroupElement"), 1034:11-1034:30
COLON, 1034:31-1034:32
ID("HTMLElement"), 1034:33-1034:44
LBRACE, 1034:45-1034:46
LBRACKET, 1035:3-1035:4
ID("HTMLConstructor"), 1035:4-1035:19
RBRACKET, 1035:19-1035:20
CONSTRUCTOR, 1035:21-1035:32
LPAREN, 1035:32-1035:33
RPAREN, 1035:33-1035:34
SEMI, 1035:34-1035:35
LBRACKET, 1037:3-1037:4
ID("CEReactions"), 1037:4-1037:15
COMMA, 1037:15-1037:16
ID("Reflect"), 1037:17-1037:24
RBRACKET, 1037:24-1037:25
ATTRIBUTE, 1037:26-1037:35
BOOLEAN, 1037:36-1037:43
ID("disabled"), 1037:44-1037:52
SEMI, 1037:52-1037:53
LBRACKET, 1038:3-1038:4
ID("CEReactions"), 1038:4-1038:15
COMMA, 1038:15-1038:16
ID("Reflect"), 1038:17-1038:24
RBRACKET, 1038:24-1038:25
ATTRIBUTE, 1038:26-1038:35
DOMSTRING, 1038:36-1038:45
ID("label"), 1038:46-1038:51
SEMI, 1038:51-1038:52
RBRACE, 1039:1-1039:2
SEMI, 1039:2-1039:3
LBRACKET, 1041:1-1041:2
ID("Exposed"), 1041:2-1041:9
EQUAL, 1041:9-1041:10
ID("Window"), 1041:10-1041:16
COMMA, 1041:16-1041:17
ID("LegacyFactoryFunction"), 1042:2-1042:23
EQUAL, 1042:23-1042:24
ID("Option"), 1042:24-1042:30
LPAREN, 1042:30-1042:31
OPTIONAL, 1042:31-1042:39
DOMSTRING, 1042:40-1042:49
ID("text"), 1042:50-1042:54
EQUAL, 1042:55-1042:56
STRING("\"\""), 1042:57-1042:59
COMMA, 1042:59-1042:60
OPTIONAL, 1042:61-1042:69
DOMSTRING, 1042:70-1042:79
ID("value"), 1042:80-1042:85
COMMA, 1042:85-1042:86
OPTIONAL, 1042:87-1042:95
BOOLEAN, 1042:96-1042:103
ID("defaultSelected"), 1042:104-1042:119
EQUAL, 1042:120-1042:121
FALSE, 1042:122-1042:127
COMMA, 1042:127-1042:128
OPTIONAL, 1042:129-1042:137
BOOLEAN, 1042:138-1042:145
ID("selected"), 1042:146-1042:154
EQUAL, 1042:155-1042:156
FALSE, 1042:157-1042:162
RPAREN, 1042:162-1042:163
RBRACKET, 1042:163-1042:164
INTERFACE, 1043:1-1043:10
ID("HTMLOptionElement"), 1043:11-1043:28
COLON, 1043:29-1043:30
ID("HTMLElement"), 1043:31-1043:42
LBRACE, 1043:43-1043:44
LBRACKET, 1044:3-1044:4
ID("HTMLConstructor"), 1044:4-1044:19
RBRACKET, 1044:19-1044:20
CONSTRUCTOR, 1044:21-1044:32
LPAREN, 1044:32-1044:33
RPAREN, 1044:33-1044:34
SEMI, 1044:34-1044:35
LBRACKET, 1046:3-1046:4
ID("CEReactions"), 1046:4-1046:15
COMMA, 1046:15-1046:16
ID("Reflect"), 1046:17-1046:24
RBRACKET, 1046:24-1046:25
ATTRIBUTE, 1046:26-1046:35
BOOLEAN, 1046:36-1046:43
ID("disabled"), 1046:44-1046:52
SEMI, 1046:52-1046:53
READONLY, 1047:3-1047:11
ATTRIBUTE, 1047:12-1047:21
ID("HTMLFormElement"), 1047:22-1047:37
QUESTION, 1047:37-1047:38
ID("form"), 1047:39-1047:43
SEMI, 1047:43-1047:44
LBRACKET, 1048:3-1048:4
ID("CEReactions"), 1048:4-1048:15
COMMA, 1048:15-1048:16
ID("ReflectSetter"), 1048:17-1048:30
RBRACKET, 1048:30-1048:31
ATTRIBUTE, 1048:32-1048:41
DOMSTRING, 1048:42-1048:51
ID("label"), 1048:52-1048:57
SEMI, 1048:57-1048:58
LBRACKET, 1049:3-1049:4
ID("CEReactions"), 1049:4-1049:15
COMMA, 1049:15-1049:16
ID("Reflect"), 1049:17-1049:24
EQUAL, 1049:24-1049:25
STRING("\"selected\""), 1049:25-1049:35
RBRACKET, 1049:35-1049:36
ATTRIBUTE, 1049:37-1049:46
BOOLEAN, 1049:47-1049:54
ID("defaultSelected"), 1049:55-1049:70
SEMI, 1049:70-1049:71
ATTRIBUTE, 1050:3-1050:12
BOOLEAN, 1050:13-1050:20
ID("selected"), 1050:21-1050:29
SEMI, 1050:29-1050:30
LBRACKET, 1051:3-1051:4
ID("CEReactions"), 1051:4-1051:15
COMMA, 1051:15-1051:16
ID("ReflectSetter"), 1051:17-1051:30
RBRACKET, 1051:30-1051:31
ATTRIBUTE, 1051:32-1051:41
DOMSTRING, 1051:42-1051:51
ID("value"), 1051:52-1051:57
SEMI, 1051:57-1051:58
LBRACKET, 1053:3-1053:4
ID("CEReactions"), 1053:4-1053:15
RBRACKET, 1053:15-1053:16
ATTRIBUTE, 1053:17-1053:26
DOMSTRING, 1053:27-1053:36
ID("text"), 1053:37-1053:41
SEMI, 1053:41-1053:42
READONLY, 1054:3-1054:11
ATTRIBUTE, 1054:12-1054:21
LONG, 1054:22-1054:26
ID("index"), 1054:27-1054:32
SEMI, 1054:32-1054:33
RBRACE, 1055:1-1055:2
SEMI, 1055:2-1055:3
LBRACKET, 1057:1-1057:2
ID("Exposed"), 1057:2-1057:9
EQUAL, 1057:9-1057:10
ID("Window"), 1057:10-1057:16
RBRACKET, 1057:16-1057:17
INTERFACE, 1058:1-1058:10
ID("HTMLTextAreaElement"), 1058:11-1058:30
COLON, 1058:31-1058:32
ID("HTMLElement"), 1058:33-1058:44
LBRACE, 1058:45-1058:46
LBRACKET, 1059:3-1059:4
ID("HTMLConstructor"), 1059:4-1059:19
RBRACKET, 1059:19-1059:20
CONSTRUCTOR, 1059:21-1059:32
LPAREN, 1059:32-1059:33
RPAREN, 1059:33-1059:34
SEMI, 1059:34-1059:35
LBRACKET, 1061:3-1061:4
ID("CEReactions"), 1061:4-1061:15
COMMA, 1061:15-1061:16
ID("ReflectSetter"), 1061:17-1061:30
RBRACKET, 1061:30-1061:31
ATTRIBUTE, 1061:32-1061:41
DOMSTRING, 1061:42-1061:51
ID("autocomplete"), 1061:52-1061:64
SEMI, 1061:64-1061:65
LBRACKET, 1062:3-1062:4
ID("CEReactions"), 1062:4-1062:15
COMMA, 1062:15-1062:16
ID("ReflectPositiveWithFallback"), 1062:17-1062:44
COMMA, 1062:44-1062:45
ID("ReflectDefault"), 1062:46-1062:60
EQUAL, 1062:60-1062:61
INT("20"), 1062:61-1062:63
RBRACKET, 1062:63-1062:64
ATTRIBUTE, 1062:65-1062:74
UNSIGNED, 1062:75-1062:83
LONG, 1062:84-1062:88
ID("cols"), 1062:89-1062:93
SEMI, 1062:93-1062:94
LBRACKET, 1063:3-1063:4
ID("CEReactions"), 1063:4-1063:15
COMMA, 1063:15-1063:16
ID("Reflect"), 1063:17-1063:24
RBRACKET, 1063:24-1063:25
ATTRIBUTE, 1063:26-1063:35
DOMSTRING, 1063:36-1063:45
ID("dirName"), 1063:46-1063:53
SEMI, 1063:53-1063:54
LBRACKET, 1064:3-1064:4
ID("CEReactions"), 1064:4-1064:15
COMMA, 1064:15-1064:16
ID("Reflect"), 1064:17-1064:24
RBRACKET, 1064:24-1064:25
ATTRIBUTE, 1064:26-1064:35
BOOLEAN, 1064:36-1064:43
ID("disabled"), 1064:44-1064:52
SEMI, 1064:52-1064:53
READONLY, 1065:3-1065:11
ATTRIBUTE, 1065:12-1065:21
ID("HTMLFormElement"), 1065:22-1065:37
QUESTION, 1065:37-1065:38
ID("form"), 1065:39-1065:43
SEMI, 1065:43-1065:44
LBRACKET, 1066:3-1066:4
ID("CEReactions"), 1066:4-1066:15
COMMA, 1066:15-1066:16
ID("ReflectNonNegative"), 1066:17-1066:35
RBRACKET, 1066:35-1066:36
ATTRIBUTE, 1066:37-1066:46
LONG, 1066:47-1066:51
ID("maxLength"), 1066:52-1066:61
SEMI, 1066:61-1066:62
LBRACKET, 1067:3-1067:4
ID("CEReactions"), 1067:4-1067:15
COMMA, 1067:15-1067:16
ID("ReflectNonNegative"), 1067:17-1067:35
RBRACKET, 1067:35-1067:36
ATTRIBUTE, 1067:37-1067:46
LONG, 1067:47-1067:51
ID("minLength"), 1067:52-1067:61
SEMI, 1067:61-1067:62
LBRACKET, 1068:3-1068:4
ID("CEReactions"), 1068:4-1068:15
COMMA, 1068:15-1068:16
ID("Reflect"), 1068:17-1068:24
RBRACKET, 1068:24-1068:25
ATTRIBUTE, 1068:26-1068:35
DOMSTRING, 1068:36-1068:45
ID("name"), 1068:46-1068:50
SEMI, 1068:50-1068:51
LBRACKET, 1069:3-1069:4
ID("CEReactions"), 1069:4-1069:15
COMMA, 1069:15-1069:16
ID("Reflect"), 1069:17-1069:24
RBRACKET, 1069:24-1069:25
ATTRIBUTE, 1069:26-1069:35
DOMSTRING, 1069:36-1069:45
ID("placeholder"), 1069:46-1069:57
SEMI, 1069:57-1069:58
LBRACKET, 1070:3-1070:4
ID("CEReactions"), 1070:4-1070:15
COMMA, 1070:15-1070:16
ID("Reflect"), 1070:17-1070:24
RBRACKET, 1070:24-1070:25
ATTRIBUTE, 1070:26-1070:35
BOOLEAN, 1070:36-1070:43
ID("readOnly"), 1070:44-1070:52
SEMI, 1070:52-1070:53
LBRACKET, 1071:3-1071:4
ID("CEReactions"), 1071:4-1071:15
COMMA, 1071:15-1071:16
ID("Reflect"), 1071:17-1071:24
RBRACKET, 1071:24-1071:25
ATTRIBUTE, 1071:26-1071:35
BOOLEAN, 1071:36-1071:43
REQUIRED, 1071:44-1071:52
SEMI, 1071:52-1071:53
LBRACKET, 1072:3-1072:4
ID("CEReactions"), 1072:4-1072:15
COMMA, 1072:15-1072:16
ID("ReflectPositiveWithFallback"), 1072:17-1072:44
COMMA, 1072:44-1072:45
ID("ReflectDefault"), 1072:46-1072:60
EQUAL, 1072:60-1072:61
INT("2"), 1072:61-1072:62
RBRACKET, 1072:62-1072:63
ATTRIBUTE, 1072:64-1072:73
UNSIGNED, 1072:74-1072:82
LONG, 1072:83-1072:87
ID("rows"), 1072:88-1072:92
SEMI, 1072:92-1072:93
LBRACKET, 1073:3-1073:4
ID("CEReactions"), 1073:4-1073:15
COMMA, 1073:15-1073:16
ID("Reflect"), 1073:17-1073:24
RBRACKET, 1073:24-1073:25
ATTRIBUTE, 1073:26-1073:35
DOMSTRING, 1073:36-1073:45
ID("wrap"), 1073:46-1073:50
SEMI, 1073:50-1073:51
READONLY, 1075:3-1075:11
ATTRIBUTE, 1075:12-1075:21
DOMSTRING, 1075:22-1075:31
ID("type"), 1075:32-1075:36
SEMI, 1075:36-1075:37
LBRACKET, 1076:3-1076:4
ID("CEReactions"), 1076:4-1076:15
RBRACKET, 1076:15-1076:16
ATTRIBUTE, 1076:17-1076:26
DOMSTRING, 1076:27-1076:36
ID("defaultValue"), 1076:37-1076:49
SEMI, 1076:49-1076:50
ATTRIBUTE, 1077:3-1077:12
LBRACKET, 1077:13-1077:14
ID("LegacyNullToEmptyString"), 1077:14-1077:37
RBRACKET, 1077:37-1077:38
DOMSTRING, 1077:39-1077:48
ID("value"), 1077:49-1077:54
SEMI, 1077:54-1077:55
READONLY, 1078:3-1078:11
ATTRIBUTE, 1078:12-1078:21
UNSIGNED, 1078:22-1078:30
LONG, 1078:31-1078:35
ID("textLength"), 1078:36-1078:46
SEMI, 1078:46-1078:47
READONLY, 1080:3-1080:11
ATTRIBUTE, 1080:12-1080:21
BOOLEAN, 1080:22-1080:29
ID("willValidate"), 1080:30-1080:42
SEMI, 1080:42-1080:43
READONLY, 1081:3-1081:11
ATTRIBUTE, 1081:12-1081:21
ID("ValidityState"), 1081:22-1081:35
ID("validity"), 1081:36-1081:44
SEMI, 1081:44-1081:45
READONLY, 1082:3-1082:11
ATTRIBUTE, 1082:12-1082:21
DOMSTRING, 1082:22-1082:31
ID("validationMessage"), 1082:32-1082:49
SEMI, 1082:49-1082:50
BOOLEAN, 1083:3-1083:10
ID("checkValidity"), 1083:11-1083:24
LPAREN, 1083:24-1083:25
RPAREN, 1083:25-1083:26
SEMI, 1083:26-1083:27
BOOLEAN, 1084:3-1084:10
ID("reportValidity"), 1084:11-1084:25
LPAREN, 1084:25-1084:26
RPAREN, 1084:26-1084:27
SEMI, 1084:27-1084:28
UNDEFINED, 1085:3-1085:12
ID("setCustomValidity"), 1085:13-1085:30
LPAREN, 1085:30-1085:31
DOMSTRING, 1085:31-1085:40
ID("error"), 1085:41-1085:46
RPAREN, 1085:46-1085:47
SEMI, 1085:47-1085:48
READONLY, 1087:3-1087:11
ATTRIBUTE, 1087:12-1087:21
ID("NodeList"), 1087:22-1087:30
ID("labels"), 1087:31-1087:37
SEMI, 1087:37-1087:38
UNDEFINED, 1089:3-1089:12
ID("select"), 1089:13-1089:19
LPAREN, 1089:19-1089:20
RPAREN, 1089:20-1089:21
SEMI, 1089:21-1089:22
ATTRIBUTE, 1090:3-1090:12
UNSIGNED, 1090:13-1090:21
LONG, 1090:22-1090:26
ID("selectionStart"), 1090:27-1090:41
SEMI, 1090:41-1090:42
ATTRIBUTE, 1091:3-1091:12
UNSIGNED, 1091:13-1091:21
LONG, 1091:22-1091:26
ID("selectionEnd"), 1091:27-1091:39
SEMI, 1091:39-1091:40
ATTRIBUTE, 1092:3-1092:12
DOMSTRING, 1092:13-1092:22
ID("selectionDirection"), 1092:23-1092:41
SEMI, 1092:41-1092:42
UNDEFINED, 1093:3-1093:12
ID("setRangeText"), 1093:13-1093:25
LPAREN, 1093:25-1093:26
DOMSTRING, 1093:26-1093:35
ID("replacement"), 1093:36-1093:47
RPAREN, 1093:47-1093:48
SEMI, 1093:48-1093:49
UNDEFINED, 1094:3-1094:12
ID("setRangeText"), 1094:13-1094:25
LPAREN, 1094:25-1094:26
DOMSTRING, 1094:26-1094:35
ID("replacement"), 1094:36-1094:47
COMMA, 1094:47-1094:48
UNSIGNED, 1094:49-1094:57
LONG, 1094:58-1094:62
ID("start"), 1094:63-1094:68
COMMA, 1094:68-1094:69
UNSIGNED, 1094:70-1094:78
LONG, 1094:79-1094:83
ID("end"), 1094:84-1094:87
COMMA, 1094:87-1094:88
OPTIONAL, 1094:89-1094:97
ID("SelectionMode"), 1094:98-1094:111
ID("selectionMode"), 1094:112-1094:125
EQUAL, 1094:126-1094:127
STRING("\"preserve\""), 1094:128-1094:138
RPAREN, 1094:138-1094:139
SEMI, 1094:139-1094:140
UNDEFINED, 1095:3-1095:12
ID("setSelectionRange"), 1095:13-1095:30
LPAREN, 1095:30-1095:31
UNSIGNED, 1095:31-1095:39
LONG, 1095:40-1095:44
ID("start"), 1095:45-1095:50
COMMA, 1095:50-1095:51
UNSIGNED, 1095:52-1095:60
LONG, 1095:61-1095:65
ID("end"), 1095:66-1095:69
COMMA, 1095:69-1095:70
OPTIONAL, 1095:71-1095:79
DOMSTRING, 1095:80-1095:89
ID("direction"), 1095:90-1095:99
RPAREN, 1095:99-1095:100
SEMI, 1095:100-1095:101
RBRACE, 1096:1-1096:2
SEMI, 1096:2-1096:3
LBRACKET, 1098:1-1098:2
ID("Exposed"), 1098:2-1098:9
EQUAL, 1098:9-1098:10
ID("Window"), 1098:10-1098:16
RBRACKET, 1098:16-1098:17
INTERFACE, 1099:1-1099:10
ID("HTMLOutputElement"), 1099:11-1099:28
COLON, 1099:29-1099:30
ID("HTMLElement"), 1099:31-1099:42
LBRACE, 1099:43-1099:44
LBRACKET, 1100:3-1100:4
ID("HTMLConstructor"), 1100:4-1100:19
RBRACKET, 1100:19-1100:20
CONSTRUCTOR, 1100:21-1100:32
LPAREN, 1100:32-1100:33
RPAREN, 1100:33-1100:34
SEMI, 1100:34-1100:35
LBRACKET, 1102:3-1102:4
ID("SameObject"), 1102:4-1102:14
COMMA, 1102:14-1102:15
ID("PutForwards"), 1102:16-1102:27
EQUAL, 1102:27-1102:28
ID("value"), 1102:28-1102:33
COMMA, 1102:33-1102:34
ID("Reflect"), 1102:35-1102:42
EQUAL, 1102:42-1102:43
STRING("\"for\""), 1102:43-1102:48
RBRACKET, 1102:48-1102:49
READONLY, 1102:50-1102:58
ATTRIBUTE, 1102:59-1102:68
ID("DOMTokenList"), 1102:69-1102:81
ID("htmlFor"), 1102:82-1102:89
SEMI, 1102:89-1102:90
READONLY, 1103:3-1103:11
ATTRIBUTE, 1103:12-1103:21
ID("HTMLFormElement"), 1103:22-1103:37
QUESTION, 1103:37-1103:38
ID("form"), 1103:39-1103:43
SEMI, 1103:43-1103:44
LBRACKET, 1104:3-1104:4
ID("CEReactions"), 1104:4-1104:15
COMMA, 1104:15-1104:16
ID("Reflect"), 1104:17-1104:24
RBRACKET, 1104:24-1104:25
ATTRIBUTE, 1104:26-1104:35
DOMSTRING, 1104:36-1104:45
ID("name"), 1104:46-1104:50
SEMI, 1104:50-1104:51
READONLY, 1106:3-1106:11
ATTRIBUTE, 1106:12-1106:21
DOMSTRING, 1106:22-1106:31
ID("type"), 1106:32-1106:36
SEMI, 1106:36-1106:37
LBRACKET, 1107:3-1107:4
ID("CEReactions"), 1107:4-1107:15
RBRACKET, 1107:15-1107:16
ATTRIBUTE, 1107:17-1107:26
DOMSTRING, 1107:27-1107:36
ID("defaultValue"), 1107:37-1107:49
SEMI, 1107:49-1107:50
LBRACKET, 1108:3-1108:4
ID("CEReactions"), 1108:4-1108:15
RBRACKET, 1108:15-1108:16
ATTRIBUTE, 1108:17-1108:26
DOMSTRING, 1108:27-1108:36
ID("value"), 1108:37-1108:42
SEMI, 1108:42-1108:43
READONLY, 1110:3-1110:11
ATTRIBUTE, 1110:12-1110:21
BOOLEAN, 1110:22-1110:29
ID("willValidate"), 1110:30-1110:42
SEMI, 1110:42-1110:43
READONLY, 1111:3-1111:11
ATTRIBUTE, 1111:12-1111:21
ID("ValidityState"), 1111:22-1111:35
ID("validity"), 1111:36-1111:44
SEMI, 1111:44-1111:45
READONLY, 1112:3-1112:11
ATTRIBUTE, 1112:12-1112:21
DOMSTRING, 1112:22-1112:31
ID("validationMessage"), 1112:32-1112:49
SEMI, 1112:49-1112:50
BOOLEAN, 1113:3-1113:10
ID("checkValidity"), 1113:11-1113:24
LPAREN, 1113:24-1113:25
RPAREN, 1113:25-1113:26
SEMI, 1113:26-1113:27
BOOLEAN, 1114:3-1114:10
ID("reportValidity"), 1114:11-1114:25
LPAREN, 1114:25-1114:26
RPAREN, 1114:26-1114:27
SEMI, 1114:27-1114:28
UNDEFINED, 1115:3-1115:12
ID("setCustomValidity"), 1115:13-1115:30
LPAREN, 1115:30-1115:31
DOMSTRING, 1115:31-1115:40
ID("error"), 1115:41-1115:46
RPAREN, 1115:46-1115:47
SEMI, 1115:47-1115:48
READONLY, 1117:3-1117:11
ATTRIBUTE, 1117:12-1117:21
ID("NodeList"), 1117:22-1117:30
ID("labels"), 1117:31-1117:37
SEMI, 1117:37-1117:38
RBRACE, 1118:1-1118:2
SEMI, 1118:2-1118:3
LBRACKET, 1120:1-1120:2
ID("Exposed"), 1120:2-1120:9
EQUAL, 1120:9-1120:10
ID("Window"), 1120:10-1120:16
RBRACKET, 1120:16-1120:17
INTERFACE, 1121:1-1121:10
ID("HTMLProgressElement"), 1121:11-1121:30
COLON, 1121:31-1121:32
ID("HTMLElement"), 1121:33-1121:44
LBRACE, 1121:45-1121:46
LBRACKET, 1122:3-1122:4
ID("HTMLConstructor"), 1122:4-1122:19
RBRACKET, 1122:19-1122:20
CONSTRUCTOR, 1122:21-1122:32
LPAREN, 1122:32-1122:33
RPAREN, 1122:33-1122:34
SEMI, 1122:34-1122:35
LBRACKET, 1124:3-1124:4
ID("CEReactions"), 1124:4-1124:15
COMMA, 1124:15-1124:16
ID("ReflectSetter"), 1124:17-1124:30
RBRACKET, 1124:30-1124:31
ATTRIBUTE, 1124:32-1124:41
DOUBLE, 1124:42-1124:48
ID("value"), 1124:49-1124:54
SEMI, 1124:54-1124:55
LBRACKET, 1125:3-1125:4
ID("CEReactions"), 1125:4-1125:15
COMMA, 1125:15-1125:16
ID("ReflectPositive"), 1125:17-1125:32
COMMA, 1125:32-1125:33
ID("ReflectDefault"), 1125:34-1125:48
EQUAL, 1125:48-1125:49
DECIMAL("1.0"), 1125:49-1125:52
RBRACKET, 1125:52-1125:53
ATTRIBUTE, 1125:54-1125:63
DOUBLE, 1125:64-1125:70
ID("max"), 1125:71-1125:74
SEMI, 1125:74-1125:75
READONLY, 1126:3-1126:11
ATTRIBUTE, 1126:12-1126:21
DOUBLE, 1126:22-1126:28
ID("position"), 1126:29-1126:37
SEMI, 1126:37-1126:38
READONLY, 1127:3-1127:11
ATTRIBUTE, 1127:12-1127:21
ID("NodeList"), 1127:22-1127:30
ID("labels"), 1127:31-1127:37
SEMI, 1127:37-1127:38
RBRACE, 1128:1-1128:2
SEMI, 1128:2-1128:3
LBRACKET, 1130:1-1130:2
ID("Exposed"), 1130:2-1130:9
EQUAL, 1130:9-1130:10
ID("Window"), 1130:10-1130:16
RBRACKET, 1130:16-1130:17
INTERFACE, 1131:1-1131:10
ID("HTMLMeterElement"), 1131:11-1131:27
COLON, 1131:28-1131:29
ID("HTMLElement"), 1131:30-1131:41
LBRACE, 1131:42-1131:43
LBRACKET, 1132:3-1132:4
ID("HTMLConstructor"), 1132:4-1132:19
RBRACKET, 1132:19-1132:20
CONSTRUCTOR, 1132:21-1132:32
LPAREN, 1132:32-1132:33
RPAREN, 1132:33-1132:34
SEMI, 1132:34-1132:35
LBRACKET, 1134:3-1134:4
ID("CEReactions"), 1134:4-1134:15
COMMA, 1134:15-1134:16
ID("ReflectSetter"), 1134:17-1134:30
RBRACKET, 1134:30-1134:31
ATTRIBUTE, 1134:32-1134:41
DOUBLE, 1134:42-1134:48
ID("value"), 1134:49-1134:54
SEMI, 1134:54-1134:55
LBRACKET, 1135:3-1135:4
ID("CEReactions"), 1135:4-1135:15
COMMA, 1135:15-1135:16
ID("ReflectSetter"), 1135:17-1135:30
RBRACKET, 1135:30-1135:31
ATTRIBUTE, 1135:32-1135:41
DOUBLE, 1135:42-1135:48
ID("min"), 1135:49-1135:52
SEMI, 1135:52-1135:53
LBRACKET, 1136:3-1136:4
ID("CEReactions"), 1136:4-1136:15
COMMA, 1136:15-1136:16
ID("ReflectSetter"), 1136:17-1136:30
RBRACKET, 1136:30-1136:31
ATTRIBUTE, 1136:32-1136:41
DOUBLE, 1136:42-1136:48
ID("max"), 1136:49-1136:52
SEMI, 1136:52-1136:53
LBRACKET, 1137:3-1137:4
ID("CEReactions"), 1137:4-1137:15
COMMA, 1137:15-1137:16
ID("ReflectSetter"), 1137:17-1137:30
RBRACKET, 1137:30-1137:31
ATTRIBUTE, 1137:32-1137:41
DOUBLE, 1137:42-1137:48
ID("low"), 1137:49-1137:52
SEMI, 1137:52-1137:53
LBRACKET, 1138:3-1138:4
ID("CEReactions"), 1138:4-1138:15
COMMA, 1138:15-1138:16
ID("ReflectSetter"), 1138:17-1138:30
RBRACKET, 1138:30-1138:31
ATTRIBUTE, 1138:32-1138:41
DOUBLE, 1138:42-1138:48
ID("high"), 1138:49-1138:53
SEMI, 1138:53-1138:54
LBRACKET, 1139:3-1139:4
ID("CEReactions"), 1139:4-1139:15
COMMA, 1139:15-1139:16
ID("ReflectSetter"), 1139:17-1139:30
RBRACKET, 1139:30-1139:31
ATTRIBUTE, 1139:32-1139:41
DOUBLE, 1139:42-1139:48
ID("optimum"), 1139:49-1139:56
SEMI, 1139:56-1139:57
READONLY, 1140:3-1140:11
ATTRIBUTE, 1140:12-1140:21
ID("NodeList"), 1140:22-1140:30
ID("labels"), 1140:31-1140:37
SEMI, 1140:37-1140:38
RBRACE, 1141:1-1141:2
SEMI, 1141:2-1141:3
LBRACKET, 1143:1-1143:2
ID("Exposed"), 1143:2-1143:9
EQUAL, 1143:9-1143:10
ID("Window"), 1143:10-1143:16
RBRACKET, 1143:16-1143:17
INTERFACE, 1144:1-1144:10
ID("HTMLFieldSetElement"), 1144:11-1144:30
COLON, 1144:31-1144:32
ID("HTMLElement"), 1144:33-1144:44
LBRACE, 1144:45-1144:46
LBRACKET, 1145:3-1145:4
ID("HTMLConstructor"), 1145:4-1145:19
RBRACKET, 1145:19-1145:20
CONSTRUCTOR, 1145:21-1145:32
LPAREN, 1145:32-1145:33
RPAREN, 1145:33-1145:34
SEMI, 1145:34-1145:35
LBRACKET, 1147:3-1147:4
ID("CEReactions"), 1147:4-1147:15
COMMA, 1147:15-1147:16
ID("Reflect"), 1147:17-1147:24
RBRACKET, 1147:24-1147:25
ATTRIBUTE, 1147:26-1147:35
BOOLEAN, 1147:36-1147:43
ID("disabled"), 1147:44-1147:52
SEMI, 1147:52-1147:53
READONLY, 1148:3-1148:11
ATTRIBUTE, 1148:12-1148:21
ID("HTMLFormElement"), 1148:22-1148:37
QUESTION, 1148:37-1148:38
ID("form"), 1148:39-1148:43
SEMI, 1148:43-1148:44
LBRACKET, 1149:3-1149:4
ID("CEReactions"), 1149:4-1149:15
COMMA, 1149:15-1149:16
ID("Reflect"), 1149:17-1149:24
RBRACKET, 1149:24-1149:25
ATTRIBUTE, 1149:26-1149:35
DOMSTRING, 1149:36-1149:45
ID("name"), 1149:46-1149:50
SEMI, 1149:50-1149:51
READONLY, 1151:3-1151:11
ATTRIBUTE, 1151:12-1151:21
DOMSTRING, 1151:22-1151:31
ID("type"), 1151:32-1151:36
SEMI, 1151:36-1151:37
LBRACKET, 1153:3-1153:4
ID("SameObject"), 1153:4-1153:14
RBRACKET, 1153:14-1153:15
READONLY, 1153:16-1153:24
ATTRIBUTE, 1153:25-1153:34
ID("HTMLCollection"), 1153:35-1153:49
ID("elements"), 1153:50-1153:58
SEMI, 1153:58-1153:59
READONLY, 1155:3-1155:11
ATTRIBUTE, 1155:12-1155:21
BOOLEAN, 1155:22-1155:29
ID("willValidate"), 1155:30-1155:42
SEMI, 1155:42-1155:43
LBRACKET, 1156:3-1156:4
ID("SameObject"), 1156:4-1156:14
RBRACKET, 1156:14-1156:15
READONLY, 1156:16-1156:24
ATTRIBUTE, 1156:25-1156:34
ID("ValidityState"), 1156:35-1156:48
ID("validity"), 1156:49-1156:57
SEMI, 1156:57-1156:58
READONLY, 1157:3-1157:11
ATTRIBUTE, 1157:12-1157:21
DOMSTRING, 1157:22-1157:31
ID("validationMessage"), 1157:32-1157:49
SEMI, 1157:49-1157:50
BOOLEAN, 1158:3-1158:10
ID("checkValidity"), 1158:11-1158:24
LPAREN, 1158:24-1158:25
RPAREN, 1158:25-1158:26
SEMI, 1158:26-1158:27
BOOLEAN, 1159:3-1159:10
ID("reportValidity"), 1159:11-1159:25
LPAREN, 1159:25-1159:26
RPAREN, 1159:26-1159:27
SEMI, 1159:27-1159:28
UNDEFINED, 1160:3-1160:12
ID("setCustomValidity"), 1160:13-1160:30
LPAREN, 1160:30-1160:31
DOMSTRING, 1160:31-1160:40
ID("error"), 1160:41-1160:46
RPAREN, 1160:46-1160:47
SEMI, 1160:47-1160:48
RBRACE, 1161:1-1161:2
SEMI, 1161:2-1161:3
LBRACKET, 1163:1-1163:2
ID("Exposed"), 1163:2-1163:9
EQUAL, 1163:9-1163:10
ID("Window"), 1163:10-1163:16
RBRACKET, 1163:16-1163:17
INTERFACE, 1164:1-1164:10
ID("HTMLLegendElement"), 1164:11-1164:28
COLON, 1164:29-1164:30
ID("HTMLElement"), 1164:31-1164:42
LBRACE, 1164:43-1164:44
LBRACKET, 1165:3-1165:4
ID("HTMLConstructor"), 1165:4-1165:19
RBRACKET, 1165:19-1165:20
CONSTRUCTOR, 1165:21-1165:32
LPAREN, 1165:32-1165:33
RPAREN, 1165:33-1165:34
SEMI, 1165:34-1165:35
READONLY, 1167:3-1167:11
ATTRIBUTE, 1167:12-1167:21
ID("HTMLFormElement"), 1167:22-1167:37
QUESTION, 1167:37-1167:38
ID("form"), 1167:39-1167:43
SEMI, 1167:43-1167:44
RBRACE, 1170:1-1170:2
SEMI, 1170:2-1170:3
LBRACKET, 1172:1-1172:2
ID("Exposed"), 1172:2-1172:9
EQUAL, 1172:9-1172:10
ID("Window"), 1172:10-1172:16
RBRACKET, 1172:16-1172:17
INTERFACE, 1173:1-1173:10
ID("HTMLSelectedContentElement"), 1173:11-1173:37
COLON, 1173:38-1173:39
ID("HTMLElement"), 1173:40-1173:51
LBRACE, 1173:52-1173:53
LBRACKET, 1174:3-1174:4
ID("HTMLConstructor"), 1174:4-1174:19
RBRACKET, 1174:19-1174:20
CONSTRUCTOR, 1174:21-1174:32
LPAREN, 1174:32-1174:33
RPAREN, 1174:33-1174:34
SEMI, 1174:34-1174:35
RBRACE, 1175:1-1175:2
SEMI, 1175:2-1175:3
ENUM, 1177:1-1177:5
ID("SelectionMode"), 1177:6-1177:19
LBRACE, 1177:20-1177:21
STRING("\"select\""), 1178:3-1178:11
COMMA, 1178:11-1178:12
STRING("\"start\""), 1179:3-1179:10
COMMA, 1179:10-1179:11
STRING("\"end\""), 1180:3-1180:8
COMMA, 1180:8-1180:9
STRING("\"preserve\""), 1181:3-1181:13
RBRACE, 1182:1-1182:2
SEMI, 1182:2-1182:3
LBRACKET, 1184:1-1184:2
ID("Exposed"), 1184:2-1184:9
EQUAL, 1184:9-1184:10
ID("Window"), 1184:10-1184:16
RBRACKET, 1184:16-1184:17
INTERFACE, 1185:1-1185:10
ID("ValidityState"), 1185:11-1185:24
LBRACE, 1185:25-1185:26
READONLY, 1186:3-1186:11
ATTRIBUTE, 1186:12-1186:21
BOOLEAN, 1186:22-1186:29
ID("valueMissing"), 1186:30-1186:42
SEMI, 1186:42-1186:43
READONLY, 1187:3-1187:11
ATTRIBUTE, 1187:12-1187:21
BOOLEAN, 1187:22-1187:29
ID("typeMismatch"), 1187:30-1187:42
SEMI, 1187:42-1187:43
READONLY, 1188:3-1188:11
ATTRIBUTE, 1188:12-1188:21
BOOLEAN, 1188:22-1188:29
ID("patternMismatch"), 1188:30-1188:45
SEMI, 1188:45-1188:46
READONLY, 1189:3-1189:11
ATTRIBUTE, 1189:12-1189:21
BOOLEAN, 1189:22-1189:29
ID("tooLong"), 1189:30-1189:37
SEMI, 1189:37-1189:38
READONLY, 1190:3-1190:11
ATTRIBUTE, 1190:12-1190:21
BOOLEAN, 1190:22-1190:29
ID("tooShort"), 1190:30-1190:38
SEMI, 1190:38-1190:39
READONLY, 1191:3-1191:11
ATTRIBUTE, 1191:12-1191:21
BOOLEAN, 1191:22-1191:29
ID("rangeUnderflow"), 1191:30-1191:44
SEMI, 1191:44-1191:45
READONLY, 1192:3-1192:11
ATTRIBUTE, 1192:12-1192:21
BOOLEAN, 1192:22-1192:29
ID("rangeOverflow"), 1192:30-1192:43
SEMI, 1192:43-1192:44
READONLY, 1193:3-1193:11
ATTRIBUTE, 1193:12-1193:21
BOOLEAN, 1193:22-1193:29
ID("stepMismatch"), 1193:30-1193:42
SEMI, 1193:42-1193:43
READONLY, 1194:3-1194:11
ATTRIBUTE, 1194:12-1194:21
BOOLEAN, 1194:22-1194:29
ID("badInput"), 1194:30-1194:38
SEMI, 1194:38-1194:39
READONLY, 1195:3-1195:11
ATTRIBUTE, 1195:12-1195:21
BOOLEAN, 1195:22-1195:29
ID("customError"), 1195:30-1195:41
SEMI, 1195:41-1195:42
READONLY, 1196:3-1196:11
ATTRIBUTE, 1196:12-1196:21
BOOLEAN, 1196:22-1196:29
ID("valid"), 1196:30-1196:35
SEMI, 1196:35-1196:36
RBRACE, 1197:1-1197:2
SEMI, 1197:2-1197:3
LBRACKET, 1199:1-1199:2
ID("Exposed"), 1199:2-1199:9
EQUAL, 1199:9-1199:10
ID("Window"), 1199:10-1199:16
RBRACKET, 1199:16-1199:17
INTERFACE, 1200:1-1200:10
ID("SubmitEvent"), 1200:11-1200:22
COLON, 1200:23-1200:24
ID("Event"), 1200:25-1200:30
LBRACE, 1200:31-1200:32
CONSTRUCTOR, 1201:3-1201:14
LPAREN, 1201:14-1201:15
DOMSTRING, 1201:15-1201:24
ID("type"), 1201:25-1201:29
COMMA, 1201:29-1201:30
OPTIONAL, 1201:31-1201:39
ID("SubmitEventInit"), 1201:40-1201:55
ID("eventInitDict"), 1201:56-1201:69
EQUAL, 1201:70-1201:71
LBRACE, 1201:72-1201:73
RBRACE, 1201:73-1201:74
RPAREN, 1201:74-1201:75
SEMI, 1201:75-1201:76
READONLY, 1203:3-1203:11
ATTRIBUTE, 1203:12-1203:21
ID("HTMLElement"), 1203:22-1203:33
QUESTION, 1203:33-1203:34
ID("submitter"), 1203:35-1203:44
SEMI, 1203:44-1203:45
RBRACE, 1204:1-1204:2
SEMI, 1204:2-1204:3
DICTIONARY, 1206:1-1206:11
ID("SubmitEventInit"), 1206:12-1206:27
COLON, 1206:28-1206:29
ID("EventInit"), 1206:30-1206:39
LBRACE, 1206:40-1206:41
ID("HTMLElement"), 1207:3-1207:14
QUESTION, 1207:14-1207:15
ID("submitter"), 1207:16-1207:25
EQUAL, 1207:26-1207:27
NULL, 1207:28-1207:32
SEMI, 1207:32-1207:33
RBRACE, 1208:1-1208:2
SEMI, 1208:2-1208:3
LBRACKET, 1210:1-1210:2
ID("Exposed"), 1210:2-1210:9
EQUAL, 1210:9-1210:10
ID("Window"), 1210:10-1210:16
RBRACKET, 1210:16-1210:17
INTERFACE, 1211:1-1211:10
ID("FormDataEvent"), 1211:11-1211:24
COLON, 1211:25-1211:26
ID("Event"), 1211:27-1211:32
LBRACE, 1211:33-1211:34
CONSTRUCTOR, 1212:3-1212:14
LPAREN, 1212:14-1212:15
DOMSTRING, 1212:15-1212:24
ID("type"), 1212:25-1212:29
COMMA, 1212:29-1212:30
ID("FormDataEventInit"), 1212:31-1212:48
ID("eventInitDict"), 1212:49-1212:62
RPAREN, 1212:62-1212:63
SEMI, 1212:63-1212:64
READONLY, 1214:3-1214:11
ATTRIBUTE, 1214:12-1214:21
ID("FormData"), 1214:22-1214:30
ID("formData"), 1214:31-1214:39
SEMI, 1214:39-1214:40
RBRACE, 1215:1-1215:2
SEMI, 1215:2-1215:3
DICTIONARY, 1217:1-1217:11
ID("FormDataEventInit"), 1217:12-1217:29
COLON, 1217:30-1217:31
ID("EventInit"), 1217:32-1217:41
LBRACE, 1217:42-1217:43
REQUIRED, 1218:3-1218:11
ID("FormData"), 1218:12-1218:20
ID("formData"), 1218:21-1218:29
SEMI, 1218:29-1218:30
RBRACE, 1219:1-1219:2
SEMI, 1219:2-1219:3
LBRACKET, 1221:1-1221:2
ID("Exposed"), 1221:2-1221:9
EQUAL, 1221:9-1221:10
ID("Window"), 1221:10-1221:16
RBRACKET, 1221:16-1221:17
INTERFACE, 1222:1-1222:10
ID("HTMLDetailsElement"), 1222:11-1222:29
COLON, 1222:30-1222:31
ID("HTMLElement"), 1222:32-1222:43
LBRACE, 1222:44-1222:45
LBRACKET, 1223:3-1223:4
ID("HTMLConstructor"), 1223:4-1223:19
RBRACKET, 1223:19-1223:20
CONSTRUCTOR, 1223:21-1223:32
LPAREN, 1223:32-1223:33
RPAREN, 1223:33-1223:34
SEMI, 1223:34-1223:35
LBRACKET, 1225:3-1225:4
ID("CEReactions"), 1225:4-1225:15
COMMA, 1225:15-1225:16
ID("Reflect"), 1225:17-1225:24
RBRACKET, 1225:24-1225:25
ATTRIBUTE, 1225:26-1225:35
DOMSTRING, 1225:36-1225:45
ID("name"), 1225:46-1225:50
SEMI, 1225:50-1225:51
LBRACKET, 1226:3-1226:4
ID("CEReactions"), 1226:4-1226:15
COMMA, 1226:15-1226:16
ID("Reflect"), 1226:17-1226:24
RBRACKET, 1226:24-1226:25
ATTRIBUTE, 1226:26-1226:35
BOOLEAN, 1226:36-1226:43
ID("open"), 1226:44-1226:48
SEMI, 1226:48-1226:49
RBRACE, 1227:1-1227:2
SEMI, 1227:2-1227:3
LBRACKET, 1229:1-1229:2
ID("Exposed"), 1229:2-1229:9
EQUAL, 1229:9-1229:10
ID("Window"), 1229:10-1229:16
RBRACKET, 1229:16-1229:17
INTERFACE, 1230:1-1230:10
ID("HTMLDialogElement"), 1230:11-1230:28
COLON, 1230:29-1230:30
ID("HTMLElement"), 1230:31-1230:42
LBRACE, 1230:43-1230:44
LBRACKET, 1231:3-1231:4
ID("HTMLConstructor"), 1231:4-1231:19
RBRACKET, 1231:19-1231:20
CONSTRUCTOR, 1231:21-1231:32
LPAREN, 1231:32-1231:33
RPAREN, 1231:33-1231:34
SEMI, 1231:34-1231:35
LBRACKET, 1233:3-1233:4
ID("CEReactions"), 1233:4-1233:15
COMMA, 1233:15-1233:16
ID("Reflect"), 1233:17-1233:24
RBRACKET, 1233:24-1233:25
ATTRIBUTE, 1233:26-1233:35
BOOLEAN, 1233:36-1233:43
ID("open"), 1233:44-1233:48
SEMI, 1233:48-1233:49
ATTRIBUTE, 1234:3-1234:12
DOMSTRING, 1234:13-1234:22
ID("returnValue"), 1234:23-1234:34
SEMI, 1234:34-1234:35
LBRACKET, 1235:3-1235:4
ID("CEReactions"), 1235:4-1235:15
COMMA, 1235:15-1235:16
ID("ReflectSetter"), 1235:17-1235:30
RBRACKET, 1235:30-1235:31
ATTRIBUTE, 1235:32-1235:41
DOMSTRING, 1235:42-1235:51
ID("closedBy"), 1235:52-1235:60
SEMI, 1235:60-1235:61
LBRACKET, 1236:3-1236:4
ID("CEReactions"), 1236:4-1236:15
RBRACKET, 1236:15-1236:16
UNDEFINED, 1236:17-1236:26
ID("show"), 1236:27-1236:31
LPAREN, 1236:31-1236:32
RPAREN, 1236:32-1236:33
SEMI, 1236:33-1236:34
LBRACKET, 1237:3-1237:4
ID("CEReactions"), 1237:4-1237:15
RBRACKET, 1237:15-1237:16
UNDEFINED, 1237:17-1237:26
ID("showModal"), 1237:27-1237:36
LPAREN, 1237:36-1237:37
RPAREN, 1237:37-1237:38
SEMI, 1237:38-1237:39
LBRACKET, 1238:3-1238:4
ID("CEReactions"), 1238:4-1238:15
RBRACKET, 1238:15-1238:16
UNDEFINED, 1238:17-1238:26
ID("close"), 1238:27-1238:32
LPAREN, 1238:32-1238:33
OPTIONAL, 1238:33-1238:41
DOMSTRING, 1238:42-1238:51
ID("returnValue"), 1238:52-1238:63
RPAREN, 1238:63-1238:64
SEMI, 1238:64-1238:65
LBRACKET, 1239:3-1239:4
ID("CEReactions"), 1239:4-1239:15
RBRACKET, 1239:15-1239:16
UNDEFINED, 1239:17-1239:26
ID("requestClose"), 1239:27-1239:39
LPAREN, 1239:39-1239:40
OPTIONAL, 1239:40-1239:48
DOMSTRING, 1239:49-1239:58
ID("returnValue"), 1239:59-1239:70
RPAREN, 1239:70-1239:71
SEMI, 1239:71-1239:72
RBRACE, 1240:1-1240:2
SEMI, 1240:2-1240:3
LBRACKET, 1242:1-1242:2
ID("Exposed"), 1242:2-1242:9
EQUAL, 1242:9-1242:10
ID("Window"), 1242:10-1242:16
RBRACKET, 1242:16-1242:17
INTERFACE, 1243:1-1243:10
ID("HTMLScriptElement"), 1243:11-1243:28
COLON, 1243:29-1243:30
ID("HTMLElement"), 1243:31-1243:42
LBRACE, 1243:43-1243:44
LBRACKET, 1244:3-1244:4
ID("HTMLConstructor"), 1244:4-1244:19
RBRACKET, 1244:19-1244:20
CONSTRUCTOR, 1244:21-1244:32
LPAREN, 1244:32-1244:33
RPAREN, 1244:33-1244:34
SEMI, 1244:34-1244:35
LBRACKET, 1246:3-1246:4
ID("CEReactions"), 1246:4-1246:15
COMMA, 1246:15-1246:16
ID("Reflect"), 1246:17-1246:24
RBRACKET, 1246:24-1246:25
ATTRIBUTE, 1246:26-1246:35
DOMSTRING, 1246:36-1246:45
ID("type"), 1246:46-1246:50
SEMI, 1246:50-1246:51
LBRACKET, 1247:3-1247:4
ID("CEReactions"), 1247:4-1247:15
COMMA, 1247:15-1247:16
ID("ReflectURL"), 1247:17-1247:27
RBRACKET, 1247:27-1247:28
ATTRIBUTE, 1247:29-1247:38
USVSTRING, 1247:39-1247:48
ID("src"), 1247:49-1247:52
SEMI, 1247:52-1247:53
LBRACKET, 1248:3-1248:4
ID("CEReactions"), 1248:4-1248:15
COMMA, 1248:15-1248:16
ID("Reflect"), 1248:17-1248:24
RBRACKET, 1248:24-1248:25
ATTRIBUTE, 1248:26-1248:35
BOOLEAN, 1248:36-1248:43
ID("noModule"), 1248:44-1248:52
SEMI, 1248:52-1248:53
LBRACKET, 1249:3-1249:4
ID("CEReactions"), 1249:4-1249:15
RBRACKET, 1249:15-1249:16
ATTRIBUTE, 1249:17-1249:26
BOOLEAN, 1249:27-1249:34
ID("async"), 1249:35-1249:40
SEMI, 1249:40-1249:41
LBRACKET, 1250:3-1250:4
ID("CEReactions"), 1250:4-1250:15
COMMA, 1250:15-1250:16
ID("Reflect"), 1250:17-1250:24
RBRACKET, 1250:24-1250:25
ATTRIBUTE, 1250:26-1250:35
BOOLEAN, 1250:36-1250:43
ID("defer"), 1250:44-1250:49
SEMI, 1250:49-1250:50
LBRACKET, 1251:3-1251:4
ID("SameObject"), 1251:4-1251:14
COMMA, 1251:14-1251:15
ID("PutForwards"), 1251:16-1251:27
EQUAL, 1251:27-1251:28
ID("value"), 1251:28-1251:33
COMMA, 1251:33-1251:34
ID("Reflect"), 1251:35-1251:42
RBRACKET, 1251:42-1251:43
READONLY, 1251:44-1251:52
ATTRIBUTE, 1251:53-1251:62
ID("DOMTokenList"), 1251:63-1251:75
ID("blocking"), 1251:76-1251:84
SEMI, 1251:84-1251:85
LBRACKET, 1252:3-1252:4
ID("CEReactions"), 1252:4-1252:15
RBRACKET, 1252:15-1252:16
ATTRIBUTE, 1252:17-1252:26
DOMSTRING, 1252:27-1252:36
QUESTION, 1252:36-1252:37
ID("crossOrigin"), 1252:38-1252:49
SEMI, 1252:49-1252:50
LBRACKET, 1253:3-1253:4
ID("CEReactions"), 1253:4-1253:15
RBRACKET, 1253:15-1253:16
ATTRIBUTE, 1253:17-1253:26
DOMSTRING, 1253:27-1253:36
ID("referrerPolicy"), 1253:37-1253:51
SEMI, 1253:51-1253:52
LBRACKET, 1254:3-1254:4
ID("CEReactions"), 1254:4-1254:15
COMMA, 1254:15-1254:16
ID("Reflect"), 1254:17-1254:24
RBRACKET, 1254:24-1254:25
ATTRIBUTE, 1254:26-1254:35
DOMSTRING, 1254:36-1254:45
ID("integrity"), 1254:46-1254:55
SEMI, 1254:55-1254:56
LBRACKET, 1255:3-1255:4
ID("CEReactions"), 1255:4-1255:15
RBRACKET, 1255:15-1255:16
ATTRIBUTE, 1255:17-1255:26
DOMSTRING, 1255:27-1255:36
ID("fetchPriority"), 1255:37-1255:50
SEMI, 1255:50-1255:51
LBRACKET, 1257:3-1257:4
ID("CEReactions"), 1257:4-1257:15
RBRACKET, 1257:15-1257:16
ATTRIBUTE, 1257:17-1257:26
DOMSTRING, 1257:27-1257:36
ID("text"), 1257:37-1257:41
SEMI, 1257:41-1257:42
STATIC, 1259:3-1259:9
BOOLEAN, 1259:10-1259:17
ID("supports"), 1259:18-1259:26
LPAREN, 1259:26-1259:27
DOMSTRING, 1259:27-1259:36
ID("type"), 1259:37-1259:41
RPAREN, 1259:41-1259:42
SEMI, 1259:42-1259:43
RBRACE, 1262:1-1262:2
SEMI, 1262:2-1262:3
LBRACKET, 1264:1-1264:2
ID("Exposed"), 1264:2-1264:9
EQUAL, 1264:9-1264:10
ID("Window"), 1264:10-1264:16
RBRACKET, 1264:16-1264:17
INTERFACE, 1265:1-1265:10
ID("HTMLTemplateElement"), 1265:11-1265:30
COLON, 1265:31-1265:32
ID("HTMLElement"), 1265:33-1265:44
LBRACE, 1265:45-1265:46
LBRACKET, 1266:3-1266:4
ID("HTMLConstructor"), 1266:4-1266:19
RBRACKET, 1266:19-1266:20
CONSTRUCTOR, 1266:21-1266:32
LPAREN, 1266:32-1266:33
RPAREN, 1266:33-1266:34
SEMI, 1266:34-1266:35
READONLY, 1268:3-1268:11
ATTRIBUTE, 1268:12-1268:21
ID("DocumentFragment"), 1268:22-1268:38
ID("content"), 1268:39-1268:46
SEMI, 1268:46-1268:47
LBRACKET, 1269:3-1269:4
ID("CEReactions"), 1269:4-1269:15
RBRACKET, 1269:15-1269:16
ATTRIBUTE, 1269:17-1269:26
DOMSTRING, 1269:27-1269:36
ID("shadowRootMode"), 1269:37-1269:51
SEMI, 1269:51-1269:52
LBRACKET, 1270:3-1270:4
ID("CEReactions"), 1270:4-1270:15
COMMA, 1270:15-1270:16
ID("Reflect"), 1270:17-1270:24
RBRACKET, 1270:24-1270:25
ATTRIBUTE, 1270:26-1270:35
BOOLEAN, 1270:36-1270:43
ID("shadowRootDelegatesFocus"), 1270:44-1270:68
SEMI, 1270:68-1270:69
LBRACKET, 1271:3-1271:4
ID("CEReactions"), 1271:4-1271:15
COMMA, 1271:15-1271:16
ID("Reflect"), 1271:17-1271:24
RBRACKET, 1271:24-1271:25
ATTRIBUTE, 1271:26-1271:35
BOOLEAN, 1271:36-1271:43
ID("shadowRootClonable"), 1271:44-1271:62
SEMI, 1271:62-1271:63
LBRACKET, 1272:3-1272:4
ID("CEReactions"), 1272:4-1272:15
COMMA, 1272:15-1272:16
ID("Reflect"), 1272:17-1272:24
RBRACKET, 1272:24-1272:25
ATTRIBUTE, 1272:26-1272:35
BOOLEAN, 1272:36-1272:43
ID("shadowRootSerializable"), 1272:44-1272:66
SEMI, 1272:66-1272:67
LBRACKET, 1273:3-1273:4
ID("CEReactions"), 1273:4-1273:15
COMMA, 1273:15-1273:16
ID("Reflect"), 1273:17-1273:24
RBRACKET, 1273:24-1273:25
ATTRIBUTE, 1273:26-1273:35
DOMSTRING, 1273:36-1273:45
ID("shadowRootCustomElementRegistry"), 1273:46-1273:77
SEMI, 1273:77-1273:78
RBRACE, 1274:1-1274:2
SEMI, 1274:2-1274:3
LBRACKET, 1276:1-1276:2
ID("Exposed"), 1276:2-1276:9
EQUAL, 1276:9-1276:10
ID("Window"), 1276:10-1276:16
RBRACKET, 1276:16-1276:17
INTERFACE, 1277:1-1277:10
ID("HTMLSlotElement"), 1277:11-1277:26
COLON, 1277:27-1277:28
ID("HTMLElement"), 1277:29-1277:40
LBRACE, 1277:41-1277:42
LBRACKET, 1278:3-1278:4
ID("HTMLConstructor"), 1278:4-1278:19
RBRACKET, 1278:19-1278:20
CONSTRUCTOR, 1278:21-1278:32
LPAREN, 1278:32-1278:33
RPAREN, 1278:33-1278:34
SEMI, 1278:34-1278:35
LBRACKET, 1280:3-1280:4
ID("CEReactions"), 1280:4-1280:15
COMMA, 1280:15-1280:16
ID("Reflect"), 1280:17-1280:24
RBRACKET, 1280:24-1280:25
ATTRIBUTE, 1280:26-1280:35
DOMSTRING, 1280:36-1280:45
ID("name"), 1280:46-1280:50
SEMI, 1280:50-1280:51
SEQUENCE, 1281:3-1281:11
LT, 1281:11-1281:12
ID("Node"), 1281:12-1281:16
GT, 1281:16-1281:17
ID("assignedNodes"), 1281:18-1281:31
LPAREN, 1281:31-1281:32
OPTIONAL, 1281:32-1281:40
ID("AssignedNodesOptions"), 1281:41-1281:61
ID("options"), 1281:62-1281:69
EQUAL, 1281:70-1281:71
LBRACE, 1281:72-1281:73
RBRACE, 1281:73-1281:74
RPAREN, 1281:74-1281:75
SEMI, 1281:75-1281:76
SEQUENCE, 1282:3-1282:11
LT, 1282:11-1282:12
ID("Element"), 1282:12-1282:19
GT, 1282:19-1282:20
ID("assignedElements"), 1282:21-1282:37
LPAREN, 1282:37-1282:38
OPTIONAL, 1282:38-1282:46
ID("AssignedNodesOptions"), 1282:47-1282:67
ID("options"), 1282:68-1282:75
EQUAL, 1282:76-1282:77
LBRACE, 1282:78-1282:79
RBRACE, 1282:79-1282:80
RPAREN, 1282:80-1282:81
SEMI, 1282:81-1282:82
UNDEFINED, 1283:3-1283:12
ID("assign"), 1283:13-1283:19
LPAREN, 1283:19-1283:20
LPAREN, 1283:20-1283:21
ID("Element"), 1283:21-1283:28
OR, 1283:29-1283:31
ID("Text"), 1283:32-1283:36
RPAREN, 1283:36-1283:37
ELLIPS, 1283:37-1283:40
ID("nodes"), 1283:41-1283:46
RPAREN, 1283:46-1283:47
SEMI, 1283:47-1283:48
RBRACE, 1284:1-1284:2
SEMI, 1284:2-1284:3
DICTIONARY, 1286:1-1286:11
ID("AssignedNodesOptions"), 1286:12-1286:32
LBRACE, 1286:33-1286:34
BOOLEAN, 1287:3-1287:10
ID("flatten"), 1287:11-1287:18
EQUAL, 1287:19-1287:20
FALSE, 1287:21-1287:26
SEMI, 1287:26-1287:27
RBRACE, 1288:1-1288:2
SEMI, 1288:2-1288:3
TYPEDEF, 1290:1-1290:8
LPAREN, 1290:9-1290:10
ID("CanvasRenderingContext2D"), 1290:10-1290:34
OR, 1290:35-1290:37
ID("ImageBitmapRenderingContext"), 1290:38-1290:65
OR, 1290:66-1290:68
ID("WebGLRenderingContext"), 1290:69-1290:90
OR, 1290:91-1290:93
ID("WebGL2RenderingContext"), 1290:94-1290:116
OR, 1290:117-1290:119
ID("GPUCanvasContext"), 1290:120-1290:136
RPAREN, 1290:136-1290:137
ID("RenderingContext"), 1290:138-1290:154
SEMI, 1290:154-1290:155
LBRACKET, 1292:1-1292:2
ID("Exposed"), 1292:2-1292:9
EQUAL, 1292:9-1292:10
ID("Window"), 1292:10-1292:16
RBRACKET, 1292:16-1292:17
INTERFACE, 1293:1-1293:10
ID("HTMLCanvasElement"), 1293:11-1293:28
COLON, 1293:29-1293:30
ID("HTMLElement"), 1293:31-1293:42
LBRACE, 1293:43-1293:44
LBRACKET, 1294:3-1294:4
ID("HTMLConstructor"), 1294:4-1294:19
RBRACKET, 1294:19-1294:20
CONSTRUCTOR, 1294:21-1294:32
LPAREN, 1294:32-1294:33
RPAREN, 1294:33-1294:34
SEMI, 1294:34-1294:35
LBRACKET, 1296:3-1296:4
ID("CEReactions"), 1296:4-1296:15
RBRACKET, 1296:15-1296:16
ATTRIBUTE, 1296:17-1296:26
UNSIGNED, 1296:27-1296:35
LONG, 1296:36-1296:40
ID("width"), 1296:41-1296:46
SEMI, 1296:46-1296:47
LBRACKET, 1297:3-1297:4
ID("CEReactions"), 1297:4-1297:15
RBRACKET, 1297:15-1297:16
ATTRIBUTE, 1297:17-1297:26
UNSIGNED, 1297:27-1297:35
LONG, 1297:36-1297:40
ID("height"), 1297:41-1297:47
SEMI, 1297:47-1297:48
ID("RenderingContext"), 1299:3-1299:19
QUESTION, 1299:19-1299:20
ID("getContext"), 1299:21-1299:31
LPAREN, 1299:31-1299:32
DOMSTRING, 1299:32-1299:41
ID("contextId"), 1299:42-1299:51
COMMA, 1299:51-1299:52
OPTIONAL, 1299:53-1299:61
ANY, 1299:62-1299:65
ID("options"), 1299:66-1299:73
EQUAL, 1299:74-1299:75
NULL, 1299:76-1299:80
RPAREN, 1299:80-1299:81
SEMI, 1299:81-1299:82
USVSTRING, 1301:3-1301:12
ID("toDataURL"), 1301:13-1301:22
LPAREN, 1301:22-1301:23
OPTIONAL, 1301:23-1301:31
DOMSTRING, 1301:32-1301:41
ID("type"), 1301:42-1301:46
EQUAL, 1301:47-1301:48
STRING("\"image/png\""), 1301:49-1301:60
COMMA, 1301:60-1301:61
OPTIONAL, 1301:62-1301:70
ANY, 1301:71-1301:74
ID("quality"), 1301:75-1301:82
RPAREN, 1301:82-1301:83
SEMI, 1301:83-1301:84
UNDEFINED, 1302:3-1302:12
ID("toBlob"), 1302:13-1302:19
LPAREN, 1302:19-1302:20
ID("BlobCallback"), 1302:20-1302:32
ID("_callback"), 1302:33-1302:42
COMMA, 1302:42-1302:43
OPTIONAL, 1302:44-1302:52
DOMSTRING, 1302:53-1302:62
ID("type"), 1302:63-1302:67
EQUAL, 1302:68-1302:69
STRING("\"image/png\""), 1302:70-1302:81
COMMA, 1302:81-1302:82
OPTIONAL, 1302:83-1302:91
ANY, 1302:92-1302:95
ID("quality"), 1302:96-1302:103
RPAREN, 1302:103-1302:104
SEMI, 1302:104-1302:105
ID("OffscreenCanvas"), 1303:3-1303:18
ID("transferControlToOffscreen"), 1303:19-1303:45
LPAREN, 1303:45-1303:46
RPAREN, 1303:46-1303:47
SEMI, 1303:47-1303:48
RBRACE, 1304:1-1304:2
SEMI, 1304:2-1304:3
CALLBACK, 1306:1-1306:9
ID("BlobCallback"), 1306:10-1306:22
EQUAL, 1306:23-1306:24
UNDEFINED, 1306:25-1306:34
LPAREN, 1306:35-1306:36
ID("Blob"), 1306:36-1306:40
QUESTION, 1306:40-1306:41
ID("blob"), 1306:42-1306:46
RPAREN, 1306:46-1306:47
SEMI, 1306:47-1306:48
TYPEDEF, 1308:1-1308:8
LPAREN, 1308:9-1308:10
ID("HTMLImageElement"), 1308:10-1308:26
OR, 1308:27-1308:29
ID("SVGImageElement"), 1309:10-1309:25
RPAREN, 1309:25-1309:26
ID("HTMLOrSVGImageElement"), 1309:27-1309:48
SEMI, 1309:48-1309:49
TYPEDEF, 1311:1-1311:8
LPAREN, 1311:9-1311:10
ID("HTMLOrSVGImageElement"), 1311:10-1311:31
OR, 1311:32-1311:34
ID("HTMLVideoElement"), 1312:10-1312:26
OR, 1312:27-1312:29
ID("HTMLCanvasElement"), 1313:10-1313:27
OR, 1313:28-1313:30
ID("ImageBitmap"), 1314:10-1314:21
OR, 1314:22-1314:24
ID("OffscreenCanvas"), 1315:10-1315:25
OR, 1315:26-1315:28
ID("VideoFrame"), 1316:10-1316:20
RPAREN, 1316:20-1316:21
ID("CanvasImageSource"), 1316:22-1316:39
SEMI, 1316:39-1316:40
ENUM, 1318:1-1318:5
ID("PredefinedColorSpace"), 1318:6-1318:26
LBRACE, 1318:27-1318:28
STRING("\"srgb\""), 1318:29-1318:35
COMMA, 1318:35-1318:36
STRING("\"display-p3\""), 1318:37-1318:49
RBRACE, 1318:50-1318:51
SEMI, 1318:51-1318:52
ENUM, 1320:1-1320:5
ID("CanvasColorType"), 1320:6-1320:21
LBRACE, 1320:22-1320:23
STRING("\"unorm8\""), 1320:24-1320:32
COMMA, 1320:32-1320:33
STRING("\"float16\""), 1320:34-1320:43
RBRACE, 1320:44-1320:45
SEMI, 1320:45-1320:46
ENUM, 1322:1-1322:5
ID("CanvasFillRule"), 1322:6-1322:20
LBRACE, 1322:21-1322:22
STRING("\"nonzero\""), 1322:23-1322:32
COMMA, 1322:32-1322:33
STRING("\"evenodd\""), 1322:34-1322:43
RBRACE, 1322:44-1322:45
SEMI, 1322:45-1322:46
DICTIONARY, 1324:1-1324:11
ID("CanvasRenderingContext2DSettings"), 1324:12-1324:44
LBRACE, 1324:45-1324:46
BOOLEAN, 1325:3-1325:10
ID("alpha"), 1325:11-1325:16
EQUAL, 1325:17-1325:18
TRUE, 1325:19-1325:23
SEMI, 1325:23-1325:24
BOOLEAN, 1326:3-1326:10
ID("desynchronized"), 1326:11-1326:25
EQUAL, 1326:26-1326:27
FALSE, 1326:28-1326:33
SEMI, 1326:33-1326:34
ID("PredefinedColorSpace"), 1327:3-1327:23
ID("colorSpace"), 1327:24-1327:34
EQUAL, 1327:35-1327:36
STRING("\"srgb\""), 1327:37-1327:43
SEMI, 1327:43-1327:44
ID("CanvasColorType"), 1328:3-1328:18
ID("colorType"), 1328:19-1328:28
EQUAL, 1328:29-1328:30
STRING("\"unorm8\""), 1328:31-1328:39
SEMI, 1328:39-1328:40
BOOLEAN, 1329:3-1329:10
ID("willReadFrequently"), 1329:11-1329:29
EQUAL, 1329:30-1329:31
FALSE, 1329:32-1329:37
SEMI, 1329:37-1329:38
RBRACE, 1330:1-1330:2
SEMI, 1330:2-1330:3
ENUM, 1332:1-1332:5
ID("ImageSmoothingQuality"), 1332:6-1332:27
LBRACE, 1332:28-1332:29
STRING("\"low\""), 1332:30-1332:35
COMMA, 1332:35-1332:36
STRING("\"medium\""), 1332:37-1332:45
COMMA, 1332:45-1332:46
STRING("\"high\""), 1332:47-1332:53
RBRACE, 1332:54-1332:55
SEMI, 1332:55-1332:56
LBRACKET, 1334:1-1334:2
ID("Exposed"), 1334:2-1334:9
EQUAL, 1334:9-1334:10
ID("Window"), 1334:10-1334:16
RBRACKET, 1334:16-1334:17
INTERFACE, 1335:1-1335:10
ID("CanvasRenderingContext2D"), 1335:11-1335:35
LBRACE, 1335:36-1335:37
READONLY, 1337:3-1337:11
ATTRIBUTE, 1337:12-1337:21
ID("HTMLCanvasElement"), 1337:22-1337:39
ID("canvas"), 1337:40-1337:46
SEMI, 1337:46-1337:47
RBRACE, 1338:1-1338:2
SEMI, 1338:2-1338:3
ID("CanvasRenderingContext2D"), 1339:1-1339:25
INCLUDES, 1339:26-1339:34
ID("CanvasSettings"), 1339:35-1339:49
SEMI, 1339:49-1339:50
ID("CanvasRenderingContext2D"), 1340:1-1340:25
INCLUDES, 1340:26-1340:34
ID("CanvasState"), 1340:35-1340:46
SEMI, 1340:46-1340:47
ID("CanvasRenderingContext2D"), 1341:1-1341:25
INCLUDES, 1341:26-1341:34
ID("CanvasTransform"), 1341:35-1341:50
SEMI, 1341:50-1341:51
ID("CanvasRenderingContext2D"), 1342:1-1342:25
INCLUDES, 1342:26-1342:34
ID("CanvasCompositing"), 1342:35-1342:52
SEMI, 1342:52-1342:53
ID("CanvasRenderingContext2D"), 1343:1-1343:25
INCLUDES, 1343:26-1343:34
ID("CanvasImageSmoothing"), 1343:35-1343:55
SEMI, 1343:55-1343:56
ID("CanvasRenderingContext2D"), 1344:1-1344:25
INCLUDES, 1344:26-1344:34
ID("CanvasFillStrokeStyles"), 1344:35-1344:57
SEMI, 1344:57-1344:58
ID("CanvasRenderingContext2D"), 1345:1-1345:25
INCLUDES, 1345:26-1345:34
ID("CanvasShadowStyles"), 1345:35-1345:53
SEMI, 1345:53-1345:54
ID("CanvasRenderingContext2D"), 1346:1-1346:25
INCLUDES, 1346:26-1346:34
ID("CanvasFilters"), 1346:35-1346:48
SEMI, 1346:48-1346:49
ID("CanvasRenderingContext2D"), 1347:1-1347:25
INCLUDES, 1347:26-1347:34
ID("CanvasRect"), 1347:35-1347:45
SEMI, 1347:45-1347:46
ID("CanvasRenderingContext2D"), 1348:1-1348:25
INCLUDES, 1348:26-1348:34
ID("CanvasDrawPath"), 1348:35-1348:49
SEMI, 1348:49-1348:50
ID("CanvasRenderingContext2D"), 1349:1-1349:25
INCLUDES, 1349:26-1349:34
ID("CanvasUserInterface"), 1349:35-1349:54
SEMI, 1349:54-1349:55
ID("CanvasRenderingContext2D"), 1350:1-1350:25
INCLUDES, 1350:26-1350:34
ID("CanvasText"), 1350:35-1350:45
SEMI, 1350:45-1350:46
ID("CanvasRenderingContext2D"), 1351:1-1351:25
INCLUDES, 1351:26-1351:34
ID("CanvasDrawImage"), 1351:35-1351:50
SEMI, 1351:50-1351:51
ID("CanvasRenderingContext2D"), 1352:1-1352:25
INCLUDES, 1352:26-1352:34
ID("CanvasImageData"), 1352:35-1352:50
SEMI, 1352:50-1352:51
ID("CanvasRenderingContext2D"), 1353:1-1353:25
INCLUDES, 1353:26-1353:34
ID("CanvasPathDrawingStyles"), 1353:35-1353:58
SEMI, 1353:58-1353:59
ID("CanvasRenderingContext2D"), 1354:1-1354:25
INCLUDES, 1354:26-1354:34
ID("CanvasTextDrawingStyles"), 1354:35-1354:58
SEMI, 1354:58-1354:59
ID("CanvasRenderingContext2D"), 1355:1-1355:25
INCLUDES, 1355:26-1355:34
ID("CanvasPath"), 1355:35-1355:45
SEMI, 1355:45-1355:46
INTERFACE, 1357:1-1357:10
MIXIN, 1357:11-1357:16
ID("CanvasSettings"), 1357:17-1357:31
LBRACE, 1357:32-1357:33
ID("CanvasRenderingContext2DSettings"), 1359:3-1359:35
ID("getContextAttributes"), 1359:36-1359:56
LPAREN, 1359:56-1359:57
RPAREN, 1359:57-1359:58
SEMI, 1359:58-1359:59
RBRACE, 1360:1-1360:2
SEMI, 1360:2-1360:3
INTERFACE, 1362:1-1362:10
MIXIN, 1362:11-1362:16
ID("CanvasState"), 1362:17-1362:28
LBRACE, 1362:29-1362:30
UNDEFINED, 1364:3-1364:12
ID("save"), 1364:13-1364:17
LPAREN, 1364:17-1364:18
RPAREN, 1364:18-1364:19
SEMI, 1364:19-1364:20
UNDEFINED, 1365:3-1365:12
ID("restore"), 1365:13-1365:20
LPAREN, 1365:20-1365:21
RPAREN, 1365:21-1365:22
SEMI, 1365:22-1365:23
UNDEFINED, 1366:3-1366:12
ID("reset"), 1366:13-1366:18
LPAREN, 1366:18-1366:19
RPAREN, 1366:19-1366:20
SEMI, 1366:20-1366:21
BOOLEAN, 1367:3-1367:10
ID("isContextLost"), 1367:11-1367:24
LPAREN, 1367:24-1367:25
RPAREN, 1367:25-1367:26
SEMI, 1367:26-1367:27
RBRACE, 1368:1-1368:2
SEMI, 1368:2-1368:3
INTERFACE, 1370:1-1370:10
MIXIN, 1370:11-1370:16
ID("CanvasTransform"), 1370:17-1370:32
LBRACE, 1370:33-1370:34
UNDEFINED, 1372:3-1372:12
ID("scale"), 1372:13-1372:18
LPAREN, 1372:18-1372:19
UNRESTRICTED, 1372:19-1372:31
DOUBLE, 1372:32-1372:38
ID("x"), 1372:39-1372:40
COMMA, 1372:40-1372:41
UNRESTRICTED, 1372:42-1372:54
DOUBLE, 1372:55-1372:61
ID("y"), 1372:62-1372:63
RPAREN, 1372:63-1372:64
SEMI, 1372:64-1372:65
UNDEFINED, 1373:3-1373:12
ID("rotate"), 1373:13-1373:19
LPAREN, 1373:19-1373:20
UNRESTRICTED, 1373:20-1373:32
DOUBLE, 1373:33-1373:39
ID("angle"), 1373:40-1373:45
RPAREN, 1373:45-1373:46
SEMI, 1373:46-1373:47
UNDEFINED, 1374:3-1374:12
ID("translate"), 1374:13-1374:22
LPAREN, 1374:22-1374:23
UNRESTRICTED, 1374:23-1374:35
DOUBLE, 1374:36-1374:42
ID("x"), 1374:43-1374:44
COMMA, 1374:44-1374:45
UNRESTRICTED, 1374:46-1374:58
DOUBLE, 1374:59-1374:65
ID("y"), 1374:66-1374:67
RPAREN, 1374:67-1374:68
SEMI, 1374:68-1374:69
UNDEFINED, 1375:3-1375:12
ID("transform"), 1375:13-1375:22
LPAREN, 1375:22-1375:23
UNRESTRICTED, 1375:23-1375:35
DOUBLE, 1375:36-1375:42
ID("a"), 1375:43-1375:44
COMMA, 1375:44-1375:45
UNRESTRICTED, 1375:46-1375:58
DOUBLE, 1375:59-1375:65
ID("b"), 1375:66-1375:67
COMMA, 1375:67-1375:68
UNRESTRICTED, 1375:69-1375:81
DOUBLE, 1375:82-1375:88
ID("c"), 1375:89-1375:90
COMMA, 1375:90-1375:91
UNRESTRICTED, 1375:92-1375:104
DOUBLE, 1375:105-1375:111
ID("d"), 1375:112-1375:113
COMMA, 1375:113-1375:114
UNRESTRICTED, 1375:115-1375:127
DOUBLE, 1375:128-1375:134
ID("e"), 1375:135-1375:136
COMMA, 1375:136-1375:137
UNRESTRICTED, 1375:138-1375:150
DOUBLE, 1375:151-1375:157
ID("f"), 1375:158-1375:159
RPAREN, 1375:159-1375:160
SEMI, 1375:160-1375:161
LBRACKET, 1377:3-1377:4
ID("NewObject"), 1377:4-1377:13
RBRACKET, 1377:13-1377:14
ID("DOMMatrix"), 1377:15-1377:24
ID("getTransform"), 1377:25-1377:37
LPAREN, 1377:37-1377:38
RPAREN, 1377:38-1377:39
SEMI, 1377:39-1377:40
UNDEFINED, 1378:3-1378:12
ID("setTransform"), 1378:13-1378:25
LPAREN, 1378:25-1378:26
UNRESTRICTED, 1378:26-1378:38
DOUBLE, 1378:39-1378:45
ID("a"), 1378:46-1378:47
COMMA, 1378:47-1378:48
UNRESTRICTED, 1378:49-1378:61
DOUBLE, 1378:62-1378:68
ID("b"), 1378:69-1378:70
COMMA, 1378:70-1378:71
UNRESTRICTED, 1378:72-1378:84
DOUBLE, 1378:85-1378:91
ID("c"), 1378:92-1378:93
COMMA, 1378:93-1378:94
UNRESTRICTED, 1378:95-1378:107
DOUBLE, 1378:108-1378:114
ID("d"), 1378:115-1378:116
COMMA, 1378:116-1378:117
UNRESTRICTED, 1378:118-1378:130
DOUBLE, 1378:131-1378:137
ID("e"), 1378:138-1378:139
COMMA, 1378:139-1378:140
UNRESTRICTED, 1378:141-1378:153
DOUBLE, 1378:154-1378:160
ID("f"), 1378:161-1378:162
RPAREN, 1378:162-1378:163
SEMI, 1378:163-1378:164
UNDEFINED, 1379:3-1379:12
ID("setTransform"), 1379:13-1379:25
LPAREN, 1379:25-1379:26
OPTIONAL, 1379:26-1379:34
ID("DOMMatrix2DInit"), 1379:35-1379:50
ID("transform"), 1379:51-1379:60
EQUAL, 1379:61-1379:62
LBRACE, 1379:63-1379:64
RBRACE, 1379:64-1379:65
RPAREN, 1379:65-1379:66
SEMI, 1379:66-1379:67
UNDEFINED, 1380:3-1380:12
ID("resetTransform"), 1380:13-1380:27
LPAREN, 1380:27-1380:28
RPAREN, 1380:28-1380:29
SEMI, 1380:29-1380:30
RBRACE, 1382:1-1382:2
SEMI, 1382:2-1382:3
INTERFACE, 1384:1-1384:10
MIXIN, 1384:11-1384:16
ID("CanvasCompositing"), 1384:17-1384:34
LBRACE, 1384:35-1384:36
ATTRIBUTE, 1386:3-1386:12
UNRESTRICTED, 1386:13-1386:25
DOUBLE, 1386:26-1386:32
ID("globalAlpha"), 1386:33-1386:44
SEMI, 1386:44-1386:45
ATTRIBUTE, 1387:3-1387:12
DOMSTRING, 1387:13-1387:22
ID("globalCompositeOperation"), 1387:23-1387:47
SEMI, 1387:47-1387:48
RBRACE, 1388:1-1388:2
SEMI, 1388:2-1388:3
INTERFACE, 1390:1-1390:10
MIXIN, 1390:11-1390:16
ID("CanvasImageSmoothing"), 1390:17-1390:37
LBRACE, 1390:38-1390:39
ATTRIBUTE, 1392:3-1392:12
BOOLEAN, 1392:13-1392:20
ID("imageSmoothingEnabled"), 1392:21-1392:42
SEMI, 1392:42-1392:43
ATTRIBUTE, 1393:3-1393:12
ID("ImageSmoothingQuality"), 1393:13-1393:34
ID("imageSmoothingQuality"), 1393:35-1393:56
SEMI, 1393:56-1393:57
RBRACE, 1395:1-1395:2
SEMI, 1395:2-1395:3
INTERFACE, 1397:1-1397:10
MIXIN, 1397:11-1397:16
ID("CanvasFillStrokeStyles"), 1397:17-1397:39
LBRACE, 1397:40-1397:41
ATTRIBUTE, 1399:3-1399:12
LPAREN, 1399:13-1399:14
DOMSTRING, 1399:14-1399:23
OR, 1399:24-1399:26
ID("CanvasGradient"), 1399:27-1399:41
OR, 1399:42-1399:44
ID("CanvasPattern"), 1399:45-1399:58
RPAREN, 1399:58-1399:59
ID("strokeStyle"), 1399:60-1399:71
SEMI, 1399:71-1399:72
ATTRIBUTE, 1400:3-1400:12
LPAREN, 1400:13-1400:14
DOMSTRING, 1400:14-1400:23
OR, 1400:24-1400:26
ID("CanvasGradient"), 1400:27-1400:41
OR, 1400:42-1400:44
ID("CanvasPattern"), 1400:45-1400:58
RPAREN, 1400:58-1400:59
ID("fillStyle"), 1400:60-1400:69
SEMI, 1400:69-1400:70
ID("CanvasGradient"), 1401:3-1401:17
ID("createLinearGradient"), 1401:18-1401:38
LPAREN, 1401:38-1401:39
DOUBLE, 1401:39-1401:45
ID("x0"), 1401:46-1401:48
COMMA, 1401:48-1401:49
DOUBLE, 1401:50-1401:56
ID("y0"), 1401:57-1401:59
COMMA, 1401:59-1401:60
DOUBLE, 1401:61-1401:67
ID("x1"), 1401:68-1401:70
COMMA, 1401:70-1401:71
DOUBLE, 1401:72-1401:78
ID("y1"), 1401:79-1401:81
RPAREN, 1401:81-1401:82
SEMI, 1401:82-1401:83
ID("CanvasGradient"), 1402:3-1402:17
ID("createRadialGradient"), 1402:18-1402:38
LPAREN, 1402:38-1402:39
DOUBLE, 1402:39-1402:45
ID("x0"), 1402:46-1402:48
COMMA, 1402:48-1402:49
DOUBLE, 1402:50-1402:56
ID("y0"), 1402:57-1402:59
COMMA, 1402:59-1402:60
DOUBLE, 1402:61-1402:67
ID("r0"), 1402:68-1402:70
COMMA, 1402:70-1402:71
DOUBLE, 1402:72-1402:78
ID("x1"), 1402:79-1402:81
COMMA, 1402:81-1402:82
DOUBLE, 1402:83-1402:89
ID("y1"), 1402:90-1402:92
COMMA, 1402:92-1402:93
DOUBLE, 1402:94-1402:100
ID("r1"), 1402:101-1402:103
RPAREN, 1402:103-1402:104
SEMI, 1402:104-1402:105
ID("CanvasGradient"), 1403:3-1403:17
ID("createConicGradient"), 1403:18-1403:37
LPAREN, 1403:37-1403:38
DOUBLE, 1403:38-1403:44
ID("startAngle"), 1403:45-1403:55
COMMA, 1403:55-1403:56
DOUBLE, 1403:57-1403:63
ID("x"), 1403:64-1403:65
COMMA, 1403:65-1403:66
DOUBLE, 1403:67-1403:73
ID("y"), 1403:74-1403:75
RPAREN, 1403:75-1403:76
SEMI, 1403:76-1403:77
ID("CanvasPattern"), 1404:3-1404:16
QUESTION, 1404:16-1404:17
ID("createPattern"), 1404:18-1404:31
LPAREN, 1404:31-1404:32
ID("CanvasImageSource"), 1404:32-1404:49
ID("image"), 1404:50-1404:55
COMMA, 1404:55-1404:56
LBRACKET, 1404:57-1404:58
ID("LegacyNullToEmptyString"), 1404:58-1404:81
RBRACKET, 1404:81-1404:82
DOMSTRING, 1404:83-1404:92
ID("repetition"), 1404:93-1404:103
RPAREN, 1404:103-1404:104
SEMI, 1404:104-1404:105
RBRACE, 1406:1-1406:2
SEMI, 1406:2-1406:3
INTERFACE, 1408:1-1408:10
MIXIN, 1408:11-1408:16
ID("CanvasShadowStyles"), 1408:17-1408:35
LBRACE, 1408:36-1408:37
ATTRIBUTE, 1410:3-1410:12
UNRESTRICTED, 1410:13-1410:25
DOUBLE, 1410:26-1410:32
ID("shadowOffsetX"), 1410:33-1410:46
SEMI, 1410:46-1410:47
ATTRIBUTE, 1411:3-1411:12
UNRESTRICTED, 1411:13-1411:25
DOUBLE, 1411:26-1411:32
ID("shadowOffsetY"), 1411:33-1411:46
SEMI, 1411:46-1411:47
ATTRIBUTE, 1412:3-1412:12
UNRESTRICTED, 1412:13-1412:25
DOUBLE, 1412:26-1412:32
ID("shadowBlur"), 1412:33-1412:43
SEMI, 1412:43-1412:44
ATTRIBUTE, 1413:3-1413:12
DOMSTRING, 1413:13-1413:22
ID("shadowColor"), 1413:23-1413:34
SEMI, 1413:34-1413:35
RBRACE, 1414:1-1414:2
SEMI, 1414:2-1414:3
INTERFACE, 1416:1-1416:10
MIXIN, 1416:11-1416:16
ID("CanvasFilters"), 1416:17-1416:30
LBRACE, 1416:31-1416:32
ATTRIBUTE, 1418:3-1418:12
DOMSTRING, 1418:13-1418:22
ID("filter"), 1418:23-1418:29
SEMI, 1418:29-1418:30
RBRACE, 1419:1-1419:2
SEMI, 1419:2-1419:3
INTERFACE, 1421:1-1421:10
MIXIN, 1421:11-1421:16
ID("CanvasRect"), 1421:17-1421:27
LBRACE, 1421:28-1421:29
UNDEFINED, 1423:3-1423:12
ID("clearRect"), 1423:13-1423:22
LPAREN, 1423:22-1423:23
UNRESTRICTED, 1423:23-1423:35
DOUBLE, 1423:36-1423:42
ID("x"), 1423:43-1423:44
COMMA, 1423:44-1423:45
UNRESTRICTED, 1423:46-1423:58
DOUBLE, 1423:59-1423:65
ID("y"), 1423:66-1423:67
COMMA, 1423:67-1423:68
UNRESTRICTED, 1423:69-1423:81
DOUBLE, 1423:82-1423:88
ID("w"), 1423:89-1423:90
COMMA, 1423:90-1423:91
UNRESTRICTED, 1423:92-1423:104
DOUBLE, 1423:105-1423:111
ID("h"), 1423:112-1423:113
RPAREN, 1423:113-1423:114
SEMI, 1423:114-1423:115
UNDEFINED, 1424:3-1424:12
ID("fillRect"), 1424:13-1424:21
LPAREN, 1424:21-1424:22
UNRESTRICTED, 1424:22-1424:34
DOUBLE, 1424:35-1424:41
ID("x"), 1424:42-1424:43
COMMA, 1424:43-1424:44
UNRESTRICTED, 1424:45-1424:57
DOUBLE, 1424:58-1424:64
ID("y"), 1424:65-1424:66
COMMA, 1424:66-1424:67
UNRESTRICTED, 1424:68-1424:80
DOUBLE, 1424:81-1424:87
ID("w"), 1424:88-1424:89
COMMA, 1424:89-1424:90
UNRESTRICTED, 1424:91-1424:103
DOUBLE, 1424:104-1424:110
ID("h"), 1424:111-1424:112
RPAREN, 1424:112-1424:113
SEMI, 1424:113-1424:114
UNDEFINED, 1425:3-1425:12
ID("strokeRect"), 1425:13-1425:23
LPAREN, 1425:23-1425:24
UNRESTRICTED, 1425:24-1425:36
DOUBLE, 1425:37-1425:43
ID("x"), 1425:44-1425:45
COMMA, 1425:45-1425:46
UNRESTRICTED, 1425:47-1425:59
DOUBLE, 1425:60-1425:66
ID("y"), 1425:67-1425:68
COMMA, 1425:68-1425:69
UNRESTRICTED, 1425:70-1425:82
DOUBLE, 1425:83-1425:89
ID("w"), 1425:90-1425:91
COMMA, 1425:91-1425:92
UNRESTRICTED, 1425:93-1425:105
DOUBLE, 1425:106-1425:112
ID("h"), 1425:113-1425:114
RPAREN, 1425:114-1425:115
SEMI, 1425:115-1425:116
RBRACE, 1426:1-1426:2
SEMI, 1426:2-1426:3
INTERFACE, 1428:1-1428:10
MIXIN, 1428:11-1428:16
ID("CanvasDrawPath"), 1428:17-1428:31
LBRACE, 1428:32-1428:33
UNDEFINED, 1430:3-1430:12
ID("beginPath"), 1430:13-1430:22
LPAREN, 1430:22-1430:23
RPAREN, 1430:23-1430:24
SEMI, 1430:24-1430:25
UNDEFINED, 1431:3-1431:12
ID("fill"), 1431:13-1431:17
LPAREN, 1431:17-1431:18
OPTIONAL, 1431:18-1431:26
ID("CanvasFillRule"), 1431:27-1431:41
ID("fillRule"), 1431:42-1431:50
EQUAL, 1431:51-1431:52
STRING("\"nonzero\""), 1431:53-1431:62
RPAREN, 1431:62-1431:63
SEMI, 1431:63-1431:64
UNDEFINED, 1432:3-1432:12
ID("fill"), 1432:13-1432:17
LPAREN, 1432:17-1432:18
ID("Path2D"), 1432:18-1432:24
ID("path"), 1432:25-1432:29
COMMA, 1432:29-1432:30
OPTIONAL, 1432:31-1432:39
ID("CanvasFillRule"), 1432:40-1432:54
ID("fillRule"), 1432:55-1432:63
EQUAL, 1432:64-1432:65
STRING("\"nonzero\""), 1432:66-1432:75
RPAREN, 1432:75-1432:76
SEMI, 1432:76-1432:77
UNDEFINED, 1433:3-1433:12
ID("stroke"), 1433:13-1433:19
LPAREN, 1433:19-1433:20
RPAREN, 1433:20-1433:21
SEMI, 1433:21-1433:22
UNDEFINED, 1434:3-1434:12
ID("stroke"), 1434:13-1434:19
LPAREN, 1434:19-1434:20
ID("Path2D"), 1434:20-1434:26
ID("path"), 1434:27-1434:31
RPAREN, 1434:31-1434:32
SEMI, 1434:32-1434:33
UNDEFINED, 1435:3-1435:12
ID("clip"), 1435:13-1435:17
LPAREN, 1435:17-1435:18
OPTIONAL, 1435:18-1435:26
ID("CanvasFillRule"), 1435:27-1435:41
ID("fillRule"), 1435:42-1435:50
EQUAL, 1435:51-1435:52
STRING("\"nonzero\""), 1435:53-1435:62
RPAREN, 1435:62-1435:63
SEMI, 1435:63-1435:64
UNDEFINED, 1436:3-1436:12
ID("clip"), 1436:13-1436:17
LPAREN, 1436:17-1436:18
ID("Path2D"), 1436:18-1436:24
ID("path"), 1436:25-1436:29
COMMA, 1436:29-1436:30
OPTIONAL, 1436:31-1436:39
ID("CanvasFillRule"), 1436:40-1436:54
ID("fillRule"), 1436:55-1436:63
EQUAL, 1436:64-1436:65
STRING("\"nonzero\""), 1436:66-1436:75
RPAREN, 1436:75-1436:76
SEMI, 1436:76-1436:77
BOOLEAN, 1437:3-1437:10
ID("isPointInPath"), 1437:11-1437:24
LPAREN, 1437:24-1437:25
UNRESTRICTED, 1437:25-1437:37
DOUBLE, 1437:38-1437:44
ID("x"), 1437:45-1437:46
COMMA, 1437:46-1437:47
UNRESTRICTED, 1437:48-1437:60
DOUBLE, 1437:61-1437:67
ID("y"), 1437:68-1437:69
COMMA, 1437:69-1437:70
OPTIONAL, 1437:71-1437:79
ID("CanvasFillRule"), 1437:80-1437:94
ID("fillRule"), 1437:95-1437:103
EQUAL, 1437:104-1437:105
STRING("\"nonzero\""), 1437:106-1437:115
RPAREN, 1437:115-1437:116
SEMI, 1437:116-1437:117
BOOLEAN, 1438:3-1438:10
ID("isPointInPath"), 1438:11-1438:24
LPAREN, 1438:24-1438:25
ID("Path2D"), 1438:25-1438:31
ID("path"), 1438:32-1438:36
COMMA, 1438:36-1438:37
UNRESTRICTED, 1438:38-1438:50
DOUBLE, 1438:51-1438:57
ID("x"), 1438:58-1438:59
COMMA, 1438:59-1438:60
UNRESTRICTED, 1438:61-1438:73
DOUBLE, 1438:74-1438:80
ID("y"), 1438:81-1438:82
COMMA, 1438:82-1438:83
OPTIONAL, 1438:84-1438:92
ID("CanvasFillRule"), 1438:93-1438:107
ID("fillRule"), 1438:108-1438:116
EQUAL, 1438:117-1438:118
STRING("\"nonzero\""), 1438:119-1438:128
RPAREN, 1438:128-1438:129
SEMI, 1438:129-1438:130
BOOLEAN, 1439:3-1439:10
ID("isPointInStroke"), 1439:11-1439:26
LPAREN, 1439:26-1439:27
UNRESTRICTED, 1439:27-1439:39
DOUBLE, 1439:40-1439:46
ID("x"), 1439:47-1439:48
COMMA, 1439:48-1439:49
UNRESTRICTED, 1439:50-1439:62
DOUBLE, 1439:63-1439:69
ID("y"), 1439:70-1439:71
RPAREN, 1439:71-1439:72
SEMI, 1439:72-1439:73
BOOLEAN, 1440:3-1440:10
ID("isPointInStroke"), 1440:11-1440:26
LPAREN, 1440:26-1440:27
ID("Path2D"), 1440:27-1440:33
ID("path"), 1440:34-1440:38
COMMA, 1440:38-1440:39
UNRESTRICTED, 1440:40-1440:52
DOUBLE, 1440:53-1440:59
ID("x"), 1440:60-1440:61
COMMA, 1440:61-1440:62
UNRESTRICTED, 1440:63-1440:75
DOUBLE, 1440:76-1440:82
ID("y"), 1440:83-1440:84
RPAREN, 1440:84-1440:85
SEMI, 1440:85-1440:86
RBRACE, 1441:1-1441:2
SEMI, 1441:2-1441:3
INTERFACE, 1443:1-1443:10
MIXIN, 1443:11-1443:16
ID("CanvasUserInterface"), 1443:17-1443:36
LBRACE, 1443:37-1443:38
UNDEFINED, 1444:3-1444:12
ID("drawFocusIfNeeded"), 1444:13-1444:30
LPAREN, 1444:30-1444:31
ID("Element"), 1444:31-1444:38
ID("element"), 1444:39-1444:46
RPAREN, 1444:46-1444:47
SEMI, 1444:47-1444:48
UNDEFINED, 1445:3-1445:12
ID("drawFocusIfNeeded"), 1445:13-1445:30
LPAREN, 1445:30-1445:31
ID("Path2D"), 1445:31-1445:37
ID("path"), 1445:38-1445:42
COMMA, 1445:42-1445:43
ID("Element"), 1445:44-1445:51
ID("element"), 1445:52-1445:59
RPAREN, 1445:59-1445:60
SEMI, 1445:60-1445:61
RBRACE, 1446:1-1446:2
SEMI, 1446:2-1446:3
INTERFACE, 1448:1-1448:10
MIXIN, 1448:11-1448:16
ID("CanvasText"), 1448:17-1448:27
LBRACE, 1448:28-1448:29
UNDEFINED, 1450:3-1450:12
ID("fillText"), 1450:13-1450:21
LPAREN, 1450:21-1450:22
DOMSTRING, 1450:22-1450:31
ID("text"), 1450:32-1450:36
COMMA, 1450:36-1450:37
UNRESTRICTED, 1450:38-1450:50
DOUBLE, 1450:51-1450:57
ID("x"), 1450:58-1450:59
COMMA, 1450:59-1450:60
UNRESTRICTED, 1450:61-1450:73
DOUBLE, 1450:74-1450:80
ID("y"), 1450:81-1450:82
COMMA, 1450:82-1450:83
OPTIONAL, 1450:84-1450:92
UNRESTRICTED, 1450:93-1450:105
DOUBLE, 1450:106-1450:112
ID("maxWidth"), 1450:113-1450:121
RPAREN, 1450:121-1450:122
SEMI, 1450:122-1450:123
UNDEFINED, 1451:3-1451:12
ID("strokeText"), 1451:13-1451:23
LPAREN, 1451:23-1451:24
DOMSTRING, 1451:24-1451:33
ID("text"), 1451:34-1451:38
COMMA, 1451:38-1451:39
UNRESTRICTED, 1451:40-1451:52
DOUBLE, 1451:53-1451:59
ID("x"), 1451:60-1451:61
COMMA, 1451:61-1451:62
UNRESTRICTED, 1451:63-1451:75
DOUBLE, 1451:76-1451:82
ID("y"), 1451:83-1451:84
COMMA, 1451:84-1451:85
OPTIONAL, 1451:86-1451:94
UNRESTRICTED, 1451:95-1451:107
DOUBLE, 1451:108-1451:114
ID("maxWidth"), 1451:115-1451:123
RPAREN, 1451:123-1451:124
SEMI, 1451:124-1451:125
ID("TextMetrics"), 1452:3-1452:14
ID("measureText"), 1452:15-1452:26
LPAREN, 1452:26-1452:27
DOMSTRING, 1452:27-1452:36
ID("text"), 1452:37-1452:41
RPAREN, 1452:41-1452:42
SEMI, 1452:42-1452:43
RBRACE, 1453:1-1453:2
SEMI, 1453:2-1453:3
INTERFACE, 1455:1-1455:10
MIXIN, 1455:11-1455:16
ID("CanvasDrawImage"), 1455:17-1455:32
LBRACE, 1455:33-1455:34
UNDEFINED, 1457:3-1457:12
ID("drawImage"), 1457:13-1457:22
LPAREN, 1457:22-1457:23
ID("CanvasImageSource"), 1457:23-1457:40
ID("image"), 1457:41-1457:46
COMMA, 1457:46-1457:47
UNRESTRICTED, 1457:48-1457:60
DOUBLE, 1457:61-1457:67
ID("dx"), 1457:68-1457:70
COMMA, 1457:70-1457:71
UNRESTRICTED, 1457:72-1457:84
DOUBLE, 1457:85-1457:91
ID("dy"), 1457:92-1457:94
RPAREN, 1457:94-1457:95
SEMI, 1457:95-1457:96
UNDEFINED, 1458:3-1458:12
ID("drawImage"), 1458:13-1458:22
LPAREN, 1458:22-1458:23
ID("CanvasImageSource"), 1458:23-1458:40
ID("image"), 1458:41-1458:46
COMMA, 1458:46-1458:47
UNRESTRICTED, 1458:48-1458:60
DOUBLE, 1458:61-1458:67
ID("dx"), 1458:68-1458:70
COMMA, 1458:70-1458:71
UNRESTRICTED, 1458:72-1458:84
DOUBLE, 1458:85-1458:91
ID("dy"), 1458:92-1458:94
COMMA, 1458:94-1458:95
UNRESTRICTED, 1458:96-1458:108
DOUBLE, 1458:109-1458:115
ID("dw"), 1458:116-1458:118
COMMA, 1458:118-1458:119
UNRESTRICTED, 1458:120-1458:132
DOUBLE, 1458:133-1458:139
ID("dh"), 1458:140-1458:142
RPAREN, 1458:142-1458:143
SEMI, 1458:143-1458:144
UNDEFINED, 1459:3-1459:12
ID("drawImage"), 1459:13-1459:22
LPAREN, 1459:22-1459:23
ID("CanvasImageSource"), 1459:23-1459:40
ID("image"), 1459:41-1459:46
COMMA, 1459:46-1459:47
UNRESTRICTED, 1459:48-1459:60
DOUBLE, 1459:61-1459:67
ID("sx"), 1459:68-1459:70
COMMA, 1459:70-1459:71
UNRESTRICTED, 1459:72-1459:84
DOUBLE, 1459:85-1459:91
ID("sy"), 1459:92-1459:94
COMMA, 1459:94-1459:95
UNRESTRICTED, 1459:96-1459:108
DOUBLE, 1459:109-1459:115
ID("sw"), 1459:116-1459:118
COMMA, 1459:118-1459:119
UNRESTRICTED, 1459:120-1459:132
DOUBLE, 1459:133-1459:139
ID("sh"), 1459:140-1459:142
COMMA, 1459:142-1459:143
UNRESTRICTED, 1459:144-1459:156
DOUBLE, 1459:157-1459:163
ID("dx"), 1459:164-1459:166
COMMA, 1459:166-1459:167
UNRESTRICTED, 1459:168-1459:180
DOUBLE, 1459:181-1459:187
ID("dy"), 1459:188-1459:190
COMMA, 1459:190-1459:191
UNRESTRICTED, 1459:192-1459:204
DOUBLE, 1459:205-1459:211
ID("dw"), 1459:212-1459:214
COMMA, 1459:214-1459:215
UNRESTRICTED, 1459:216-1459:228
DOUBLE, 1459:229-1459:235
ID("dh"), 1459:236-1459:238
RPAREN, 1459:238-1459:239
SEMI, 1459:239-1459:240
RBRACE, 1460:1-1460:2
SEMI, 1460:2-1460:3
INTERFACE, 1462:1-1462:10
MIXIN, 1462:11-1462:16
ID("CanvasImageData"), 1462:17-1462:32
LBRACE, 1462:33-1462:34
ID("ImageData"), 1464:3-1464:12
ID("createImageData"), 1464:13-1464:28
LPAREN, 1464:28-1464:29
LBRACKET, 1464:29-1464:30
ID("EnforceRange"), 1464:30-1464:42
RBRACKET, 1464:42-1464:43
LONG, 1464:44-1464:48
ID("sw"), 1464:49-1464:51
COMMA, 1464:51-1464:52
LBRACKET, 1464:53-1464:54
ID("EnforceRange"), 1464:54-1464:66
RBRACKET, 1464:66-1464:67
LONG, 1464:68-1464:72
ID("sh"), 1464:73-1464:75
COMMA, 1464:75-1464:76
OPTIONAL, 1464:77-1464:85
ID("ImageDataSettings"), 1464:86-1464:103
ID("settings"), 1464:104-1464:112
EQUAL, 1464:113-1464:114
LBRACE, 1464:115-1464:116
RBRACE, 1464:116-1464:117
RPAREN, 1464:117-1464:118
SEMI, 1464:118-1464:119
ID("ImageData"), 1465:3-1465:12
ID("createImageData"), 1465:13-1465:28
LPAREN, 1465:28-1465:29
ID("ImageData"), 1465:29-1465:38
ID("imageData"), 1465:39-1465:48
RPAREN, 1465:48-1465:49
SEMI, 1465:49-1465:50
ID("ImageData"), 1466:3-1466:12
ID("getImageData"), 1466:13-1466:25
LPAREN, 1466:25-1466:26
LBRACKET, 1466:26-1466:27
ID("EnforceRange"), 1466:27-1466:39
RBRACKET, 1466:39-1466:40
LONG, 1466:41-1466:45
ID("sx"), 1466:46-1466:48
COMMA, 1466:48-1466:49
LBRACKET, 1466:50-1466:51
ID("EnforceRange"), 1466:51-1466:63
RBRACKET, 1466:63-1466:64
LONG, 1466:65-1466:69
ID("sy"), 1466:70-1466:72
COMMA, 1466:72-1466:73
LBRACKET, 1466:74-1466:75
ID("EnforceRange"), 1466:75-1466:87
RBRACKET, 1466:87-1466:88
LONG, 1466:89-1466:93
ID("sw"), 1466:94-1466:96
COMMA, 1466:96-1466:97
LBRACKET, 1466:98-1466:99
ID("EnforceRange"), 1466:99-1466:111
RBRACKET, 1466:111-1466:112
LONG, 1466:113-1466:117
ID("sh"), 1466:118-1466:120
COMMA, 1466:120-1466:121
OPTIONAL, 1466:122-1466:130
ID("ImageDataSettings"), 1466:131-1466:148
ID("settings"), 1466:149-1466:157
EQUAL, 1466:158-1466:159
LBRACE, 1466:160-1466:161
RBRACE, 1466:161-1466:162
RPAREN, 1466:162-1466:163
SEMI, 1466:163-1466:164
UNDEFINED, 1467:3-1467:12
ID("putImageData"), 1467:13-1467:25
LPAREN, 1467:25-1467:26
ID("ImageData"), 1467:26-1467:35
ID("imageData"), 1467:36-1467:45
COMMA, 1467:45-1467:46
LBRACKET, 1467:47-1467:48
ID("EnforceRange"), 1467:48-1467:60
RBRACKET, 1467:60-1467:61
LONG, 1467:62-1467:66
ID("dx"), 1467:67-1467:69
COMMA, 1467:69-1467:70
LBRACKET, 1467:71-1467:72
ID("EnforceRange"), 1467:72-1467:84
RBRACKET, 1467:84-1467:85
LONG, 1467:86-1467:90
ID("dy"), 1467:91-1467:93
RPAREN, 1467:93-1467:94
SEMI, 1467:94-1467:95
UNDEFINED, 1468:3-1468:12
ID("putImageData"), 1468:13-1468:25
LPAREN, 1468:25-1468:26
ID("ImageData"), 1468:26-1468:35
ID("imageData"), 1468:36-1468:45
COMMA, 1468:45-1468:46
LBRACKET, 1468:47-1468:48
ID("EnforceRange"), 1468:48-1468:60
RBRACKET, 1468:60-1468:61
LONG, 1468:62-1468:66
ID("dx"), 1468:67-1468:69
COMMA, 1468:69-1468:70
LBRACKET, 1468:71-1468:72
ID("EnforceRange"), 1468:72-1468:84
RBRACKET, 1468:84-1468:85
LONG, 1468:86-1468:90
ID("dy"), 1468:91-1468:93
COMMA, 1468:93-1468:94
LBRACKET, 1468:95-1468:96
ID("EnforceRange"), 1468:96-1468:108
RBRACKET, 1468:108-1468:109
LONG, 1468:110-1468:114
ID("dirtyX"), 1468:115-1468:121
COMMA, 1468:121-1468:122
LBRACKET, 1468:123-1468:124
ID("EnforceRange"), 1468:124-1468:136
RBRACKET, 1468:136-1468:137
LONG, 1468:138-1468:142
ID("dirtyY"), 1468:143-1468:149
COMMA, 1468:149-1468:150
LBRACKET, 1468:151-1468:152
ID("EnforceRange"), 1468:152-1468:164
RBRACKET, 1468:164-1468:165
LONG, 1468:166-1468:170
ID("dirtyWidth"), 1468:171-1468:181
COMMA, 1468:181-1468:182
LBRACKET, 1468:183-1468:184
ID("EnforceRange"), 1468:184-1468:196
RBRACKET, 1468:196-1468:197
LONG, 1468:198-1468:202
ID("dirtyHeight"), 1468:203-1468:214
RPAREN, 1468:214-1468:215
SEMI, 1468:215-1468:216
RBRACE, 1469:1-1469:2
SEMI, 1469:2-1469:3
ENUM, 1471:1-1471:5
ID("CanvasLineCap"), 1471:6-1471:19
LBRACE, 1471:20-1471:21
STRING("\"butt\""), 1471:22-1471:28
COMMA, 1471:28-1471:29
STRING("\"round\""), 1471:30-1471:37
COMMA, 1471:37-1471:38
STRING("\"square\""), 1471:39-1471:47
RBRACE, 1471:48-1471:49
SEMI, 1471:49-1471:50
ENUM, 1472:1-1472:5
ID("CanvasLineJoin"), 1472:6-1472:20
LBRACE, 1472:21-1472:22
STRING("\"round\""), 1472:23-1472:30
COMMA, 1472:30-1472:31
STRING("\"bevel\""), 1472:32-1472:39
COMMA, 1472:39-1472:40
STRING("\"miter\""), 1472:41-1472:48
RBRACE, 1472:49-1472:50
SEMI, 1472:50-1472:51
ENUM, 1473:1-1473:5
ID("CanvasTextAlign"), 1473:6-1473:21
LBRACE, 1473:22-1473:23
STRING("\"start\""), 1473:24-1473:31
COMMA, 1473:31-1473:32
STRING("\"end\""), 1473:33-1473:38
COMMA, 1473:38-1473:39
STRING("\"left\""), 1473:40-1473:46
COMMA, 1473:46-1473:47
STRING("\"right\""), 1473:48-1473:55
COMMA, 1473:55-1473:56
STRING("\"center\""), 1473:57-1473:65
RBRACE, 1473:66-1473:67
SEMI, 1473:67-1473:68
ENUM, 1474:1-1474:5
ID("CanvasTextBaseline"), 1474:6-1474:24
LBRACE, 1474:25-1474:26
STRING("\"top\""), 1474:27-1474:32
COMMA, 1474:32-1474:33
STRING("\"hanging\""), 1474:34-1474:43
COMMA, 1474:43-1474:44
STRING("\"middle\""), 1474:45-1474:53
COMMA, 1474:53-1474:54
STRING("\"alphabetic\""), 1474:55-1474:67
COMMA, 1474:67-1474:68
STRING("\"ideographic\""), 1474:69-1474:82
COMMA, 1474:82-1474:83
STRING("\"bottom\""), 1474:84-1474:92
RBRACE, 1474:93-1474:94
SEMI, 1474:94-1474:95
ENUM, 1475:1-1475:5
ID("CanvasDirection"), 1475:6-1475:21
LBRACE, 1475:22-1475:23
STRING("\"ltr\""), 1475:24-1475:29
COMMA, 1475:29-1475:30
STRING("\"rtl\""), 1475:31-1475:36
COMMA, 1475:36-1475:37
STRING("\"inherit\""), 1475:38-1475:47
RBRACE, 1475:48-1475:49
SEMI, 1475:49-1475:50
ENUM, 1476:1-1476:5
ID("CanvasFontKerning"), 1476:6-1476:23
LBRACE, 1476:24-1476:25
STRING("\"auto\""), 1476:26-1476:32
COMMA, 1476:32-1476:33
STRING("\"normal\""), 1476:34-1476:42
COMMA, 1476:42-1476:43
STRING("\"none\""), 1476:44-1476:50
RBRACE, 1476:51-1476:52
SEMI, 1476:52-1476:53
ENUM, 1477:1-1477:5
ID("CanvasFontStretch"), 1477:6-1477:23
LBRACE, 1477:24-1477:25
STRING("\"ultra-condensed\""), 1477:26-1477:43
COMMA, 1477:43-1477:44
STRING("\"extra-condensed\""), 1477:45-1477:62
COMMA, 1477:62-1477:63
STRING("\"condensed\""), 1477:64-1477:75
COMMA, 1477:75-1477:76
STRING("\"semi-condensed\""), 1477:77-1477:93
COMMA, 1477:93-1477:94
STRING("\"normal\""), 1477:95-1477:103
COMMA, 1477:103-1477:104
STRING("\"semi-expanded\""), 1477:105-1477:120
COMMA, 1477:120-1477:121
STRING("\"expanded\""), 1477:122-1477:132
COMMA, 1477:132-1477:133
STRING("\"extra-expanded\""), 1477:134-1477:150
COMMA, 1477:150-1477:151
STRING("\"ultra-expanded\""), 1477:152-1477:168
RBRACE, 1477:169-1477:170
SEMI, 1477:170-1477:171
ENUM, 1478:1-1478:5
ID("CanvasFontVariantCaps"), 1478:6-1478:27
LBRACE, 1478:28-1478:29
STRING("\"normal\""), 1478:30-1478:38
COMMA, 1478:38-1478:39
STRING("\"small-caps\""), 1478:40-1478:52
COMMA, 1478:52-1478:53
STRING("\"all-small-caps\""), 1478:54-1478:70
COMMA, 1478:70-1478:71
STRING("\"petite-caps\""), 1478:72-1478:85
COMMA, 1478:85-1478:86
STRING("\"all-petite-caps\""), 1478:87-1478:104
COMMA, 1478:104-1478:105
STRING("\"unicase\""), 1478:106-1478:115
COMMA, 1478:115-1478:116
STRING("\"titling-caps\""), 1478:117-1478:131
RBRACE, 1478:132-1478:133
SEMI, 1478:133-1478:134
ENUM, 1479:1-1479:5
ID("CanvasTextRendering"), 1479:6-1479:25
LBRACE, 1479:26-1479:27
STRING("\"auto\""), 1479:28-1479:34
COMMA, 1479:34-1479:35
STRING("\"optimizeSpeed\""), 1479:36-1479:51
COMMA, 1479:51-1479:52
STRING("\"optimizeLegibility\""), 1479:53-1479:73
COMMA, 1479:73-1479:74
STRING("\"geometricPrecision\""), 1479:75-1479:95
RBRACE, 1479:96-1479:97
SEMI, 1479:97-1479:98
INTERFACE, 1481:1-1481:10
MIXIN, 1481:11-1481:16
ID("CanvasPathDrawingStyles"), 1481:17-1481:40
LBRACE, 1481:41-1481:42
ATTRIBUTE, 1483:3-1483:12
UNRESTRICTED, 1483:13-1483:25
DOUBLE, 1483:26-1483:32
ID("lineWidth"), 1483:33-1483:42
SEMI, 1483:42-1483:43
ATTRIBUTE, 1484:3-1484:12
ID("CanvasLineCap"), 1484:13-1484:26
ID("lineCap"), 1484:27-1484:34
SEMI, 1484:34-1484:35
ATTRIBUTE, 1485:3-1485:12
ID("CanvasLineJoin"), 1485:13-1485:27
ID("lineJoin"), 1485:28-1485:36
SEMI, 1485:36-1485:37
ATTRIBUTE, 1486:3-1486:12
UNRESTRICTED, 1486:13-1486:25
DOUBLE, 1486:26-1486:32
ID("miterLimit"), 1486:33-1486:43
SEMI, 1486:43-1486:44
UNDEFINED, 1489:3-1489:12
ID("setLineDash"), 1489:13-1489:24
LPAREN, 1489:24-1489:25
SEQUENCE, 1489:25-1489:33
LT, 1489:33-1489:34
UNRESTRICTED, 1489:34-1489:46
DOUBLE, 1489:47-1489:53
GT, 1489:53-1489:54
ID("segments"), 1489:55-1489:63
RPAREN, 1489:63-1489:64
SEMI, 1489:64-1489:65
SEQUENCE, 1490:3-1490:11
LT, 1490:11-1490:12
UNRESTRICTED, 1490:12-1490:24
DOUBLE, 1490:25-1490:31
GT, 1490:31-1490:32
ID("getLineDash"), 1490:33-1490:44
LPAREN, 1490:44-1490:45
RPAREN, 1490:45-1490:46
SEMI, 1490:46-1490:47
ATTRIBUTE, 1491:3-1491:12
UNRESTRICTED, 1491:13-1491:25
DOUBLE, 1491:26-1491:32
ID("lineDashOffset"), 1491:33-1491:47
SEMI, 1491:47-1491:48
RBRACE, 1492:1-1492:2
SEMI, 1492:2-1492:3
INTERFACE, 1494:1-1494:10
MIXIN, 1494:11-1494:16
ID("CanvasTextDrawingStyles"), 1494:17-1494:40
LBRACE, 1494:41-1494:42
ATTRIBUTE, 1496:3-1496:12
DOMSTRING, 1496:13-1496:22
ID("lang"), 1496:23-1496:27
SEMI, 1496:27-1496:28
ATTRIBUTE, 1497:3-1497:12
DOMSTRING, 1497:13-1497:22
ID("font"), 1497:23-1497:27
SEMI, 1497:27-1497:28
ATTRIBUTE, 1498:3-1498:12
ID("CanvasTextAlign"), 1498:13-1498:28
ID("textAlign"), 1498:29-1498:38
SEMI, 1498:38-1498:39
ATTRIBUTE, 1499:3-1499:12
ID("CanvasTextBaseline"), 1499:13-1499:31
ID("textBaseline"), 1499:32-1499:44
SEMI, 1499:44-1499:45
ATTRIBUTE, 1500:3-1500:12
ID("CanvasDirection"), 1500:13-1500:28
ID("direction"), 1500:29-1500:38
SEMI, 1500:38-1500:39
ATTRIBUTE, 1501:3-1501:12
DOMSTRING, 1501:13-1501:22
ID("letterSpacing"), 1501:23-1501:36
SEMI, 1501:36-1501:37
ATTRIBUTE, 1502:3-1502:12
ID("CanvasFontKerning"), 1502:13-1502:30
ID("fontKerning"), 1502:31-1502:42
SEMI, 1502:42-1502:43
ATTRIBUTE, 1503:3-1503:12
ID("CanvasFontStretch"), 1503:13-1503:30
ID("fontStretch"), 1503:31-1503:42
SEMI, 1503:42-1503:43
ATTRIBUTE, 1504:3-1504:12
ID("CanvasFontVariantCaps"), 1504:13-1504:34
ID("fontVariantCaps"), 1504:35-1504:50
SEMI, 1504:50-1504:51
ATTRIBUTE, 1505:3-1505:12
ID("CanvasTextRendering"), 1505:13-1505:32
ID("textRendering"), 1505:33-1505:46
SEMI, 1505:46-1505:47
ATTRIBUTE, 1506:3-1506:12
DOMSTRING, 1506:13-1506:22
ID("wordSpacing"), 1506:23-1506:34
SEMI, 1506:34-1506:35
RBRACE, 1507:1-1507:2
SEMI, 1507:2-1507:3
INTERFACE, 1509:1-1509:10
MIXIN, 1509:11-1509:16
ID("CanvasPath"), 1509:17-1509:27
LBRACE, 1509:28-1509:29
UNDEFINED, 1511:3-1511:12
ID("closePath"), 1511:13-1511:22
LPAREN, 1511:22-1511:23
RPAREN, 1511:23-1511:24
SEMI, 1511:24-1511:25
UNDEFINED, 1512:3-1512:12
ID("moveTo"), 1512:13-1512:19
LPAREN, 1512:19-1512:20
UNRESTRICTED, 1512:20-1512:32
DOUBLE, 1512:33-1512:39
ID("x"), 1512:40-1512:41
COMMA, 1512:41-1512:42
UNRESTRICTED, 1512:43-1512:55
DOUBLE, 1512:56-1512:62
ID("y"), 1512:63-1512:64
RPAREN, 1512:64-1512:65
SEMI, 1512:65-1512:66
UNDEFINED, 1513:3-1513:12
ID("lineTo"), 1513:13-1513:19
LPAREN, 1513:19-1513:20
UNRESTRICTED, 1513:20-1513:32
DOUBLE, 1513:33-1513:39
ID("x"), 1513:40-1513:41
COMMA, 1513:41-1513:42
UNRESTRICTED, 1513:43-1513:55
DOUBLE, 1513:56-1513:62
ID("y"), 1513:63-1513:64
RPAREN, 1513:64-1513:65
SEMI, 1513:65-1513:66
UNDEFINED, 1514:3-1514:12
ID("quadraticCurveTo"), 1514:13-1514:29
LPAREN, 1514:29-1514:30
UNRESTRICTED, 1514:30-1514:42
DOUBLE, 1514:43-1514:49
ID("cpx"), 1514:50-1514:53
COMMA, 1514:53-1514:54
UNRESTRICTED, 1514:55-1514:67
DOUBLE, 1514:68-1514:74
ID("cpy"), 1514:75-1514:78
COMMA, 1514:78-1514:79
UNRESTRICTED, 1514:80-1514:92
DOUBLE, 1514:93-1514:99
ID("x"), 1514:100-1514:101
COMMA, 1514:101-1514:102
UNRESTRICTED, 1514:103-1514:115
DOUBLE, 1514:116-1514:122
ID("y"), 1514:123-1514:124
RPAREN, 1514:124-1514:125
SEMI, 1514:125-1514:126
UNDEFINED, 1515:3-1515:12
ID("bezierCurveTo"), 1515:13-1515:26
LPAREN, 1515:26-1515:27
UNRESTRICTED, 1515:27-1515:39
DOUBLE, 1515:40-1515:46
ID("cp1x"), 1515:47-1515:51
COMMA, 1515:51-1515:52
UNRESTRICTED, 1515:53-1515:65
DOUBLE, 1515:66-1515:72
ID("cp1y"), 1515:73-1515:77
COMMA, 1515:77-1515:78
UNRESTRICTED, 1515:79-1515:91
DOUBLE, 1515:92-1515:98
ID("cp2x"), 1515:99-1515:103
COMMA, 1515:103-1515:104
UNRESTRICTED, 1515:105-1515:117
DOUBLE, 1515:118-1515:124
ID("cp2y"), 1515:125-1515:129
COMMA, 1515:129-1515:130
UNRESTRICTED, 1515:131-1515:143
DOUBLE, 1515:144-1515:150
ID("x"), 1515:151-1515:152
COMMA, 1515:152-1515:153
UNRESTRICTED, 1515:154-1515:166
DOUBLE, 1515:167-1515:173
ID("y"), 1515:174-1515:175
RPAREN, 1515:175-1515:176
SEMI, 1515:176-1515:177
UNDEFINED, 1516:3-1516:12
ID("arcTo"), 1516:13-1516:18
LPAREN, 1516:18-1516:19
UNRESTRICTED, 1516:19-1516:31
DOUBLE, 1516:32-1516:38
ID("x1"), 1516:39-1516:41
COMMA, 1516:41-1516:42
UNRESTRICTED, 1516:43-1516:55
DOUBLE, 1516:56-1516:62
ID("y1"), 1516:63-1516:65
COMMA, 1516:65-1516:66
UNRESTRICTED, 1516:67-1516:79
DOUBLE, 1516:80-1516:86
ID("x2"), 1516:87-1516:89
COMMA, 1516:89-1516:90
UNRESTRICTED, 1516:91-1516:103
DOUBLE, 1516:104-1516:110
ID("y2"), 1516:111-1516:113
COMMA, 1516:113-1516:114
UNRESTRICTED, 1516:115-1516:127
DOUBLE, 1516:128-1516:134
ID("radius"), 1516:135-1516:141
RPAREN, 1516:141-1516:142
SEMI, 1516:142-1516:143
UNDEFINED, 1517:3-1517:12
ID("rect"), 1517:13-1517:17
LPAREN, 1517:17-1517:18
UNRESTRICTED, 1517:18-1517:30
DOUBLE, 1517:31-1517:37
ID("x"), 1517:38-1517:39
COMMA, 1517:39-1517:40
UNRESTRICTED, 1517:41-1517:53
DOUBLE, 1517:54-1517:60
ID("y"), 1517:61-1517:62
COMMA, 1517:62-1517:63
UNRESTRICTED, 1517:64-1517:76
DOUBLE, 1517:77-1517:83
ID("w"), 1517:84-1517:85
COMMA, 1517:85-1517:86
UNRESTRICTED, 1517:87-1517:99
DOUBLE, 1517:100-1517:106
ID("h"), 1517:107-1517:108
RPAREN, 1517:108-1517:109
SEMI, 1517:109-1517:110
UNDEFINED, 1518:3-1518:12
ID("roundRect"), 1518:13-1518:22
LPAREN, 1518:22-1518:23
UNRESTRICTED, 1518:23-1518:35
DOUBLE, 1518:36-1518:42
ID("x"), 1518:43-1518:44
COMMA, 1518:44-1518:45
UNRESTRICTED, 1518:46-1518:58
DOUBLE, 1518:59-1518:65
ID("y"), 1518:66-1518:67
COMMA, 1518:67-1518:68
UNRESTRICTED, 1518:69-1518:81
DOUBLE, 1518:82-1518:88
ID("w"), 1518:89-1518:90
COMMA, 1518:90-1518:91
UNRESTRICTED, 1518:92-1518:104
DOUBLE, 1518:105-1518:111
ID("h"), 1518:112-1518:113
COMMA, 1518:113-1518:114
OPTIONAL, 1518:115-1518:123
LPAREN, 1518:124-1518:125
UNRESTRICTED, 1518:125-1518:137
DOUBLE, 1518:138-1518:144
OR, 1518:145-1518:147
ID("DOMPointInit"), 1518:148-1518:160
OR, 1518:161-1518:163
SEQUENCE, 1518:164-1518:172
LT, 1518:172-1518:173
LPAREN, 1518:173-1518:174
UNRESTRICTED, 1518:174-1518:186
DOUBLE, 1518:187-1518:193
OR, 1518:194-1518:196
ID("DOMPointInit"), 1518:197-1518:209
RPAREN, 1518:209-1518:210
GT, 1518:210-1518:211
RPAREN, 1518:211-1518:212
ID("radii"), 1518:213-1518:218
EQUAL, 1518:219-1518:220
INT("0"), 1518:221-1518:222
RPAREN, 1518:222-1518:223
SEMI, 1518:223-1518:224
UNDEFINED, 1519:3-1519:12
ID("arc"), 1519:13-1519:16
LPAREN, 1519:16-1519:17
UNRESTRICTED, 1519:17-1519:29
DOUBLE, 1519:30-1519:36
ID("x"), 1519:37-1519:38
COMMA, 1519:38-1519:39
UNRESTRICTED, 1519:40-1519:52
DOUBLE, 1519:53-1519:59
ID("y"), 1519:60-1519:61
COMMA, 1519:61-1519:62
UNRESTRICTED, 1519:63-1519:75
DOUBLE, 1519:76-1519:82
ID("radius"), 1519:83-1519:89
COMMA, 1519:89-1519:90
UNRESTRICTED, 1519:91-1519:103
DOUBLE, 1519:104-1519:110
ID("startAngle"), 1519:111-1519:121
COMMA, 1519:121-1519:122
UNRESTRICTED, 1519:123-1519:135
DOUBLE, 1519:136-1519:142
ID("endAngle"), 1519:143-1519:151
COMMA, 1519:151-1519:152
OPTIONAL, 1519:153-1519:161
BOOLEAN, 1519:162-1519:169
ID("counterclockwise"), 1519:170-1519:186
EQUAL, 1519:187-1519:188
FALSE, 1519:189-1519:194
RPAREN, 1519:194-1519:195
SEMI, 1519:195-1519:196
UNDEFINED, 1520:3-1520:12
ID("ellipse"), 1520:13-1520:20
LPAREN, 1520:20-1520:21
UNRESTRICTED, 1520:21-1520:33
DOUBLE, 1520:34-1520:40
ID("x"), 1520:41-1520:42
COMMA, 1520:42-1520:43
UNRESTRICTED, 1520:44-1520:56
DOUBLE, 1520:57-1520:63
ID("y"), 1520:64-1520:65
COMMA, 1520:65-1520:66
UNRESTRICTED, 1520:67-1520:79
DOUBLE, 1520:80-1520:86
ID("radiusX"), 1520:87-1520:94
COMMA, 1520:94-1520:95
UNRESTRICTED, 1520:96-1520:108
DOUBLE, 1520:109-1520:115
ID("radiusY"), 1520:116-1520:123
COMMA, 1520:123-1520:124
UNRESTRICTED, 1520:125-1520:137
DOUBLE, 1520:138-1520:144
ID("rotation"), 1520:145-1520:153
COMMA, 1520:153-1520:154
UNRESTRICTED, 1520:155-1520:167
DOUBLE, 1520:168-1520:174
ID("startAngle"), 1520:175-1520:185
COMMA, 1520:185-1520:186
UNRESTRICTED, 1520:187-1520:199
DOUBLE, 1520:200-1520:206
ID("endAngle"), 1520:207-1520:215
COMMA, 1520:215-1520:216
OPTIONAL, 1520:217-1520:225
BOOLEAN, 1520:226-1520:233
ID("counterclockwise"), 1520:234-1520:250
EQUAL, 1520:251-1520:252
FALSE, 1520:253-1520:258
RPAREN, 1520:258-1520:259
SEMI, 1520:259-1520:260
RBRACE, 1521:1-1521:2
SEMI, 1521:2-1521:3
LBRACKET, 1523:1-1523:2
ID("Exposed"), 1523:2-1523:9
EQUAL, 1523:9-1523:10
LPAREN, 1523:10-1523:11
ID("Window"), 1523:11-1523:17
COMMA, 1523:17-1523:18
ID("Worker"), 1523:18-1523:24
RPAREN, 1523:24-1523:25
RBRACKET, 1523:25-1523:26
INTERFACE, 1524:1-1524:10
ID("CanvasGradient"), 1524:11-1524:25
LBRACE, 1524:26-1524:27
UNDEFINED, 1526:3-1526:12
ID("addColorStop"), 1526:13-1526:25
LPAREN, 1526:25-1526:26
DOUBLE, 1526:26-1526:32
ID("offset"), 1526:33-1526:39
COMMA, 1526:39-1526:40
DOMSTRING, 1526:41-1526:50
ID("color"), 1526:51-1526:56
RPAREN, 1526:56-1526:57
SEMI, 1526:57-1526:58
RBRACE, 1527:1-1527:2
SEMI, 1527:2-1527:3
LBRACKET, 1529:1-1529:2
ID("Exposed"), 1529:2-1529:9
EQUAL, 1529:9-1529:10
LPAREN, 1529:10-1529:11
ID("Window"), 1529:11-1529:17
COMMA, 1529:17-1529:18
ID("Worker"), 1529:18-1529:24
RPAREN, 1529:24-1529:25
RBRACKET, 1529:25-1529:26
INTERFACE, 1530:1-1530:10
ID("CanvasPattern"), 1530:11-1530:24
LBRACE, 1530:25-1530:26
UNDEFINED, 1532:3-1532:12
ID("setTransform"), 1532:13-1532:25
LPAREN, 1532:25-1532:26
OPTIONAL, 1532:26-1532:34
ID("DOMMatrix2DInit"), 1532:35-1532:50
ID("transform"), 1532:51-1532:60
EQUAL, 1532:61-1532:62
LBRACE, 1532:63-1532:64
RBRACE, 1532:64-1532:65
RPAREN, 1532:65-1532:66
SEMI, 1532:66-1532:67
RBRACE, 1533:1-1533:2
SEMI, 1533:2-1533:3
LBRACKET, 1535:1-1535:2
ID("Exposed"), 1535:2-1535:9
EQUAL, 1535:9-1535:10
LPAREN, 1535:10-1535:11
ID("Window"), 1535:11-1535:17
COMMA, 1535:17-1535:18
ID("Worker"), 1535:18-1535:24
RPAREN, 1535:24-1535:25
RBRACKET, 1535:25-1535:26
INTERFACE, 1536:1-1536:10
ID("TextMetrics"), 1536:11-1536:22
LBRACE, 1536:23-1536:24
READONLY, 1538:3-1538:11
ATTRIBUTE, 1538:12-1538:21
DOUBLE, 1538:22-1538:28
ID("width"), 1538:29-1538:34
SEMI, 1538:34-1538:35
READONLY, 1539:3-1539:11
ATTRIBUTE, 1539:12-1539:21
DOUBLE, 1539:22-1539:28
ID("actualBoundingBoxLeft"), 1539:29-1539:50
SEMI, 1539:50-1539:51
READONLY, 1540:3-1540:11
ATTRIBUTE, 1540:12-1540:21
DOUBLE, 1540:22-1540:28
ID("actualBoundingBoxRight"), 1540:29-1540:51
SEMI, 1540:51-1540:52
READONLY, 1543:3-1543:11
ATTRIBUTE, 1543:12-1543:21
DOUBLE, 1543:22-1543:28
ID("fontBoundingBoxAscent"), 1543:29-1543:50
SEMI, 1543:50-1543:51
READONLY, 1544:3-1544:11
ATTRIBUTE, 1544:12-1544:21
DOUBLE, 1544:22-1544:28
ID("fontBoundingBoxDescent"), 1544:29-1544:51
SEMI, 1544:51-1544:52
READONLY, 1545:3-1545:11
ATTRIBUTE, 1545:12-1545:21
DOUBLE, 1545:22-1545:28
ID("actualBoundingBoxAscent"), 1545:29-1545:52
SEMI, 1545:52-1545:53
READONLY, 1546:3-1546:11
ATTRIBUTE, 1546:12-1546:21
DOUBLE, 1546:22-1546:28
ID("actualBoundingBoxDescent"), 1546:29-1546:53
SEMI, 1546:53-1546:54
READONLY, 1547:3-1547:11
ATTRIBUTE, 1547:12-1547:21
DOUBLE, 1547:22-1547:28
ID("emHeightAscent"), 1547:29-1547:43
SEMI, 1547:43-1547:44
READONLY, 1548:3-1548:11
ATTRIBUTE, 1548:12-1548:21
DOUBLE, 1548:22-1548:28
ID("emHeightDescent"), 1548:29-1548:44
SEMI, 1548:44-1548:45
READONLY, 1549:3-1549:11
ATTRIBUTE, 1549:12-1549:21
DOUBLE, 1549:22-1549:28
ID("hangingBaseline"), 1549:29-1549:44
SEMI, 1549:44-1549:45
READONLY, 1550:3-1550:11
ATTRIBUTE, 1550:12-1550:21
DOUBLE, 1550:22-1550:28
ID("alphabeticBaseline"), 1550:29-1550:47
SEMI, 1550:47-1550:48
READONLY, 1551:3-1551:11
ATTRIBUTE, 1551:12-1551:21
DOUBLE, 1551:22-1551:28
ID("ideographicBaseline"), 1551:29-1551:48
SEMI, 1551:48-1551:49
RBRACE, 1552:1-1552:2
SEMI, 1552:2-1552:3
LBRACKET, 1554:1-1554:2
ID("Exposed"), 1554:2-1554:9
EQUAL, 1554:9-1554:10
LPAREN, 1554:10-1554:11
ID("Window"), 1554:11-1554:17
COMMA, 1554:17-1554:18
ID("Worker"), 1554:18-1554:24
RPAREN, 1554:24-1554:25
RBRACKET, 1554:25-1554:26
INTERFACE, 1555:1-1555:10
ID("Path2D"), 1555:11-1555:17
LBRACE, 1555:18-1555:19
CONSTRUCTOR, 1556:3-1556:14
LPAREN, 1556:14-1556:15
OPTIONAL, 1556:15-1556:23
LPAREN, 1556:24-1556:25
ID("Path2D"), 1556:25-1556:31
OR, 1556:32-1556:34
DOMSTRING, 1556:35-1556:44
RPAREN, 1556:44-1556:45
ID("path"), 1556:46-1556:50
RPAREN, 1556:50-1556:51
SEMI, 1556:51-1556:52
UNDEFINED, 1558:3-1558:12
ID("addPath"), 1558:13-1558:20
LPAREN, 1558:20-1558:21
ID("Path2D"), 1558:21-1558:27
ID("path"), 1558:28-1558:32
COMMA, 1558:32-1558:33
OPTIONAL, 1558:34-1558:42
ID("DOMMatrix2DInit"), 1558:43-1558:58
ID("transform"), 1558:59-1558:68
EQUAL, 1558:69-1558:70
LBRACE, 1558:71-1558:72
RBRACE, 1558:72-1558:73
RPAREN, 1558:73-1558:74
SEMI, 1558:74-1558:75
RBRACE, 1559:1-1559:2
SEMI, 1559:2-1559:3
ID("Path2D"), 1560:1-1560:7
INCLUDES, 1560:8-1560:16
ID("CanvasPath"), 1560:17-1560:27
SEMI, 1560:27-1560:28
LBRACKET, 1562:1-1562:2
ID("Exposed"), 1562:2-1562:9
EQUAL, 1562:9-1562:10
LPAREN, 1562:10-1562:11
ID("Window"), 1562:11-1562:17
COMMA, 1562:17-1562:18
ID("Worker"), 1562:18-1562:24
RPAREN, 1562:24-1562:25
RBRACKET, 1562:25-1562:26
INTERFACE, 1563:1-1563:10
ID("ImageBitmapRenderingContext"), 1563:11-1563:38
LBRACE, 1563:39-1563:40
READONLY, 1564:3-1564:11
ATTRIBUTE, 1564:12-1564:21
LPAREN, 1564:22-1564:23
ID("HTMLCanvasElement"), 1564:23-1564:40
OR, 1564:41-1564:43
ID("OffscreenCanvas"), 1564:44-1564:59
RPAREN, 1564:59-1564:60
ID("canvas"), 1564:61-1564:67
SEMI, 1564:67-1564:68
UNDEFINED, 1565:3-1565:12
ID("transferFromImageBitmap"), 1565:13-1565:36
LPAREN, 1565:36-1565:37
ID("ImageBitmap"), 1565:37-1565:48
QUESTION, 1565:48-1565:49
ID("bitmap"), 1565:50-1565:56
RPAREN, 1565:56-1565:57
SEMI, 1565:57-1565:58
RBRACE, 1566:1-1566:2
SEMI, 1566:2-1566:3
DICTIONARY, 1568:1-1568:11
ID("ImageBitmapRenderingContextSettings"), 1568:12-1568:47
LBRACE, 1568:48-1568:49
BOOLEAN, 1569:3-1569:10
ID("alpha"), 1569:11-1569:16
EQUAL, 1569:17-1569:18
TRUE, 1569:19-1569:23
SEMI, 1569:23-1569:24
RBRACE, 1570:1-1570:2
SEMI, 1570:2-1570:3
TYPEDEF, 1572:1-1572:8
LPAREN, 1572:9-1572:10
ID("OffscreenCanvasRenderingContext2D"), 1572:10-1572:43
OR, 1572:44-1572:46
ID("ImageBitmapRenderingContext"), 1572:47-1572:74
OR, 1572:75-1572:77
ID("WebGLRenderingContext"), 1572:78-1572:99
OR, 1572:100-1572:102
ID("WebGL2RenderingContext"), 1572:103-1572:125
OR, 1572:126-1572:128
ID("GPUCanvasContext"), 1572:129-1572:145
RPAREN, 1572:145-1572:146
ID("OffscreenRenderingContext"), 1572:147-1572:172
SEMI, 1572:172-1572:173
DICTIONARY, 1574:1-1574:11
ID("ImageEncodeOptions"), 1574:12-1574:30
LBRACE, 1574:31-1574:32
DOMSTRING, 1575:3-1575:12
ID("type"), 1575:13-1575:17
EQUAL, 1575:18-1575:19
STRING("\"image/png\""), 1575:20-1575:31
SEMI, 1575:31-1575:32
UNRESTRICTED, 1576:3-1576:15
DOUBLE, 1576:16-1576:22
ID("quality"), 1576:23-1576:30
SEMI, 1576:30-1576:31
RBRACE, 1577:1-1577:2
SEMI, 1577:2-1577:3
ENUM, 1579:1-1579:5
ID("OffscreenRenderingContextId"), 1579:6-1579:33
LBRACE, 1579:34-1579:35
STRING("\"2d\""), 1579:36-1579:40
COMMA, 1579:40-1579:41
STRING("\"bitmaprenderer\""), 1579:42-1579:58
COMMA, 1579:58-1579:59
STRING("\"webgl\""), 1579:60-1579:67
COMMA, 1579:67-1579:68
STRING("\"webgl2\""), 1579:69-1579:77
COMMA, 1579:77-1579:78
STRING("\"webgpu\""), 1579:79-1579:87
RBRACE, 1579:88-1579:89
SEMI, 1579:89-1579:90
LBRACKET, 1581:1-1581:2
ID("Exposed"), 1581:2-1581:9
EQUAL, 1581:9-1581:10
LPAREN, 1581:10-1581:11
ID("Window"), 1581:11-1581:17
COMMA, 1581:17-1581:18
ID("Worker"), 1581:18-1581:24
RPAREN, 1581:24-1581:25
COMMA, 1581:25-1581:26
ID("Transferable"), 1581:27-1581:39
RBRACKET, 1581:39-1581:40
INTERFACE, 1582:1-1582:10
ID("OffscreenCanvas"), 1582:11-1582:26
COLON, 1582:27-1582:28
ID("EventTarget"), 1582:29-1582:40
LBRACE, 1582:41-1582:42
CONSTRUCTOR, 1583:3-1583:14
LPAREN, 1583:14-1583:15
LBRACKET, 1583:15-1583:16
ID("EnforceRange"), 1583:16-1583:28
RBRACKET, 1583:28-1583:29
UNSIGNED, 1583:30-1583:38
LONG, 1583:39-1583:43
LONG, 1583:44-1583:48
ID("width"), 1583:49-1583:54
COMMA, 1583:54-1583:55
LBRACKET, 1583:56-1583:57
ID("EnforceRange"), 1583:57-1583:69
RBRACKET, 1583:69-1583:70
UNSIGNED, 1583:71-1583:79
LONG, 1583:80-1583:84
LONG, 1583:85-1583:89
ID("height"), 1583:90-1583:96
RPAREN, 1583:96-1583:97
SEMI, 1583:97-1583:98
ATTRIBUTE, 1585:3-1585:12
LBRACKET, 1585:13-1585:14
ID("EnforceRange"), 1585:14-1585:26
RBRACKET, 1585:26-1585:27
UNSIGNED, 1585:28-1585:36
LONG, 1585:37-1585:41
LONG, 1585:42-1585:46
ID("width"), 1585:47-1585:52
SEMI, 1585:52-1585:53
ATTRIBUTE, 1586:3-1586:12
LBRACKET, 1586:13-1586:14
ID("EnforceRange"), 1586:14-1586:26
RBRACKET, 1586:26-1586:27
UNSIGNED, 1586:28-1586:36
LONG, 1586:37-1586:41
LONG, 1586:42-1586:46
ID("height"), 1586:47-1586:53
SEMI, 1586:53-1586:54
ID("OffscreenRenderingContext"), 1588:3-1588:28
QUESTION, 1588:28-1588:29
ID("getContext"), 1588:30-1588:40
LPAREN, 1588:40-1588:41
ID("OffscreenRenderingContextId"), 1588:41-1588:68
ID("contextId"), 1588:69-1588:78
COMMA, 1588:78-1588:79
OPTIONAL, 1588:80-1588:88
ANY, 1588:89-1588:92
ID("options"), 1588:93-1588:100
EQUAL, 1588:101-1588:102
NULL, 1588:103-1588:107
RPAREN, 1588:107-1588:108
SEMI, 1588:108-1588:109
ID("ImageBitmap"), 1589:3-1589:14
ID("transferToImageBitmap"), 1589:15-1589:36
LPAREN, 1589:36-1589:37
RPAREN, 1589:37-1589:38
SEMI, 1589:38-1589:39
PROMISE, 1590:3-1590:10
LT, 1590:10-1590:11
ID("Blob"), 1590:11-1590:15
GT, 1590:15-1590:16
ID("convertToBlob"), 1590:17-1590:30
LPAREN, 1590:30-1590:31
OPTIONAL, 1590:31-1590:39
ID("ImageEncodeOptions"), 1590:40-1590:58
ID("options"), 1590:59-1590:66
EQUAL, 1590:67-1590:68
LBRACE, 1590:69-1590:70
RBRACE, 1590:70-1590:71
RPAREN, 1590:71-1590:72
SEMI, 1590:72-1590:73
ATTRIBUTE, 1592:3-1592:12
ID("EventHandler"), 1592:13-1592:25
ID("oncontextlost"), 1592:26-1592:39
SEMI, 1592:39-1592:40
ATTRIBUTE, 1593:3-1593:12
ID("EventHandler"), 1593:13-1593:25
ID("oncontextrestored"), 1593:26-1593:43
SEMI, 1593:43-1593:44
RBRACE, 1594:1-1594:2
SEMI, 1594:2-1594:3
LBRACKET, 1596:1-1596:2
ID("Exposed"), 1596:2-1596:9
EQUAL, 1596:9-1596:10
LPAREN, 1596:10-1596:11
ID("Window"), 1596:11-1596:17
COMMA, 1596:17-1596:18
ID("Worker"), 1596:18-1596:24
RPAREN, 1596:24-1596:25
RBRACKET, 1596:25-1596:26
INTERFACE, 1597:1-1597:10
ID("OffscreenCanvasRenderingContext2D"), 1597:11-1597:44
LBRACE, 1597:45-1597:46
READONLY, 1598:3-1598:11
ATTRIBUTE, 1598:12-1598:21
ID("OffscreenCanvas"), 1598:22-1598:37
ID("canvas"), 1598:38-1598:44
SEMI, 1598:44-1598:45
RBRACE, 1599:1-1599:2
SEMI, 1599:2-1599:3
ID("OffscreenCanvasRenderingContext2D"), 1601:1-1601:34
INCLUDES, 1601:35-1601:43
ID("CanvasSettings"), 1601:44-1601:58
SEMI, 1601:58-1601:59
ID("OffscreenCanvasRenderingContext2D"), 1602:1-1602:34
INCLUDES, 1602:35-1602:43
ID("CanvasState"), 1602:44-1602:55
SEMI, 1602:55-1602:56
ID("OffscreenCanvasRenderingContext2D"), 1603:1-1603:34
INCLUDES, 1603:35-1603:43
ID("CanvasTransform"), 1603:44-1603:59
SEMI, 1603:59-1603:60
ID("OffscreenCanvasRenderingContext2D"), 1604:1-1604:34
INCLUDES, 1604:35-1604:43
ID("CanvasCompositing"), 1604:44-1604:61
SEMI, 1604:61-1604:62
ID("OffscreenCanvasRenderingContext2D"), 1605:1-1605:34
INCLUDES, 1605:35-1605:43
ID("CanvasImageSmoothing"), 1605:44-1605:64
SEMI, 1605:64-1605:65
ID("OffscreenCanvasRenderingContext2D"), 1606:1-1606:34
INCLUDES, 1606:35-1606:43
ID("CanvasFillStrokeStyles"), 1606:44-1606:66
SEMI, 1606:66-1606:67
ID("OffscreenCanvasRenderingContext2D"), 1607:1-1607:34
INCLUDES, 1607:35-1607:43
ID("CanvasShadowStyles"), 1607:44-1607:62
SEMI, 1607:62-1607:63
ID("OffscreenCanvasRenderingContext2D"), 1608:1-1608:34
INCLUDES, 1608:35-1608:43
ID("CanvasFilters"), 1608:44-1608:57
SEMI, 1608:57-1608:58
ID("OffscreenCanvasRenderingContext2D"), 1609:1-1609:34
INCLUDES, 1609:35-1609:43
ID("CanvasRect"), 1609:44-1609:54
SEMI, 1609:54-1609:55
ID("OffscreenCanvasRenderingContext2D"), 1610:1-1610:34
INCLUDES, 1610:35-1610:43
ID("CanvasDrawPath"), 1610:44-1610:58
SEMI, 1610:58-1610:59
ID("OffscreenCanvasRenderingContext2D"), 1611:1-1611:34
INCLUDES, 1611:35-1611:43
ID("CanvasText"), 1611:44-1611:54
SEMI, 1611:54-1611:55
ID("OffscreenCanvasRenderingContext2D"), 1612:1-1612:34
INCLUDES, 1612:35-1612:43
ID("CanvasDrawImage"), 1612:44-1612:59
SEMI, 1612:59-1612:60
ID("OffscreenCanvasRenderingContext2D"), 1613:1-1613:34
INCLUDES, 1613:35-1613:43
ID("CanvasImageData"), 1613:44-1613:59
SEMI, 1613:59-1613:60
ID("OffscreenCanvasRenderingContext2D"), 1614:1-1614:34
INCLUDES, 1614:35-1614:43
ID("CanvasPathDrawingStyles"), 1614:44-1614:67
SEMI, 1614:67-1614:68
ID("OffscreenCanvasRenderingContext2D"), 1615:1-1615:34
INCLUDES, 1615:35-1615:43
ID("CanvasTextDrawingStyles"), 1615:44-1615:67
SEMI, 1615:67-1615:68
ID("OffscreenCanvasRenderingContext2D"), 1616:1-1616:34
INCLUDES, 1616:35-1616:43
ID("CanvasPath"), 1616:44-1616:54
SEMI, 1616:54-1616:55
LBRACKET, 1618:1-1618:2
ID("Exposed"), 1618:2-1618:9
EQUAL, 1618:9-1618:10
ID("Window"), 1618:10-1618:16
RBRACKET, 1618:16-1618:17
INTERFACE, 1619:1-1619:10
ID("CustomElementRegistry"), 1619:11-1619:32
LBRACE, 1619:33-1619:34
CONSTRUCTOR, 1620:3-1620:14
LPAREN, 1620:14-1620:15
RPAREN, 1620:15-1620:16
SEMI, 1620:16-1620:17
LBRACKET, 1622:3-1622:4
ID("CEReactions"), 1622:4-1622:15
RBRACKET, 1622:15-1622:16
UNDEFINED, 1622:17-1622:26
ID("define"), 1622:27-1622:33
LPAREN, 1622:33-1622:34
DOMSTRING, 1622:34-1622:43
ID("name"), 1622:44-1622:48
COMMA, 1622:48-1622:49
ID("CustomElementConstructor"), 1622:50-1622:74
CONSTRUCTOR, 1622:75-1622:86
COMMA, 1622:86-1622:87
OPTIONAL, 1622:88-1622:96
ID("ElementDefinitionOptions"), 1622:97-1622:121
ID("options"), 1622:122-1622:129
EQUAL, 1622:130-1622:131
LBRACE, 1622:132-1622:133
RBRACE, 1622:133-1622:134
RPAREN, 1622:134-1622:135
SEMI, 1622:135-1622:136
LPAREN, 1623:3-1623:4
ID("CustomElementConstructor"), 1623:4-1623:28
OR, 1623:29-1623:31
UNDEFINED, 1623:32-1623:41
RPAREN, 1623:41-1623:42
ID("get"), 1623:43-1623:46
LPAREN, 1623:46-1623:47
DOMSTRING, 1623:47-1623:56
ID("name"), 1623:57-1623:61
RPAREN, 1623:61-1623:62
SEMI, 1623:62-1623:63
DOMSTRING, 1624:3-1624:12
QUESTION, 1624:12-1624:13
ID("getName"), 1624:14-1624:21
LPAREN, 1624:21-1624:22
ID("CustomElementConstructor"), 1624:22-1624:46
CONSTRUCTOR, 1624:47-1624:58
RPAREN, 1624:58-1624:59
SEMI, 1624:59-1624:60
PROMISE, 1625:3-1625:10
LT, 1625:10-1625:11
ID("CustomElementConstructor"), 1625:11-1625:35
GT, 1625:35-1625:36
ID("whenDefined"), 1625:37-1625:48
LPAREN, 1625:48-1625:49
DOMSTRING, 1625:49-1625:58
ID("name"), 1625:59-1625:63
RPAREN, 1625:63-1625:64
SEMI, 1625:64-1625:65
LBRACKET, 1626:3-1626:4
ID("CEReactions"), 1626:4-1626:15
RBRACKET, 1626:15-1626:16
UNDEFINED, 1626:17-1626:26
ID("upgrade"), 1626:27-1626:34
LPAREN, 1626:34-1626:35
ID("Node"), 1626:35-1626:39
ID("root"), 1626:40-1626:44
RPAREN, 1626:44-1626:45
SEMI, 1626:45-1626:46
UNDEFINED, 1627:3-1627:12
ID("initialize"), 1627:13-1627:23
LPAREN, 1627:23-1627:24
ID("Node"), 1627:24-1627:28
ID("root"), 1627:29-1627:33
RPAREN, 1627:33-1627:34
SEMI, 1627:34-1627:35
RBRACE, 1628:1-1628:2
SEMI, 1628:2-1628:3
CALLBACK, 1630:1-1630:9
ID("CustomElementConstructor"), 1630:10-1630:34
EQUAL, 1630:35-1630:36
ID("HTMLElement"), 1630:37-1630:48
LPAREN, 1630:49-1630:50
RPAREN, 1630:50-1630:51
SEMI, 1630:51-1630:52
DICTIONARY, 1632:1-1632:11
ID("ElementDefinitionOptions"), 1632:12-1632:36
LBRACE, 1632:37-1632:38
DOMSTRING, 1633:3-1633:12
ID("extends"), 1633:13-1633:20
SEMI, 1633:20-1633:21
RBRACE, 1634:1-1634:2
SEMI, 1634:2-1634:3
LBRACKET, 1636:1-1636:2
ID("Exposed"), 1636:2-1636:9
EQUAL, 1636:9-1636:10
ID("Window"), 1636:10-1636:16
RBRACKET, 1636:16-1636:17
INTERFACE, 1637:1-1637:10
ID("ElementInternals"), 1637:11-1637:27
LBRACE, 1637:28-1637:29
READONLY, 1639:3-1639:11
ATTRIBUTE, 1639:12-1639:21
ID("ShadowRoot"), 1639:22-1639:32
QUESTION, 1639:32-1639:33
ID("shadowRoot"), 1639:34-1639:44
SEMI, 1639:44-1639:45
UNDEFINED, 1642:3-1642:12
ID("setFormValue"), 1642:13-1642:25
LPAREN, 1642:25-1642:26
LPAREN, 1642:26-1642:27
ID("File"), 1642:27-1642:31
OR, 1642:32-1642:34
USVSTRING, 1642:35-1642:44
OR, 1642:45-1642:47
ID("FormData"), 1642:48-1642:56
RPAREN, 1642:56-1642:57
QUESTION, 1642:57-1642:58
ID("value"), 1642:59-1642:64
COMMA, 1642:64-1642:65
OPTIONAL, 1643:26-1643:34
LPAREN, 1643:35-1643:36
ID("File"), 1643:36-1643:40
OR, 1643:41-1643:43
USVSTRING, 1643:44-1643:53
OR, 1643:54-1643:56
ID("FormData"), 1643:57-1643:65
RPAREN, 1643:65-1643:66
QUESTION, 1643:66-1643:67
ID("state"), 1643:68-1643:73
RPAREN, 1643:73-1643:74
SEMI, 1643:74-1643:75
READONLY, 1645:3-1645:11
ATTRIBUTE, 1645:12-1645:21
ID("HTMLFormElement"), 1645:22-1645:37
QUESTION, 1645:37-1645:38
ID("form"), 1645:39-1645:43
SEMI, 1645:43-1645:44
UNDEFINED, 1647:3-1647:12
ID("setValidity"), 1647:13-1647:24
LPAREN, 1647:24-1647:25
OPTIONAL, 1647:25-1647:33
ID("ValidityStateFlags"), 1647:34-1647:52
ID("flags"), 1647:53-1647:58
EQUAL, 1647:59-1647:60
LBRACE, 1647:61-1647:62
RBRACE, 1647:62-1647:63
COMMA, 1647:63-1647:64
OPTIONAL, 1648:25-1648:33
DOMSTRING, 1648:34-1648:43
ID("message"), 1648:44-1648:51
COMMA, 1648:51-1648:52
OPTIONAL, 1649:25-1649:33
ID("HTMLElement"), 1649:34-1649:45
ID("anchor"), 1649:46-1649:52
RPAREN, 1649:52-1649:53
SEMI, 1649:53-1649:54
READONLY, 1650:3-1650:11
ATTRIBUTE, 1650:12-1650:21
BOOLEAN, 1650:22-1650:29
ID("willValidate"), 1650:30-1650:42
SEMI, 1650:42-1650:43
READONLY, 1651:3-1651:11
ATTRIBUTE, 1651:12-1651:21
ID("ValidityState"), 1651:22-1651:35
ID("validity"), 1651:36-1651:44
SEMI, 1651:44-1651:45
READONLY, 1652:3-1652:11
ATTRIBUTE, 1652:12-1652:21
DOMSTRING, 1652:22-1652:31
ID("validationMessage"), 1652:32-1652:49
SEMI, 1652:49-1652:50
BOOLEAN, 1653:3-1653:10
ID("checkValidity"), 1653:11-1653:24
LPAREN, 1653:24-1653:25
RPAREN, 1653:25-1653:26
SEMI, 1653:26-1653:27
BOOLEAN, 1654:3-1654:10
ID("reportValidity"), 1654:11-1654:25
LPAREN, 1654:25-1654:26
RPAREN, 1654:26-1654:27
SEMI, 1654:27-1654:28
READONLY, 1656:3-1656:11
ATTRIBUTE, 1656:12-1656:21
ID("NodeList"), 1656:22-1656:30
ID("labels"), 1656:31-1656:37
SEMI, 1656:37-1656:38
LBRACKET, 1659:3-1659:4
ID("SameObject"), 1659:4-1659:14
RBRACKET, 1659:14-1659:15
READONLY, 1659:16-1659:24
ATTRIBUTE, 1659:25-1659:34
ID("CustomStateSet"), 1659:35-1659:49
ID("states"), 1659:50-1659:56
SEMI, 1659:56-1659:57
RBRACE, 1660:1-1660:2
SEMI, 1660:2-1660:3
ID("ElementInternals"), 1663:1-1663:17
INCLUDES, 1663:18-1663:26
ID("ARIAMixin"), 1663:27-1663:36
SEMI, 1663:36-1663:37
DICTIONARY, 1665:1-1665:11
ID("ValidityStateFlags"), 1665:12-1665:30
LBRACE, 1665:31-1665:32
BOOLEAN, 1666:3-1666:10
ID("valueMissing"), 1666:11-1666:23
EQUAL, 1666:24-1666:25
FALSE, 1666:26-1666:31
SEMI, 1666:31-1666:32
BOOLEAN, 1667:3-1667:10
ID("typeMismatch"), 1667:11-1667:23
EQUAL, 1667:24-1667:25
FALSE, 1667:26-1667:31
SEMI, 1667:31-1667:32
BOOLEAN, 1668:3-1668:10
ID("patternMismatch"), 1668:11-1668:26
EQUAL, 1668:27-1668:28
FALSE, 1668:29-1668:34
SEMI, 1668:34-1668:35
BOOLEAN, 1669:3-1669:10
ID("tooLong"), 1669:11-1669:18
EQUAL, 1669:19-1669:20
FALSE, 1669:21-1669:26
SEMI, 1669:26-1669:27
BOOLEAN, 1670:3-1670:10
ID("tooShort"), 1670:11-1670:19
EQUAL, 1670:20-1670:21
FALSE, 1670:22-1670:27
SEMI, 1670:27-1670:28
BOOLEAN, 1671:3-1671:10
ID("rangeUnderflow"), 1671:11-1671:25
EQUAL, 1671:26-1671:27
FALSE, 1671:28-1671:33
SEMI, 1671:33-1671:34
BOOLEAN, 1672:3-1672:10
ID("rangeOverflow"), 1672:11-1672:24
EQUAL, 1672:25-1672:26
FALSE, 1672:27-1672:32
SEMI, 1672:32-1672:33
BOOLEAN, 1673:3-1673:10
ID("stepMismatch"), 1673:11-1673:23
EQUAL, 1673:24-1673:25
FALSE, 1673:26-1673:31
SEMI, 1673:31-1673:32
BOOLEAN, 1674:3-1674:10
ID("badInput"), 1674:11-1674:19
EQUAL, 1674:20-1674:21
FALSE, 1674:22-1674:27
SEMI, 1674:27-1674:28
BOOLEAN, 1675:3-1675:10
ID("customError"), 1675:11-1675:22
EQUAL, 1675:23-1675:24
FALSE, 1675:25-1675:30
SEMI, 1675:30-1675:31
RBRACE, 1676:1-1676:2
SEMI, 1676:2-1676:3
LBRACKET, 1678:1-1678:2
ID("Exposed"), 1678:2-1678:9
EQUAL, 1678:9-1678:10
ID("Window"), 1678:10-1678:16
RBRACKET, 1678:16-1678:17
INTERFACE, 1679:1-1679:10
ID("CustomStateSet"), 1679:11-1679:25
LBRACE, 1679:26-1679:27
SETLIKE, 1680:3-1680:10
LT, 1680:10-1680:11
DOMSTRING, 1680:11-1680:20
GT, 1680:20-1680:21
SEMI, 1680:21-1680:22
RBRACE, 1681:1-1681:2
SEMI, 1681:2-1681:3
LBRACKET, 1683:1-1683:2
ID("Exposed"), 1683:2-1683:9
EQUAL, 1683:9-1683:10
LPAREN, 1683:10-1683:11
ID("Window"), 1683:11-1683:17
RPAREN, 1683:17-1683:18
RBRACKET, 1683:18-1683:19
INTERFACE, 1684:1-1684:10
ID("VisibilityStateEntry"), 1684:11-1684:31
COLON, 1684:32-1684:33
ID("PerformanceEntry"), 1684:34-1684:50
LBRACE, 1684:51-1684:52
READONLY, 1685:3-1685:11
ATTRIBUTE, 1685:12-1685:21
DOMSTRING, 1685:22-1685:31
ID("name"), 1685:32-1685:36
SEMI, 1685:36-1685:37
READONLY, 1686:3-1686:11
ATTRIBUTE, 1686:12-1686:21
DOMSTRING, 1686:22-1686:31
ID("entryType"), 1686:32-1686:41
SEMI, 1686:41-1686:42
READONLY, 1687:3-1687:11
ATTRIBUTE, 1687:12-1687:21
ID("DOMHighResTimeStamp"), 1687:22-1687:41
ID("startTime"), 1687:42-1687:51
SEMI, 1687:51-1687:52
READONLY, 1688:3-1688:11
ATTRIBUTE, 1688:12-1688:21
UNSIGNED, 1688:22-1688:30
LONG, 1688:31-1688:35
ID("duration"), 1688:36-1688:44
SEMI, 1688:44-1688:45
RBRACE, 1689:1-1689:2
SEMI, 1689:2-1689:3
LBRACKET, 1691:1-1691:2
ID("Exposed"), 1691:2-1691:9
EQUAL, 1691:9-1691:10
ID("Window"), 1691:10-1691:16
RBRACKET, 1691:16-1691:17
INTERFACE, 1692:1-1692:10
ID("UserActivation"), 1692:11-1692:25
LBRACE, 1692:26-1692:27
READONLY, 1693:3-1693:11
ATTRIBUTE, 1693:12-1693:21
BOOLEAN, 1693:22-1693:29
ID("hasBeenActive"), 1693:30-1693:43
SEMI, 1693:43-1693:44
READONLY, 1694:3-1694:11
ATTRIBUTE, 1694:12-1694:21
BOOLEAN, 1694:22-1694:29
ID("isActive"), 1694:30-1694:38
SEMI, 1694:38-1694:39
RBRACE, 1695:1-1695:2
SEMI, 1695:2-1695:3
PARTIAL, 1697:1-1697:8
INTERFACE, 1697:9-1697:18
ID("Navigator"), 1697:19-1697:28
LBRACE, 1697:29-1697:30
LBRACKET, 1698:3-1698:4
ID("SameObject"), 1698:4-1698:14
RBRACKET, 1698:14-1698:15
READONLY, 1698:16-1698:24
ATTRIBUTE, 1698:25-1698:34
ID("UserActivation"), 1698:35-1698:49
ID("userActivation"), 1698:50-1698:64
SEMI, 1698:64-1698:65
RBRACE, 1699:1-1699:2
SEMI, 1699:2-1699:3
LBRACKET, 1701:1-1701:2
ID("Exposed"), 1701:2-1701:9
EQUAL, 1701:9-1701:10
ID("Window"), 1701:10-1701:16
RBRACKET, 1701:16-1701:17
INTERFACE, 1702:1-1702:10
ID("ToggleEvent"), 1702:11-1702:22
COLON, 1702:23-1702:24
ID("Event"), 1702:25-1702:30
LBRACE, 1702:31-1702:32
CONSTRUCTOR, 1703:3-1703:14
LPAREN, 1703:14-1703:15
DOMSTRING, 1703:15-1703:24
ID("type"), 1703:25-1703:29
COMMA, 1703:29-1703:30
OPTIONAL, 1703:31-1703:39
ID("ToggleEventInit"), 1703:40-1703:55
ID("eventInitDict"), 1703:56-1703:69
EQUAL, 1703:70-1703:71
LBRACE, 1703:72-1703:73
RBRACE, 1703:73-1703:74
RPAREN, 1703:74-1703:75
SEMI, 1703:75-1703:76
READONLY, 1704:3-1704:11
ATTRIBUTE, 1704:12-1704:21
DOMSTRING, 1704:22-1704:31
ID("oldState"), 1704:32-1704:40
SEMI, 1704:40-1704:41
READONLY, 1705:3-1705:11
ATTRIBUTE, 1705:12-1705:21
DOMSTRING, 1705:22-1705:31
ID("newState"), 1705:32-1705:40
SEMI, 1705:40-1705:41
READONLY, 1706:3-1706:11
ATTRIBUTE, 1706:12-1706:21
ID("Element"), 1706:22-1706:29
QUESTION, 1706:29-1706:30
ID("source"), 1706:31-1706:37
SEMI, 1706:37-1706:38
RBRACE, 1707:1-1707:2
SEMI, 1707:2-1707:3
DICTIONARY, 1709:1-1709:11
ID("ToggleEventInit"), 1709:12-1709:27
COLON, 1709:28-1709:29
ID("EventInit"), 1709:30-1709:39
LBRACE, 1709:40-1709:41
DOMSTRING, 1710:3-1710:12
ID("oldState"), 1710:13-1710:21
EQUAL, 1710:22-1710:23
STRING("\"\""), 1710:24-1710:26
SEMI, 1710:26-1710:27
DOMSTRING, 1711:3-1711:12
ID("newState"), 1711:13-1711:21
EQUAL, 1711:22-1711:23
STRING("\"\""), 1711:24-1711:26
SEMI, 1711:26-1711:27
RBRACE, 1712:1-1712:2
SEMI, 1712:2-1712:3
LBRACKET, 1714:1-1714:2
ID("Exposed"), 1714:2-1714:9
EQUAL, 1714:9-1714:10
ID("Window"), 1714:10-1714:16
RBRACKET, 1714:16-1714:17
INTERFACE, 1715:1-1715:10
ID("CommandEvent"), 1715:11-1715:23
COLON, 1715:24-1715:25
ID("Event"), 1715:26-1715:31
LBRACE, 1715:32-1715:33
CONSTRUCTOR, 1716:3-1716:14
LPAREN, 1716:14-1716:15
DOMSTRING, 1716:15-1716:24
ID("type"), 1716:25-1716:29
COMMA, 1716:29-1716:30
OPTIONAL, 1716:31-1716:39
ID("CommandEventInit"), 1716:40-1716:56
ID("eventInitDict"), 1716:57-1716:70
EQUAL, 1716:71-1716:72
LBRACE, 1716:73-1716:74
RBRACE, 1716:74-1716:75
RPAREN, 1716:75-1716:76
SEMI, 1716:76-1716:77
READONLY, 1717:3-1717:11
ATTRIBUTE, 1717:12-1717:21
ID("Element"), 1717:22-1717:29
QUESTION, 1717:29-1717:30
ID("source"), 1717:31-1717:37
SEMI, 1717:37-1717:38
READONLY, 1718:3-1718:11
ATTRIBUTE, 1718:12-1718:21
DOMSTRING, 1718:22-1718:31
ID("command"), 1718:32-1718:39
SEMI, 1718:39-1718:40
RBRACE, 1719:1-1719:2
SEMI, 1719:2-1719:3
DICTIONARY, 1721:1-1721:11
ID("CommandEventInit"), 1721:12-1721:28
COLON, 1721:29-1721:30
ID("EventInit"), 1721:31-1721:40
LBRACE, 1721:41-1721:42
ID("Element"), 1722:3-1722:10
QUESTION, 1722:10-1722:11
ID("source"), 1722:12-1722:18
EQUAL, 1722:19-1722:20
NULL, 1722:21-1722:25
SEMI, 1722:25-1722:26
DOMSTRING, 1723:3-1723:12
ID("command"), 1723:13-1723:20
EQUAL, 1723:21-1723:22
STRING("\"\""), 1723:23-1723:25
SEMI, 1723:25-1723:26
RBRACE, 1724:1-1724:2
SEMI, 1724:2-1724:3
DICTIONARY, 1726:1-1726:11
ID("FocusOptions"), 1726:12-1726:24
LBRACE, 1726:25-1726:26
BOOLEAN, 1727:3-1727:10
ID("preventScroll"), 1727:11-1727:24
EQUAL, 1727:25-1727:26
FALSE, 1727:27-1727:32
SEMI, 1727:32-1727:33
BOOLEAN, 1728:3-1728:10
ID("focusVisible"), 1728:11-1728:23
SEMI, 1728:23-1728:24
RBRACE, 1729:1-1729:2
SEMI, 1729:2-1729:3
INTERFACE, 1731:1-1731:10
MIXIN, 1731:11-1731:16
ID("ElementContentEditable"), 1731:17-1731:39
LBRACE, 1731:40-1731:41
LBRACKET, 1732:3-1732:4
ID("CEReactions"), 1732:4-1732:15
RBRACKET, 1732:15-1732:16
ATTRIBUTE, 1732:17-1732:26
DOMSTRING, 1732:27-1732:36
ID("contentEditable"), 1732:37-1732:52
SEMI, 1732:52-1732:53
LBRACKET, 1733:3-1733:4
ID("CEReactions"), 1733:4-1733:15
RBRACKET, 1733:15-1733:16
ATTRIBUTE, 1733:17-1733:26
DOMSTRING, 1733:27-1733:36
ID("enterKeyHint"), 1733:37-1733:49
SEMI, 1733:49-1733:50
READONLY, 1734:3-1734:11
ATTRIBUTE, 1734:12-1734:21
BOOLEAN, 1734:22-1734:29
ID("isContentEditable"), 1734:30-1734:47
SEMI, 1734:47-1734:48
LBRACKET, 1735:3-1735:4
ID("CEReactions"), 1735:4-1735:15
RBRACKET, 1735:15-1735:16
ATTRIBUTE, 1735:17-1735:26
DOMSTRING, 1735:27-1735:36
ID("inputMode"), 1735:37-1735:46
SEMI, 1735:46-1735:47
RBRACE, 1736:1-1736:2
SEMI, 1736:2-1736:3
LBRACKET, 1738:1-1738:2
ID("Exposed"), 1738:2-1738:9
EQUAL, 1738:9-1738:10
ID("Window"), 1738:10-1738:16
RBRACKET, 1738:16-1738:17
INTERFACE, 1739:1-1739:10
ID("CloseWatcher"), 1739:11-1739:23
COLON, 1739:24-1739:25
ID("EventTarget"), 1739:26-1739:37
LBRACE, 1739:38-1739:39
CONSTRUCTOR, 1740:3-1740:14
LPAREN, 1740:14-1740:15
OPTIONAL, 1740:15-1740:23
ID("CloseWatcherOptions"), 1740:24-1740:43
ID("options"), 1740:44-1740:51
EQUAL, 1740:52-1740:53
LBRACE, 1740:54-1740:55
RBRACE, 1740:55-1740:56
RPAREN, 1740:56-1740:57
SEMI, 1740:57-1740:58
UNDEFINED, 1742:3-1742:12
ID("requestClose"), 1742:13-1742:25
LPAREN, 1742:25-1742:26
RPAREN, 1742:26-1742:27
SEMI, 1742:27-1742:28
UNDEFINED, 1743:3-1743:12
ID("close"), 1743:13-1743:18
LPAREN, 1743:18-1743:19
RPAREN, 1743:19-1743:20
SEMI, 1743:20-1743:21
UNDEFINED, 1744:3-1744:12
ID("destroy"), 1744:13-1744:20
LPAREN, 1744:20-1744:21
RPAREN, 1744:21-1744:22
SEMI, 1744:22-1744:23
ATTRIBUTE, 1746:3-1746:12
ID("EventHandler"), 1746:13-1746:25
ID("oncancel"), 1746:26-1746:34
SEMI, 1746:34-1746:35
ATTRIBUTE, 1747:3-1747:12
ID("EventHandler"), 1747:13-1747:25
ID("onclose"), 1747:26-1747:33
SEMI, 1747:33-1747:34
RBRACE, 1748:1-1748:2
SEMI, 1748:2-1748:3
DICTIONARY, 1750:1-1750:11
ID("CloseWatcherOptions"), 1750:12-1750:31
LBRACE, 1750:32-1750:33
ID("AbortSignal"), 1751:3-1751:14
ID("signal"), 1751:15-1751:21
SEMI, 1751:21-1751:22
RBRACE, 1752:1-1752:2
SEMI, 1752:2-1752:3
LBRACKET, 1754:1-1754:2
ID("Exposed"), 1754:2-1754:9
EQUAL, 1754:9-1754:10
ID("Window"), 1754:10-1754:16
RBRACKET, 1754:16-1754:17
INTERFACE, 1755:1-1755:10
ID("DataTransfer"), 1755:11-1755:23
LBRACE, 1755:24-1755:25
CONSTRUCTOR, 1756:3-1756:14
LPAREN, 1756:14-1756:15
RPAREN, 1756:15-1756:16
SEMI, 1756:16-1756:17
ATTRIBUTE, 1758:3-1758:12
DOMSTRING, 1758:13-1758:22
ID("dropEffect"), 1758:23-1758:33
SEMI, 1758:33-1758:34
ATTRIBUTE, 1759:3-1759:12
DOMSTRING, 1759:13-1759:22
ID("effectAllowed"), 1759:23-1759:36
SEMI, 1759:36-1759:37
LBRACKET, 1761:3-1761:4
ID("SameObject"), 1761:4-1761:14
RBRACKET, 1761:14-1761:15
READONLY, 1761:16-1761:24
ATTRIBUTE, 1761:25-1761:34
ID("DataTransferItemList"), 1761:35-1761:55
ID("items"), 1761:56-1761:61
SEMI, 1761:61-1761:62
UNDEFINED, 1763:3-1763:12
ID("setDragImage"), 1763:13-1763:25
LPAREN, 1763:25-1763:26
ID("Element"), 1763:26-1763:33
ID("image"), 1763:34-1763:39
COMMA, 1763:39-1763:40
LONG, 1763:41-1763:45
ID("x"), 1763:46-1763:47
COMMA, 1763:47-1763:48
LONG, 1763:49-1763:53
ID("y"), 1763:54-1763:55
RPAREN, 1763:55-1763:56
SEMI, 1763:56-1763:57
READONLY, 1766:3-1766:11
ATTRIBUTE, 1766:12-1766:21
FROZENARRAY, 1766:22-1766:33
LT, 1766:33-1766:34
DOMSTRING, 1766:34-1766:43
GT, 1766:43-1766:44
ID("types"), 1766:45-1766:50
SEMI, 1766:50-1766:51
DOMSTRING, 1767:3-1767:12
ID("getData"), 1767:13-1767:20
LPAREN, 1767:20-1767:21
DOMSTRING, 1767:21-1767:30
ID("format"), 1767:31-1767:37
RPAREN, 1767:37-1767:38
SEMI, 1767:38-1767:39
UNDEFINED, 1768:3-1768:12
ID("setData"), 1768:13-1768:20
LPAREN, 1768:20-1768:21
DOMSTRING, 1768:21-1768:30
ID("format"), 1768:31-1768:37
COMMA, 1768:37-1768:38
DOMSTRING, 1768:39-1768:48
ID("data"), 1768:49-1768:53
RPAREN, 1768:53-1768:54
SEMI, 1768:54-1768:55
UNDEFINED, 1769:3-1769:12
ID("clearData"), 1769:13-1769:22
LPAREN, 1769:22-1769:23
OPTIONAL, 1769:23-1769:31
DOMSTRING, 1769:32-1769:41
ID("format"), 1769:42-1769:48
RPAREN, 1769:48-1769:49
SEMI, 1769:49-1769:50
LBRACKET, 1770:3-1770:4
ID("SameObject"), 1770:4-1770:14
RBRACKET, 1770:14-1770:15
READONLY, 1770:16-1770:24
ATTRIBUTE, 1770:25-1770:34
ID("FileList"), 1770:35-1770:43
ID("files"), 1770:44-1770:49
SEMI, 1770:49-1770:50
RBRACE, 1771:1-1771:2
SEMI, 1771:2-1771:3
LBRACKET, 1773:1-1773:2
ID("Exposed"), 1773:2-1773:9
EQUAL, 1773:9-1773:10
ID("Window"), 1773:10-1773:16
RBRACKET, 1773:16-1773:17
INTERFACE, 1774:1-1774:10
ID("DataTransferItemList"), 1774:11-1774:31
LBRACE, 1774:32-1774:33
READONLY, 1775:3-1775:11
ATTRIBUTE, 1775:12-1775:21
UNSIGNED, 1775:22-1775:30
LONG, 1775:31-1775:35
ID("length"), 1775:36-1775:42
SEMI, 1775:42-1775:43
GETTER, 1776:3-1776:9
ID("DataTransferItem"), 1776:10-1776:26
LPAREN, 1776:27-1776:28
UNSIGNED, 1776:28-1776:36
LONG, 1776:37-1776:41
ID("index"), 1776:42-1776:47
RPAREN, 1776:47-1776:48
SEMI, 1776:48-1776:49
ID("DataTransferItem"), 1777:3-1777:19
QUESTION, 1777:19-1777:20
ID("add"), 1777:21-1777:24
LPAREN, 1777:24-1777:25
DOMSTRING, 1777:25-1777:34
ID("data"), 1777:35-1777:39
COMMA, 1777:39-1777:40
DOMSTRING, 1777:41-1777:50
ID("type"), 1777:51-1777:55
RPAREN, 1777:55-1777:56
SEMI, 1777:56-1777:57
ID("DataTransferItem"), 1778:3-1778:19
QUESTION, 1778:19-1778:20
ID("add"), 1778:21-1778:24
LPAREN, 1778:24-1778:25
ID("File"), 1778:25-1778:29
ID("data"), 1778:30-1778:34
RPAREN, 1778:34-1778:35
SEMI, 1778:35-1778:36
UNDEFINED, 1779:3-1779:12
ID("remove"), 1779:13-1779:19
LPAREN, 1779:19-1779:20
UNSIGNED, 1779:20-1779:28
LONG, 1779:29-1779:33
ID("index"), 1779:34-1779:39
RPAREN, 1779:39-1779:40
SEMI, 1779:40-1779:41
UNDEFINED, 1780:3-1780:12
ID("clear"), 1780:13-1780:18
LPAREN, 1780:18-1780:19
RPAREN, 1780:19-1780:20
SEMI, 1780:20-1780:21
RBRACE, 1781:1-1781:2
SEMI, 1781:2-1781:3
LBRACKET, 1783:1-1783:2
ID("Exposed"), 1783:2-1783:9
EQUAL, 1783:9-1783:10
ID("Window"), 1783:10-1783:16
RBRACKET, 1783:16-1783:17
INTERFACE, 1784:1-1784:10
ID("DataTransferItem"), 1784:11-1784:27
LBRACE, 1784:28-1784:29
READONLY, 1785:3-1785:11
ATTRIBUTE, 1785:12-1785:21
DOMSTRING, 1785:22-1785:31
ID("kind"), 1785:32-1785:36
SEMI, 1785:36-1785:37
READONLY, 1786:3-1786:11
ATTRIBUTE, 1786:12-1786:21
DOMSTRING, 1786:22-1786:31
ID("type"), 1786:32-1786:36
SEMI, 1786:36-1786:37
UNDEFINED, 1787:3-1787:12
ID("getAsString"), 1787:13-1787:24
LPAREN, 1787:24-1787:25
ID("FunctionStringCallback"), 1787:25-1787:47
QUESTION, 1787:47-1787:48
ID("_callback"), 1787:49-1787:58
RPAREN, 1787:58-1787:59
SEMI, 1787:59-1787:60
ID("File"), 1788:3-1788:7
QUESTION, 1788:7-1788:8
ID("getAsFile"), 1788:9-1788:18
LPAREN, 1788:18-1788:19
RPAREN, 1788:19-1788:20
SEMI, 1788:20-1788:21
RBRACE, 1789:1-1789:2
SEMI, 1789:2-1789:3
CALLBACK, 1791:1-1791:9
ID("FunctionStringCallback"), 1791:10-1791:32
EQUAL, 1791:33-1791:34
UNDEFINED, 1791:35-1791:44
LPAREN, 1791:45-1791:46
DOMSTRING, 1791:46-1791:55
ID("data"), 1791:56-1791:60
RPAREN, 1791:60-1791:61
SEMI, 1791:61-1791:62
LBRACKET, 1793:1-1793:2
ID("Exposed"), 1793:2-1793:9
EQUAL, 1793:9-1793:10
ID("Window"), 1793:10-1793:16
RBRACKET, 1793:16-1793:17
INTERFACE, 1794:1-1794:10
ID("DragEvent"), 1794:11-1794:20
COLON, 1794:21-1794:22
ID("MouseEvent"), 1794:23-1794:33
LBRACE, 1794:34-1794:35
CONSTRUCTOR, 1795:3-1795:14
LPAREN, 1795:14-1795:15
DOMSTRING, 1795:15-1795:24
ID("type"), 1795:25-1795:29
COMMA, 1795:29-1795:30
OPTIONAL, 1795:31-1795:39
ID("DragEventInit"), 1795:40-1795:53
ID("eventInitDict"), 1795:54-1795:67
EQUAL, 1795:68-1795:69
LBRACE, 1795:70-1795:71
RBRACE, 1795:71-1795:72
RPAREN, 1795:72-1795:73
SEMI, 1795:73-1795:74
READONLY, 1797:3-1797:11
ATTRIBUTE, 1797:12-1797:21
ID("DataTransfer"), 1797:22-1797:34
QUESTION, 1797:34-1797:35
ID("dataTransfer"), 1797:36-1797:48
SEMI, 1797:48-1797:49
RBRACE, 1798:1-1798:2
SEMI, 1798:2-1798:3
DICTIONARY, 1800:1-1800:11
ID("DragEventInit"), 1800:12-1800:25
COLON, 1800:26-1800:27
ID("MouseEventInit"), 1800:28-1800:42
LBRACE, 1800:43-1800:44
ID("DataTransfer"), 1801:3-1801:15
QUESTION, 1801:15-1801:16
ID("dataTransfer"), 1801:17-1801:29
EQUAL, 1801:30-1801:31
NULL, 1801:32-1801:36
SEMI, 1801:36-1801:37
RBRACE, 1802:1-1802:2
SEMI, 1802:2-1802:3
INTERFACE, 1804:1-1804:10
MIXIN, 1804:11-1804:16
ID("PopoverTargetAttributes"), 1804:17-1804:40
LBRACE, 1804:41-1804:42
LBRACKET, 1805:3-1805:4
ID("CEReactions"), 1805:4-1805:15
COMMA, 1805:15-1805:16
ID("Reflect"), 1805:17-1805:24
RBRACKET, 1805:24-1805:25
ATTRIBUTE, 1805:26-1805:35
ID("Element"), 1805:36-1805:43
QUESTION, 1805:43-1805:44
ID("popoverTargetElement"), 1805:45-1805:65
SEMI, 1805:65-1805:66
LBRACKET, 1806:3-1806:4
ID("CEReactions"), 1806:4-1806:15
RBRACKET, 1806:15-1806:16
ATTRIBUTE, 1806:17-1806:26
DOMSTRING, 1806:27-1806:36
ID("popoverTargetAction"), 1806:37-1806:56
SEMI, 1806:56-1806:57
RBRACE, 1807:1-1807:2
SEMI, 1807:2-1807:3
LBRACKET, 1809:1-1809:2
ID("Global"), 1809:2-1809:8
EQUAL, 1809:8-1809:9
ID("Window"), 1809:9-1809:15
COMMA, 1809:15-1809:16
ID("Exposed"), 1810:2-1810:9
EQUAL, 1810:9-1810:10
ID("Window"), 1810:10-1810:16
COMMA, 1810:16-1810:17
ID("LegacyUnenumerableNamedProperties"), 1811:2-1811:35
RBRACKET, 1811:35-1811:36
INTERFACE, 1812:1-1812:10
ID("Window"), 1812:11-1812:17
COLON, 1812:18-1812:19
ID("EventTarget"), 1812:20-1812:31
LBRACE, 1812:32-1812:33
LBRACKET, 1814:3-1814:4
ID("LegacyUnforgeable"), 1814:4-1814:21
RBRACKET, 1814:21-1814:22
READONLY, 1814:23-1814:31
ATTRIBUTE, 1814:32-1814:41
ID("WindowProxy"), 1814:42-1814:53
ID("window"), 1814:54-1814:60
SEMI, 1814:60-1814:61
LBRACKET, 1815:3-1815:4
ID("Replaceable"), 1815:4-1815:15
RBRACKET, 1815:15-1815:16
READONLY, 1815:17-1815:25
ATTRIBUTE, 1815:26-1815:35
ID("WindowProxy"), 1815:36-1815:47
ID("self"), 1815:48-1815:52
SEMI, 1815:52-1815:53
LBRACKET, 1816:3-1816:4
ID("LegacyUnforgeable"), 1816:4-1816:21
RBRACKET, 1816:21-1816:22
READONLY, 1816:23-1816:31
ATTRIBUTE, 1816:32-1816:41
ID("Document"), 1816:42-1816:50
ID("document"), 1816:51-1816:59
SEMI, 1816:59-1816:60
ATTRIBUTE, 1817:3-1817:12
DOMSTRING, 1817:13-1817:22
ID("name"), 1817:23-1817:27
SEMI, 1817:27-1817:28
LBRACKET, 1818:3-1818:4
ID("PutForwards"), 1818:4-1818:15
EQUAL, 1818:15-1818:16
ID("href"), 1818:16-1818:20
COMMA, 1818:20-1818:21
ID("LegacyUnforgeable"), 1818:22-1818:39
RBRACKET, 1818:39-1818:40
READONLY, 1818:41-1818:49
ATTRIBUTE, 1818:50-1818:59
ID("Location"), 1818:60-1818:68
ID("location"), 1818:69-1818:77
SEMI, 1818:77-1818:78
READONLY, 1819:3-1819:11
ATTRIBUTE, 1819:12-1819:21
ID("History"), 1819:22-1819:29
ID("history"), 1819:30-1819:37
SEMI, 1819:37-1819:38
READONLY, 1820:3-1820:11
ATTRIBUTE, 1820:12-1820:21
ID("Navigation"), 1820:22-1820:32
ID("navigation"), 1820:33-1820:43
SEMI, 1820:43-1820:44
READONLY, 1821:3-1821:11
ATTRIBUTE, 1821:12-1821:21
ID("CustomElementRegistry"), 1821:22-1821:43
ID("customElements"), 1821:44-1821:58
SEMI, 1821:58-1821:59
LBRACKET, 1822:3-1822:4
ID("Replaceable"), 1822:4-1822:15
RBRACKET, 1822:15-1822:16
READONLY, 1822:17-1822:25
ATTRIBUTE, 1822:26-1822:35
ID("BarProp"), 1822:36-1822:43
ID("locationbar"), 1822:44-1822:55
SEMI, 1822:55-1822:56
LBRACKET, 1823:3-1823:4
ID("Replaceable"), 1823:4-1823:15
RBRACKET, 1823:15-1823:16
READONLY, 1823:17-1823:25
ATTRIBUTE, 1823:26-1823:35
ID("BarProp"), 1823:36-1823:43
ID("menubar"), 1823:44-1823:51
SEMI, 1823:51-1823:52
LBRACKET, 1824:3-1824:4
ID("Replaceable"), 1824:4-1824:15
RBRACKET, 1824:15-1824:16
READONLY, 1824:17-1824:25
ATTRIBUTE, 1824:26-1824:35
ID("BarProp"), 1824:36-1824:43
ID("personalbar"), 1824:44-1824:55
SEMI, 1824:55-1824:56
LBRACKET, 1825:3-1825:4
ID("Replaceable"), 1825:4-1825:15
RBRACKET, 1825:15-1825:16
READONLY, 1825:17-1825:25
ATTRIBUTE, 1825:26-1825:35
ID("BarProp"), 1825:36-1825:43
ID("scrollbars"), 1825:44-1825:54
SEMI, 1825:54-1825:55
LBRACKET, 1826:3-1826:4
ID("Replaceable"), 1826:4-1826:15
RBRACKET, 1826:15-1826:16
READONLY, 1826:17-1826:25
ATTRIBUTE, 1826:26-1826:35
ID("BarProp"), 1826:36-1826:43
ID("statusbar"), 1826:44-1826:53
SEMI, 1826:53-1826:54
LBRACKET, 1827:3-1827:4
ID("Replaceable"), 1827:4-1827:15
RBRACKET, 1827:15-1827:16
READONLY, 1827:17-1827:25
ATTRIBUTE, 1827:26-1827:35
ID("BarProp"), 1827:36-1827:43
ID("toolbar"), 1827:44-1827:51
SEMI, 1827:51-1827:52
ATTRIBUTE, 1828:3-1828:12
DOMSTRING, 1828:13-1828:22
ID("status"), 1828:23-1828:29
SEMI, 1828:29-1828:30
UNDEFINED, 1829:3-1829:12
ID("close"), 1829:13-1829:18
LPAREN, 1829:18-1829:19
RPAREN, 1829:19-1829:20
SEMI, 1829:20-1829:21
READONLY, 1830:3-1830:11
ATTRIBUTE, 1830:12-1830:21
BOOLEAN, 1830:22-1830:29
ID("closed"), 1830:30-1830:36
SEMI, 1830:36-1830:37
UNDEFINED, 1831:3-1831:12
ID("stop"), 1831:13-1831:17
LPAREN, 1831:17-1831:18
RPAREN, 1831:18-1831:19
SEMI, 1831:19-1831:20
UNDEFINED, 1832:3-1832:12
ID("focus"), 1832:13-1832:18
LPAREN, 1832:18-1832:19
RPAREN, 1832:19-1832:20
SEMI, 1832:20-1832:21
UNDEFINED, 1833:3-1833:12
ID("blur"), 1833:13-1833:17
LPAREN, 1833:17-1833:18
RPAREN, 1833:18-1833:19
SEMI, 1833:19-1833:20
LBRACKET, 1836:3-1836:4
ID("Replaceable"), 1836:4-1836:15
RBRACKET, 1836:15-1836:16
READONLY, 1836:17-1836:25
ATTRIBUTE, 1836:26-1836:35
ID("WindowProxy"), 1836:36-1836:47
ID("frames"), 1836:48-1836:54
SEMI, 1836:54-1836:55
LBRACKET, 1837:3-1837:4
ID("Replaceable"), 1837:4-1837:15
RBRACKET, 1837:15-1837:16
READONLY, 1837:17-1837:25
ATTRIBUTE, 1837:26-1837:35
UNSIGNED, 1837:36-1837:44
LONG, 1837:45-1837:49
ID("length"), 1837:50-1837:56
SEMI, 1837:56-1837:57
LBRACKET, 1838:3-1838:4
ID("LegacyUnforgeable"), 1838:4-1838:21
RBRACKET, 1838:21-1838:22
READONLY, 1838:23-1838:31
ATTRIBUTE, 1838:32-1838:41
ID("WindowProxy"), 1838:42-1838:53
QUESTION, 1838:53-1838:54
ID("top"), 1838:55-1838:58
SEMI, 1838:58-1838:59
ATTRIBUTE, 1839:3-1839:12
ANY, 1839:13-1839:16
ID("opener"), 1839:17-1839:23
SEMI, 1839:23-1839:24
LBRACKET, 1840:3-1840:4
ID("Replaceable"), 1840:4-1840:15
RBRACKET, 1840:15-1840:16
READONLY, 1840:17-1840:25
ATTRIBUTE, 1840:26-1840:35
ID("WindowProxy"), 1840:36-1840:47
QUESTION, 1840:47-1840:48
ID("parent"), 1840:49-1840:55
SEMI, 1840:55-1840:56
READONLY, 1841:3-1841:11
ATTRIBUTE, 1841:12-1841:21
ID("Element"), 1841:22-1841:29
QUESTION, 1841:29-1841:30
ID("frameElement"), 1841:31-1841:43
SEMI, 1841:43-1841:44
ID("WindowProxy"), 1842:3-1842:14
QUESTION, 1842:14-1842:15
ID("open"), 1842:16-1842:20
LPAREN, 1842:20-1842:21
OPTIONAL, 1842:21-1842:29
USVSTRING, 1842:30-1842:39
ID("url"), 1842:40-1842:43
EQUAL, 1842:44-1842:45
STRING("\"\""), 1842:46-1842:48
COMMA, 1842:48-1842:49
OPTIONAL, 1842:50-1842:58
DOMSTRING, 1842:59-1842:68
ID("target"), 1842:69-1842:75
EQUAL, 1842:76-1842:77
STRING("\"_blank\""), 1842:78-1842:86
COMMA, 1842:86-1842:87
OPTIONAL, 1842:88-1842:96
LBRACKET, 1842:97-1842:98
ID("LegacyNullToEmptyString"), 1842:98-1842:121
RBRACKET, 1842:121-1842:122
DOMSTRING, 1842:123-1842:132
ID("features"), 1842:133-1842:141
EQUAL, 1842:142-1842:143
STRING("\"\""), 1842:144-1842:146
RPAREN, 1842:146-1842:147
SEMI, 1842:147-1842:148
GETTER, 1847:3-1847:9
OBJECT, 1847:10-1847:16
LPAREN, 1847:17-1847:18
DOMSTRING, 1847:18-1847:27
ID("name"), 1847:28-1847:32
RPAREN, 1847:32-1847:33
SEMI, 1847:33-1847:34
READONLY, 1850:3-1850:11
ATTRIBUTE, 1850:12-1850:21
ID("Navigator"), 1850:22-1850:31
ID("navigator"), 1850:32-1850:41
SEMI, 1850:41-1850:42
LBRACKET, 1851:3-1851:4
ID("Replaceable"), 1851:4-1851:15
RBRACKET, 1851:15-1851:16
READONLY, 1851:17-1851:25
ATTRIBUTE, 1851:26-1851:35
ID("Navigator"), 1851:36-1851:45
ID("clientInformation"), 1851:46-1851:63
SEMI, 1851:63-1851:64
READONLY, 1852:3-1852:11
ATTRIBUTE, 1852:12-1852:21
BOOLEAN, 1852:22-1852:29
ID("originAgentCluster"), 1852:30-1852:48
SEMI, 1852:48-1852:49
UNDEFINED, 1855:3-1855:12
ID("alert"), 1855:13-1855:18
LPAREN, 1855:18-1855:19
RPAREN, 1855:19-1855:20
SEMI, 1855:20-1855:21
UNDEFINED, 1856:3-1856:12
ID("alert"), 1856:13-1856:18
LPAREN, 1856:18-1856:19
DOMSTRING, 1856:19-1856:28
ID("message"), 1856:29-1856:36
RPAREN, 1856:36-1856:37
SEMI, 1856:37-1856:38
BOOLEAN, 1857:3-1857:10
ID("confirm"), 1857:11-1857:18
LPAREN, 1857:18-1857:19
OPTIONAL, 1857:19-1857:27
DOMSTRING, 1857:28-1857:37
ID("message"), 1857:38-1857:45
EQUAL, 1857:46-1857:47
STRING("\"\""), 1857:48-1857:50
RPAREN, 1857:50-1857:51
SEMI, 1857:51-1857:52
DOMSTRING, 1858:3-1858:12
QUESTION, 1858:12-1858:13
ID("prompt"), 1858:14-1858:20
LPAREN, 1858:20-1858:21
OPTIONAL, 1858:21-1858:29
DOMSTRING, 1858:30-1858:39
ID("message"), 1858:40-1858:47
EQUAL, 1858:48-1858:49
STRING("\"\""), 1858:50-1858:52
COMMA, 1858:52-1858:53
OPTIONAL, 1858:54-1858:62
DOMSTRING, 1858:63-1858:72
ID("default"), 1858:73-1858:80
EQUAL, 1858:81-1858:82
STRING("\"\""), 1858:83-1858:85
RPAREN, 1858:85-1858:86
SEMI, 1858:86-1858:87
UNDEFINED, 1859:3-1859:12
ID("print"), 1859:13-1859:18
LPAREN, 1859:18-1859:19
RPAREN, 1859:19-1859:20
SEMI, 1859:20-1859:21
UNDEFINED, 1861:3-1861:12
ID("postMessage"), 1861:13-1861:24
LPAREN, 1861:24-1861:25
ANY, 1861:25-1861:28
ID("message"), 1861:29-1861:36
COMMA, 1861:36-1861:37
USVSTRING, 1861:38-1861:47
ID("targetOrigin"), 1861:48-1861:60
COMMA, 1861:60-1861:61
OPTIONAL, 1861:62-1861:70
SEQUENCE, 1861:71-1861:79
LT, 1861:79-1861:80
OBJECT, 1861:80-1861:86
GT, 1861:86-1861:87
ID("transfer"), 1861:88-1861:96
EQUAL, 1861:97-1861:98
LBRACKET, 1861:99-1861:100
RBRACKET, 1861:100-1861:101
RPAREN, 1861:101-1861:102
SEMI, 1861:102-1861:103
UNDEFINED, 1862:3-1862:12
ID("postMessage"), 1862:13-1862:24
LPAREN, 1862:24-1862:25
ANY, 1862:25-1862:28
ID("message"), 1862:29-1862:36
COMMA, 1862:36-1862:37
OPTIONAL, 1862:38-1862:46
ID("WindowPostMessageOptions"), 1862:47-1862:71
ID("options"), 1862:72-1862:79
EQUAL, 1862:80-1862:81
LBRACE, 1862:82-1862:83
RBRACE, 1862:83-1862:84
RPAREN, 1862:84-1862:85
SEMI, 1862:85-1862:86
RBRACE, 1865:1-1865:2
SEMI, 1865:2-1865:3
ID("Window"), 1866:1-1866:7
INCLUDES, 1866:8-1866:16
ID("GlobalEventHandlers"), 1866:17-1866:36
SEMI, 1866:36-1866:37
ID("Window"), 1867:1-1867:7
INCLUDES, 1867:8-1867:16
ID("WindowEventHandlers"), 1867:17-1867:36
SEMI, 1867:36-1867:37
DICTIONARY, 1869:1-1869:11
ID("WindowPostMessageOptions"), 1869:12-1869:36
COLON, 1869:37-1869:38
ID("StructuredSerializeOptions"), 1869:39-1869:65
LBRACE, 1869:66-1869:67
USVSTRING, 1870:3-1870:12
ID("targetOrigin"), 1870:13-1870:25
EQUAL, 1870:26-1870:27
STRING("\"/\""), 1870:28-1870:31
SEMI, 1870:31-1870:32
RBRACE, 1871:1-1871:2
SEMI, 1871:2-1871:3
LBRACKET, 1873:1-1873:2
ID("Exposed"), 1873:2-1873:9
EQUAL, 1873:9-1873:10
ID("Window"), 1873:10-1873:16
RBRACKET, 1873:16-1873:17
INTERFACE, 1874:1-1874:10
ID("BarProp"), 1874:11-1874:18
LBRACE, 1874:19-1874:20
READONLY, 1875:3-1875:11
ATTRIBUTE, 1875:12-1875:21
BOOLEAN, 1875:22-1875:29
ID("visible"), 1875:30-1875:37
SEMI, 1875:37-1875:38
RBRACE, 1876:1-1876:2
SEMI, 1876:2-1876:3
LBRACKET, 1878:1-1878:2
ID("Exposed"), 1878:2-1878:9
EQUAL, 1878:9-1878:10
ID("Window"), 1878:10-1878:16
RBRACKET, 1878:16-1878:17
INTERFACE, 1879:1-1879:10
ID("Location"), 1879:11-1879:19
LBRACE, 1879:20-1879:21
LBRACKET, 1880:3-1880:4
ID("LegacyUnforgeable"), 1880:4-1880:21
RBRACKET, 1880:21-1880:22
STRINGIFIER, 1880:23-1880:34
ATTRIBUTE, 1880:35-1880:44
USVSTRING, 1880:45-1880:54
ID("href"), 1880:55-1880:59
SEMI, 1880:59-1880:60
LBRACKET, 1881:3-1881:4
ID("LegacyUnforgeable"), 1881:4-1881:21
RBRACKET, 1881:21-1881:22
READONLY, 1881:23-1881:31
ATTRIBUTE, 1881:32-1881:41
USVSTRING, 1881:42-1881:51
ID("origin"), 1881:52-1881:58
SEMI, 1881:58-1881:59
LBRACKET, 1882:3-1882:4
ID("LegacyUnforgeable"), 1882:4-1882:21
RBRACKET, 1882:21-1882:22
ATTRIBUTE, 1882:23-1882:32
USVSTRING, 1882:33-1882:42
ID("protocol"), 1882:43-1882:51
SEMI, 1882:51-1882:52
LBRACKET, 1883:3-1883:4
ID("LegacyUnforgeable"), 1883:4-1883:21
RBRACKET, 1883:21-1883:22
ATTRIBUTE, 1883:23-1883:32
USVSTRING, 1883:33-1883:42
ID("host"), 1883:43-1883:47
SEMI, 1883:47-1883:48
LBRACKET, 1884:3-1884:4
ID("LegacyUnforgeable"), 1884:4-1884:21
RBRACKET, 1884:21-1884:22
ATTRIBUTE, 1884:23-1884:32
USVSTRING, 1884:33-1884:42
ID("hostname"), 1884:43-1884:51
SEMI, 1884:51-1884:52
LBRACKET, 1885:3-1885:4
ID("LegacyUnforgeable"), 1885:4-1885:21
RBRACKET, 1885:21-1885:22
ATTRIBUTE, 1885:23-1885:32
USVSTRING, 1885:33-1885:42
ID("port"), 1885:43-1885:47
SEMI, 1885:47-1885:48
LBRACKET, 1886:3-1886:4
ID("LegacyUnforgeable"), 1886:4-1886:21
RBRACKET, 1886:21-1886:22
ATTRIBUTE, 1886:23-1886:32
USVSTRING, 1886:33-1886:42
ID("pathname"), 1886:43-1886:51
SEMI, 1886:51-1886:52
LBRACKET, 1887:3-1887:4
ID("LegacyUnforgeable"), 1887:4-1887:21
RBRACKET, 1887:21-1887:22
ATTRIBUTE, 1887:23-1887:32
USVSTRING, 1887:33-1887:42
ID("search"), 1887:43-1887:49
SEMI, 1887:49-1887:50
LBRACKET, 1888:3-1888:4
ID("LegacyUnforgeable"), 1888:4-1888:21
RBRACKET, 1888:21-1888:22
ATTRIBUTE, 1888:23-1888:32
USVSTRING, 1888:33-1888:42
ID("hash"), 1888:43-1888:47
SEMI, 1888:47-1888:48
LBRACKET, 1890:3-1890:4
ID("LegacyUnforgeable"), 1890:4-1890:21
RBRACKET, 1890:21-1890:22
UNDEFINED, 1890:23-1890:32
ID("assign"), 1890:33-1890:39
LPAREN, 1890:39-1890:40
USVSTRING, 1890:40-1890:49
ID("url"), 1890:50-1890:53
RPAREN, 1890:53-1890:54
SEMI, 1890:54-1890:55
LBRACKET, 1891:3-1891:4
ID("LegacyUnforgeable"), 1891:4-1891:21
RBRACKET, 1891:21-1891:22
UNDEFINED, 1891:23-1891:32
ID("replace"), 1891:33-1891:40
LPAREN, 1891:40-1891:41
USVSTRING, 1891:41-1891:50
ID("url"), 1891:51-1891:54
RPAREN, 1891:54-1891:55
SEMI, 1891:55-1891:56
LBRACKET, 1892:3-1892:4
ID("LegacyUnforgeable"), 1892:4-1892:21
RBRACKET, 1892:21-1892:22
UNDEFINED, 1892:23-1892:32
ID("reload"), 1892:33-1892:39
LPAREN, 1892:39-1892:40
RPAREN, 1892:40-1892:41
SEMI, 1892:41-1892:42
LBRACKET, 1894:3-1894:4
ID("LegacyUnforgeable"), 1894:4-1894:21
COMMA, 1894:21-1894:22
ID("SameObject"), 1894:23-1894:33
RBRACKET, 1894:33-1894:34
READONLY, 1894:35-1894:43
ATTRIBUTE, 1894:44-1894:53
ID("DOMStringList"), 1894:54-1894:67
ID("ancestorOrigins"), 1894:68-1894:83
SEMI, 1894:83-1894:84
RBRACE, 1895:1-1895:2
SEMI, 1895:2-1895:3
ENUM, 1897:1-1897:5
ID("ScrollRestoration"), 1897:6-1897:23
LBRACE, 1897:24-1897:25
STRING("\"auto\""), 1897:26-1897:32
COMMA, 1897:32-1897:33
STRING("\"manual\""), 1897:34-1897:42
RBRACE, 1897:43-1897:44
SEMI, 1897:44-1897:45
LBRACKET, 1899:1-1899:2
ID("Exposed"), 1899:2-1899:9
EQUAL, 1899:9-1899:10
ID("Window"), 1899:10-1899:16
RBRACKET, 1899:16-1899:17
INTERFACE, 1900:1-1900:10
ID("History"), 1900:11-1900:18
LBRACE, 1900:19-1900:20
READONLY, 1901:3-1901:11
ATTRIBUTE, 1901:12-1901:21
UNSIGNED, 1901:22-1901:30
LONG, 1901:31-1901:35
ID("length"), 1901:36-1901:42
SEMI, 1901:42-1901:43
ATTRIBUTE, 1902:3-1902:12
ID("ScrollRestoration"), 1902:13-1902:30
ID("scrollRestoration"), 1902:31-1902:48
SEMI, 1902:48-1902:49
READONLY, 1903:3-1903:11
ATTRIBUTE, 1903:12-1903:21
ANY, 1903:22-1903:25
ID("state"), 1903:26-1903:31
SEMI, 1903:31-1903:32
UNDEFINED, 1904:3-1904:12
ID("go"), 1904:13-1904:15
LPAREN, 1904:15-1904:16
OPTIONAL, 1904:16-1904:24
LONG, 1904:25-1904:29
ID("delta"), 1904:30-1904:35
EQUAL, 1904:36-1904:37
INT("0"), 1904:38-1904:39
RPAREN, 1904:39-1904:40
SEMI, 1904:40-1904:41
UNDEFINED, 1905:3-1905:12
ID("back"), 1905:13-1905:17
LPAREN, 1905:17-1905:18
RPAREN, 1905:18-1905:19
SEMI, 1905:19-1905:20
UNDEFINED, 1906:3-1906:12
ID("forward"), 1906:13-1906:20
LPAREN, 1906:20-1906:21
RPAREN, 1906:21-1906:22
SEMI, 1906:22-1906:23
UNDEFINED, 1907:3-1907:12
ID("pushState"), 1907:13-1907:22
LPAREN, 1907:22-1907:23
ANY, 1907:23-1907:26
ID("data"), 1907:27-1907:31
COMMA, 1907:31-1907:32
DOMSTRING, 1907:33-1907:42
ID("unused"), 1907:43-1907:49
COMMA, 1907:49-1907:50
OPTIONAL, 1907:51-1907:59
USVSTRING, 1907:60-1907:69
QUESTION, 1907:69-1907:70
ID("url"), 1907:71-1907:74
EQUAL, 1907:75-1907:76
NULL, 1907:77-1907:81
RPAREN, 1907:81-1907:82
SEMI, 1907:82-1907:83
UNDEFINED, 1908:3-1908:12
ID("replaceState"), 1908:13-1908:25
LPAREN, 1908:25-1908:26
ANY, 1908:26-1908:29
ID("data"), 1908:30-1908:34
COMMA, 1908:34-1908:35
DOMSTRING, 1908:36-1908:45
ID("unused"), 1908:46-1908:52
COMMA, 1908:52-1908:53
OPTIONAL, 1908:54-1908:62
USVSTRING, 1908:63-1908:72
QUESTION, 1908:72-1908:73
ID("url"), 1908:74-1908:77
EQUAL, 1908:78-1908:79
NULL, 1908:80-1908:84
RPAREN, 1908:84-1908:85
SEMI, 1908:85-1908:86
RBRACE, 1909:1-1909:2
SEMI, 1909:2-1909:3
LBRACKET, 1911:1-1911:2
ID("Exposed"), 1911:2-1911:9
EQUAL, 1911:9-1911:10
ID("Window"), 1911:10-1911:16
RBRACKET, 1911:16-1911:17
INTERFACE, 1912:1-1912:10
ID("Navigation"), 1912:11-1912:21
COLON, 1912:22-1912:23
ID("EventTarget"), 1912:24-1912:35
LBRACE, 1912:36-1912:37
SEQUENCE, 1913:3-1913:11
LT, 1913:11-1913:12
ID("NavigationHistoryEntry"), 1913:12-1913:34
GT, 1913:34-1913:35
ID("entries"), 1913:36-1913:43
LPAREN, 1913:43-1913:44
RPAREN, 1913:44-1913:45
SEMI, 1913:45-1913:46
READONLY, 1914:3-1914:11
ATTRIBUTE, 1914:12-1914:21
ID("NavigationHistoryEntry"), 1914:22-1914:44
QUESTION, 1914:44-1914:45
ID("currentEntry"), 1914:46-1914:58
SEMI, 1914:58-1914:59
UNDEFINED, 1915:3-1915:12
ID("updateCurrentEntry"), 1915:13-1915:31
LPAREN, 1915:31-1915:32
ID("NavigationUpdateCurrentEntryOptions"), 1915:32-1915:67
ID("options"), 1915:68-1915:75
RPAREN, 1915:75-1915:76
SEMI, 1915:76-1915:77
READONLY, 1916:3-1916:11
ATTRIBUTE, 1916:12-1916:21
ID("NavigationTransition"), 1916:22-1916:42
QUESTION, 1916:42-1916:43
ID("transition"), 1916:44-1916:54
SEMI, 1916:54-1916:55
READONLY, 1917:3-1917:11
ATTRIBUTE, 1917:12-1917:21
ID("NavigationActivation"), 1917:22-1917:42
QUESTION, 1917:42-1917:43
ID("activation"), 1917:44-1917:54
SEMI, 1917:54-1917:55
READONLY, 1919:3-1919:11
ATTRIBUTE, 1919:12-1919:21
BOOLEAN, 1919:22-1919:29
ID("canGoBack"), 1919:30-1919:39
SEMI, 1919:39-1919:40
READONLY, 1920:3-1920:11
ATTRIBUTE, 1920:12-1920:21
BOOLEAN, 1920:22-1920:29
ID("canGoForward"), 1920:30-1920:42
SEMI, 1920:42-1920:43
ID("NavigationResult"), 1922:3-1922:19
ID("navigate"), 1922:20-1922:28
LPAREN, 1922:28-1922:29
USVSTRING, 1922:29-1922:38
ID("url"), 1922:39-1922:42
COMMA, 1922:42-1922:43
OPTIONAL, 1922:44-1922:52
ID("NavigationNavigateOptions"), 1922:53-1922:78
ID("options"), 1922:79-1922:86
EQUAL, 1922:87-1922:88
LBRACE, 1922:89-1922:90
RBRACE, 1922:90-1922:91
RPAREN, 1922:91-1922:92
SEMI, 1922:92-1922:93
ID("NavigationResult"), 1923:3-1923:19
ID("reload"), 1923:20-1923:26
LPAREN, 1923:26-1923:27
OPTIONAL, 1923:27-1923:35
ID("NavigationReloadOptions"), 1923:36-1923:59
ID("options"), 1923:60-1923:67
EQUAL, 1923:68-1923:69
LBRACE, 1923:70-1923:71
RBRACE, 1923:71-1923:72
RPAREN, 1923:72-1923:73
SEMI, 1923:73-1923:74
ID("NavigationResult"), 1925:3-1925:19
ID("traverseTo"), 1925:20-1925:30
LPAREN, 1925:30-1925:31
DOMSTRING, 1925:31-1925:40
ID("key"), 1925:41-1925:44
COMMA, 1925:44-1925:45
OPTIONAL, 1925:46-1925:54
ID("NavigationOptions"), 1925:55-1925:72
ID("options"), 1925:73-1925:80
EQUAL, 1925:81-1925:82
LBRACE, 1925:83-1925:84
RBRACE, 1925:84-1925:85
RPAREN, 1925:85-1925:86
SEMI, 1925:86-1925:87
ID("NavigationResult"), 1926:3-1926:19
ID("back"), 1926:20-1926:24
LPAREN, 1926:24-1926:25
OPTIONAL, 1926:25-1926:33
ID("NavigationOptions"), 1926:34-1926:51
ID("options"), 1926:52-1926:59
EQUAL, 1926:60-1926:61
LBRACE, 1926:62-1926:63
RBRACE, 1926:63-1926:64
RPAREN, 1926:64-1926:65
SEMI, 1926:65-1926:66
ID("NavigationResult"), 1927:3-1927:19
ID("forward"), 1927:20-1927:27
LPAREN, 1927:27-1927:28
OPTIONAL, 1927:28-1927:36
ID("NavigationOptions"), 1927:37-1927:54
ID("options"), 1927:55-1927:62
EQUAL, 1927:63-1927:64
LBRACE, 1927:65-1927:66
RBRACE, 1927:66-1927:67
RPAREN, 1927:67-1927:68
SEMI, 1927:68-1927:69
ATTRIBUTE, 1929:3-1929:12
ID("EventHandler"), 1929:13-1929:25
ID("onnavigate"), 1929:26-1929:36
SEMI, 1929:36-1929:37
ATTRIBUTE, 1930:3-1930:12
ID("EventHandler"), 1930:13-1930:25
ID("onnavigatesuccess"), 1930:26-1930:43
SEMI, 1930:43-1930:44
ATTRIBUTE, 1931:3-1931:12
ID("EventHandler"), 1931:13-1931:25
ID("onnavigateerror"), 1931:26-1931:41
SEMI, 1931:41-1931:42
ATTRIBUTE, 1932:3-1932:12
ID("EventHandler"), 1932:13-1932:25
ID("oncurrententrychange"), 1932:26-1932:46
SEMI, 1932:46-1932:47
RBRACE, 1933:1-1933:2
SEMI, 1933:2-1933:3
DICTIONARY, 1935:1-1935:11
ID("NavigationUpdateCurrentEntryOptions"), 1935:12-1935:47
LBRACE, 1935:48-1935:49
REQUIRED, 1936:3-1936:11
ANY, 1936:12-1936:15
ID("state"), 1936:16-1936:21
SEMI, 1936:21-1936:22
RBRACE, 1937:1-1937:2
SEMI, 1937:2-1937:3
DICTIONARY, 1939:1-1939:11
ID("NavigationOptions"), 1939:12-1939:29
LBRACE, 1939:30-1939:31
ANY, 1940:3-1940:6
ID("info"), 1940:7-1940:11
SEMI, 1940:11-1940:12
RBRACE, 1941:1-1941:2
SEMI, 1941:2-1941:3
DICTIONARY, 1943:1-1943:11
ID("NavigationNavigateOptions"), 1943:12-1943:37
COLON, 1943:38-1943:39
ID("NavigationOptions"), 1943:40-1943:57
LBRACE, 1943:58-1943:59
ANY, 1944:3-1944:6
ID("state"), 1944:7-1944:12
SEMI, 1944:12-1944:13
ID("NavigationHistoryBehavior"), 1945:3-1945:28
ID("history"), 1945:29-1945:36
EQUAL, 1945:37-1945:38
STRING("\"auto\""), 1945:39-1945:45
SEMI, 1945:45-1945:46
RBRACE, 1946:1-1946:2
SEMI, 1946:2-1946:3
DICTIONARY, 1948:1-1948:11
ID("NavigationReloadOptions"), 1948:12-1948:35
COLON, 1948:36-1948:37
ID("NavigationOptions"), 1948:38-1948:55
LBRACE, 1948:56-1948:57
ANY, 1949:3-1949:6
ID("state"), 1949:7-1949:12
SEMI, 1949:12-1949:13
RBRACE, 1950:1-1950:2
SEMI, 1950:2-1950:3
DICTIONARY, 1952:1-1952:11
ID("NavigationResult"), 1952:12-1952:28
LBRACE, 1952:29-1952:30
PROMISE, 1953:3-1953:10
LT, 1953:10-1953:11
ID("NavigationHistoryEntry"), 1953:11-1953:33
GT, 1953:33-1953:34
ID("committed"), 1953:35-1953:44
SEMI, 1953:44-1953:45
PROMISE, 1954:3-1954:10
LT, 1954:10-1954:11
ID("NavigationHistoryEntry"), 1954:11-1954:33
GT, 1954:33-1954:34
ID("finished"), 1954:35-1954:43
SEMI, 1954:43-1954:44
RBRACE, 1955:1-1955:2
SEMI, 1955:2-1955:3
ENUM, 1957:1-1957:5
ID("NavigationHistoryBehavior"), 1957:6-1957:31
LBRACE, 1957:32-1957:33
STRING("\"auto\""), 1958:3-1958:9
COMMA, 1958:9-1958:10
STRING("\"push\""), 1959:3-1959:9
COMMA, 1959:9-1959:10
STRING("\"replace\""), 1960:3-1960:12
RBRACE, 1961:1-1961:2
SEMI, 1961:2-1961:3
ENUM, 1963:1-1963:5
ID("NavigationType"), 1963:6-1963:20
LBRACE, 1963:21-1963:22
STRING("\"push\""), 1964:2-1964:8
COMMA, 1964:8-1964:9
STRING("\"replace\""), 1965:2-1965:11
COMMA, 1965:11-1965:12
STRING("\"reload\""), 1966:2-1966:10
COMMA, 1966:10-1966:11
STRING("\"traverse\""), 1967:2-1967:12
RBRACE, 1968:1-1968:2
SEMI, 1968:2-1968:3
LBRACKET, 1970:1-1970:2
ID("Exposed"), 1970:2-1970:9
EQUAL, 1970:9-1970:10
ID("Window"), 1970:10-1970:16
RBRACKET, 1970:16-1970:17
INTERFACE, 1971:1-1971:10
ID("NavigationHistoryEntry"), 1971:11-1971:33
COLON, 1971:34-1971:35
ID("EventTarget"), 1971:36-1971:47
LBRACE, 1971:48-1971:49
READONLY, 1972:3-1972:11
ATTRIBUTE, 1972:12-1972:21
USVSTRING, 1972:22-1972:31
QUESTION, 1972:31-1972:32
ID("url"), 1972:33-1972:36
SEMI, 1972:36-1972:37
READONLY, 1973:3-1973:11
ATTRIBUTE, 1973:12-1973:21
DOMSTRING, 1973:22-1973:31
ID("key"), 1973:32-1973:35
SEMI, 1973:35-1973:36
READONLY, 1974:3-1974:11
ATTRIBUTE, 1974:12-1974:21
DOMSTRING, 1974:22-1974:31
ID("id"), 1974:32-1974:34
SEMI, 1974:34-1974:35
READONLY, 1975:3-1975:11
ATTRIBUTE, 1975:12-1975:21
LONG, 1975:22-1975:26
LONG, 1975:27-1975:31
ID("index"), 1975:32-1975:37
SEMI, 1975:37-1975:38
READONLY, 1976:3-1976:11
ATTRIBUTE, 1976:12-1976:21
BOOLEAN, 1976:22-1976:29
ID("sameDocument"), 1976:30-1976:42
SEMI, 1976:42-1976:43
ANY, 1978:3-1978:6
ID("getState"), 1978:7-1978:15
LPAREN, 1978:15-1978:16
RPAREN, 1978:16-1978:17
SEMI, 1978:17-1978:18
ATTRIBUTE, 1980:3-1980:12
ID("EventHandler"), 1980:13-1980:25
ID("ondispose"), 1980:26-1980:35
SEMI, 1980:35-1980:36
RBRACE, 1981:1-1981:2
SEMI, 1981:2-1981:3
LBRACKET, 1983:1-1983:2
ID("Exposed"), 1983:2-1983:9
EQUAL, 1983:9-1983:10
ID("Window"), 1983:10-1983:16
RBRACKET, 1983:16-1983:17
INTERFACE, 1984:1-1984:10
ID("NavigationTransition"), 1984:11-1984:31
LBRACE, 1984:32-1984:33
READONLY, 1985:3-1985:11
ATTRIBUTE, 1985:12-1985:21
ID("NavigationType"), 1985:22-1985:36
ID("navigationType"), 1985:37-1985:51
SEMI, 1985:51-1985:52
READONLY, 1986:3-1986:11
ATTRIBUTE, 1986:12-1986:21
ID("NavigationHistoryEntry"), 1986:22-1986:44
ID("from"), 1986:45-1986:49
SEMI, 1986:49-1986:50
READONLY, 1987:3-1987:11
ATTRIBUTE, 1987:12-1987:21
PROMISE, 1987:22-1987:29
LT, 1987:29-1987:30
UNDEFINED, 1987:30-1987:39
GT, 1987:39-1987:40
ID("committed"), 1987:41-1987:50
SEMI, 1987:50-1987:51
READONLY, 1988:3-1988:11
ATTRIBUTE, 1988:12-1988:21
PROMISE, 1988:22-1988:29
LT, 1988:29-1988:30
UNDEFINED, 1988:30-1988:39
GT, 1988:39-1988:40
ID("finished"), 1988:41-1988:49
SEMI, 1988:49-1988:50
RBRACE, 1989:1-1989:2
SEMI, 1989:2-1989:3
LBRACKET, 1991:1-1991:2
ID("Exposed"), 1991:2-1991:9
EQUAL, 1991:9-1991:10
ID("Window"), 1991:10-1991:16
RBRACKET, 1991:16-1991:17
INTERFACE, 1992:1-1992:10
ID("NavigationActivation"), 1992:11-1992:31
LBRACE, 1992:32-1992:33
READONLY, 1993:3-1993:11
ATTRIBUTE, 1993:12-1993:21
ID("NavigationHistoryEntry"), 1993:22-1993:44
QUESTION, 1993:44-1993:45
ID("from"), 1993:46-1993:50
SEMI, 1993:50-1993:51
READONLY, 1994:3-1994:11
ATTRIBUTE, 1994:12-1994:21
ID("NavigationHistoryEntry"), 1994:22-1994:44
ID("entry"), 1994:45-1994:50
SEMI, 1994:50-1994:51
READONLY, 1995:3-1995:11
ATTRIBUTE, 1995:12-1995:21
ID("NavigationType"), 1995:22-1995:36
ID("navigationType"), 1995:37-1995:51
SEMI, 1995:51-1995:52
RBRACE, 1996:1-1996:2
SEMI, 1996:2-1996:3
LBRACKET, 1998:1-1998:2
ID("Exposed"), 1998:2-1998:9
EQUAL, 1998:9-1998:10
ID("Window"), 1998:10-1998:16
RBRACKET, 1998:16-1998:17
INTERFACE, 1999:1-1999:10
ID("NavigateEvent"), 1999:11-1999:24
COLON, 1999:25-1999:26
ID("Event"), 1999:27-1999:32
LBRACE, 1999:33-1999:34
CONSTRUCTOR, 2000:3-2000:14
LPAREN, 2000:14-2000:15
DOMSTRING, 2000:15-2000:24
ID("type"), 2000:25-2000:29
COMMA, 2000:29-2000:30
ID("NavigateEventInit"), 2000:31-2000:48
ID("eventInitDict"), 2000:49-2000:62
RPAREN, 2000:62-2000:63
SEMI, 2000:63-2000:64
READONLY, 2002:3-2002:11
ATTRIBUTE, 2002:12-2002:21
ID("NavigationType"), 2002:22-2002:36
ID("navigationType"), 2002:37-2002:51
SEMI, 2002:51-2002:52
READONLY, 2003:3-2003:11
ATTRIBUTE, 2003:12-2003:21
ID("NavigationDestination"), 2003:22-2003:43
ID("destination"), 2003:44-2003:55
SEMI, 2003:55-2003:56
READONLY, 2004:3-2004:11
ATTRIBUTE, 2004:12-2004:21
BOOLEAN, 2004:22-2004:29
ID("canIntercept"), 2004:30-2004:42
SEMI, 2004:42-2004:43
READONLY, 2005:3-2005:11
ATTRIBUTE, 2005:12-2005:21
BOOLEAN, 2005:22-2005:29
ID("userInitiated"), 2005:30-2005:43
SEMI, 2005:43-2005:44
READONLY, 2006:3-2006:11
ATTRIBUTE, 2006:12-2006:21
BOOLEAN, 2006:22-2006:29
ID("hashChange"), 2006:30-2006:40
SEMI, 2006:40-2006:41
READONLY, 2007:3-2007:11
ATTRIBUTE, 2007:12-2007:21
ID("AbortSignal"), 2007:22-2007:33
ID("signal"), 2007:34-2007:40
SEMI, 2007:40-2007:41
READONLY, 2008:3-2008:11
ATTRIBUTE, 2008:12-2008:21
ID("FormData"), 2008:22-2008:30
QUESTION, 2008:30-2008:31
ID("formData"), 2008:32-2008:40
SEMI, 2008:40-2008:41
READONLY, 2009:3-2009:11
ATTRIBUTE, 2009:12-2009:21
DOMSTRING, 2009:22-2009:31
QUESTION, 2009:31-2009:32
ID("downloadRequest"), 2009:33-2009:48
SEMI, 2009:48-2009:49
READONLY, 2010:3-2010:11
ATTRIBUTE, 2010:12-2010:21
ANY, 2010:22-2010:25
ID("info"), 2010:26-2010:30
SEMI, 2010:30-2010:31
READONLY, 2011:3-2011:11
ATTRIBUTE, 2011:12-2011:21
BOOLEAN, 2011:22-2011:29
ID("hasUAVisualTransition"), 2011:30-2011:51
SEMI, 2011:51-2011:52
READONLY, 2012:3-2012:11
ATTRIBUTE, 2012:12-2012:21
ID("Element"), 2012:22-2012:29
QUESTION, 2012:29-2012:30
ID("sourceElement"), 2012:31-2012:44
SEMI, 2012:44-2012:45
UNDEFINED, 2014:3-2014:12
ID("intercept"), 2014:13-2014:22
LPAREN, 2014:22-2014:23
OPTIONAL, 2014:23-2014:31
ID("NavigationInterceptOptions"), 2014:32-2014:58
ID("options"), 2014:59-2014:66
EQUAL, 2014:67-2014:68
LBRACE, 2014:69-2014:70
RBRACE, 2014:70-2014:71
RPAREN, 2014:71-2014:72
SEMI, 2014:72-2014:73
UNDEFINED, 2015:3-2015:12
ID("scroll"), 2015:13-2015:19
LPAREN, 2015:19-2015:20
RPAREN, 2015:20-2015:21
SEMI, 2015:21-2015:22
RBRACE, 2016:1-2016:2
SEMI, 2016:2-2016:3
DICTIONARY, 2018:1-2018:11
ID("NavigateEventInit"), 2018:12-2018:29
COLON, 2018:30-2018:31
ID("EventInit"), 2018:32-2018:41
LBRACE, 2018:42-2018:43
ID("NavigationType"), 2019:3-2019:17
ID("navigationType"), 2019:18-2019:32
EQUAL, 2019:33-2019:34
STRING("\"push\""), 2019:35-2019:41
SEMI, 2019:41-2019:42
REQUIRED, 2020:3-2020:11
ID("NavigationDestination"), 2020:12-2020:33
ID("destination"), 2020:34-2020:45
SEMI, 2020:45-2020:46
BOOLEAN, 2021:3-2021:10
ID("canIntercept"), 2021:11-2021:23
EQUAL, 2021:24-2021:25
FALSE, 2021:26-2021:31
SEMI, 2021:31-2021:32
BOOLEAN, 2022:3-2022:10
ID("userInitiated"), 2022:11-2022:24
EQUAL, 2022:25-2022:26
FALSE, 2022:27-2022:32
SEMI, 2022:32-2022:33
BOOLEAN, 2023:3-2023:10
ID("hashChange"), 2023:11-2023:21
EQUAL, 2023:22-2023:23
FALSE, 2023:24-2023:29
SEMI, 2023:29-2023:30
REQUIRED, 2024:3-2024:11
ID("AbortSignal"), 2024:12-2024:23
ID("signal"), 2024:24-2024:30
SEMI, 2024:30-2024:31
ID("FormData"), 2025:3-2025:11
QUESTION, 2025:11-2025:12
ID("formData"), 2025:13-2025:21
EQUAL, 2025:22-2025:23
NULL, 2025:24-2025:28
SEMI, 2025:28-2025:29
DOMSTRING, 2026:3-2026:12
QUESTION, 2026:12-2026:13
ID("downloadRequest"), 2026:14-2026:29
EQUAL, 2026:30-2026:31
NULL, 2026:32-2026:36
SEMI, 2026:36-2026:37
ANY, 2027:3-2027:6
ID("info"), 2027:7-2027:11
SEMI, 2027:11-2027:12
BOOLEAN, 2028:3-2028:10
ID("hasUAVisualTransition"), 2028:11-2028:32
EQUAL, 2028:33-2028:34
FALSE, 2028:35-2028:40
SEMI, 2028:40-2028:41
ID("Element"), 2029:3-2029:10
QUESTION, 2029:10-2029:11
ID("sourceElement"), 2029:12-2029:25
EQUAL, 2029:26-2029:27
NULL, 2029:28-2029:32
SEMI, 2029:32-2029:33
RBRACE, 2030:1-2030:2
SEMI, 2030:2-2030:3
DICTIONARY, 2032:1-2032:11
ID("NavigationInterceptOptions"), 2032:12-2032:38
LBRACE, 2032:39-2032:40
ID("NavigationPrecommitHandler"), 2033:3-2033:29
ID("precommitHandler"), 2033:30-2033:46
SEMI, 2033:46-2033:47
ID("NavigationInterceptHandler"), 2034:3-2034:29
ID("handler"), 2034:30-2034:37
SEMI, 2034:37-2034:38
ID("NavigationFocusReset"), 2035:3-2035:23
ID("focusReset"), 2035:24-2035:34
SEMI, 2035:34-2035:35
ID("NavigationScrollBehavior"), 2036:3-2036:27
ID("scroll"), 2036:28-2036:34
SEMI, 2036:34-2036:35
RBRACE, 2037:1-2037:2
SEMI, 2037:2-2037:3
ENUM, 2039:1-2039:5
ID("NavigationFocusReset"), 2039:6-2039:26
LBRACE, 2039:27-2039:28
STRING("\"after-transition\""), 2040:3-2040:21
COMMA, 2040:21-2040:22
STRING("\"manual\""), 2041:3-2041:11
RBRACE, 2042:1-2042:2
SEMI, 2042:2-2042:3
ENUM, 2044:1-2044:5
ID("NavigationScrollBehavior"), 2044:6-2044:30
LBRACE, 2044:31-2044:32
STRING("\"after-transition\""), 2045:3-2045:21
COMMA, 2045:21-2045:22
STRING("\"manual\""), 2046:3-2046:11
RBRACE, 2047:1-2047:2
SEMI, 2047:2-2047:3
CALLBACK, 2049:1-2049:9
ID("NavigationInterceptHandler"), 2049:10-2049:36
EQUAL, 2049:37-2049:38
PROMISE, 2049:39-2049:46
LT, 2049:46-2049:47
UNDEFINED, 2049:47-2049:56
GT, 2049:56-2049:57
LPAREN, 2049:58-2049:59
RPAREN, 2049:59-2049:60
SEMI, 2049:60-2049:61
LBRACKET, 2051:1-2051:2
ID("Exposed"), 2051:2-2051:9
EQUAL, 2051:9-2051:10
ID("Window"), 2051:10-2051:16
RBRACKET, 2051:16-2051:17
INTERFACE, 2052:1-2052:10
ID("NavigationPrecommitController"), 2052:11-2052:40
LBRACE, 2052:41-2052:42
UNDEFINED, 2053:3-2053:12
ID("redirect"), 2053:13-2053:21
LPAREN, 2053:21-2053:22
USVSTRING, 2053:22-2053:31
ID("url"), 2053:32-2053:35
COMMA, 2053:35-2053:36
OPTIONAL, 2053:37-2053:45
ID("NavigationNavigateOptions"), 2053:46-2053:71
ID("options"), 2053:72-2053:79
EQUAL, 2053:80-2053:81
LBRACE, 2053:82-2053:83
RBRACE, 2053:83-2053:84
RPAREN, 2053:84-2053:85
SEMI, 2053:85-2053:86
RBRACE, 2054:1-2054:2
SEMI, 2054:2-2054:3
CALLBACK, 2056:1-2056:9
ID("NavigationPrecommitHandler"), 2056:10-2056:36
EQUAL, 2056:37-2056:38
PROMISE, 2056:39-2056:46
LT, 2056:46-2056:47
UNDEFINED, 2056:47-2056:56
GT, 2056:56-2056:57
LPAREN, 2056:58-2056:59
ID("NavigationPrecommitController"), 2056:59-2056:88
ID("controller"), 2056:89-2056:99
RPAREN, 2056:99-2056:100
SEMI, 2056:100-2056:101
LBRACKET, 2058:1-2058:2
ID("Exposed"), 2058:2-2058:9
EQUAL, 2058:9-2058:10
ID("Window"), 2058:10-2058:16
RBRACKET, 2058:16-2058:17
INTERFACE, 2059:1-2059:10
ID("NavigationDestination"), 2059:11-2059:32
LBRACE, 2059:33-2059:34
READONLY, 2060:3-2060:11
ATTRIBUTE, 2060:12-2060:21
USVSTRING, 2060:22-2060:31
ID("url"), 2060:32-2060:35
SEMI, 2060:35-2060:36
READONLY, 2061:3-2061:11
ATTRIBUTE, 2061:12-2061:21
DOMSTRING, 2061:22-2061:31
ID("key"), 2061:32-2061:35
SEMI, 2061:35-2061:36
READONLY, 2062:3-2062:11
ATTRIBUTE, 2062:12-2062:21
DOMSTRING, 2062:22-2062:31
ID("id"), 2062:32-2062:34
SEMI, 2062:34-2062:35
READONLY, 2063:3-2063:11
ATTRIBUTE, 2063:12-2063:21
LONG, 2063:22-2063:26
LONG, 2063:27-2063:31
ID("index"), 2063:32-2063:37
SEMI, 2063:37-2063:38
READONLY, 2064:3-2064:11
ATTRIBUTE, 2064:12-2064:21
BOOLEAN, 2064:22-2064:29
ID("sameDocument"), 2064:30-2064:42
SEMI, 2064:42-2064:43
ANY, 2066:3-2066:6
ID("getState"), 2066:7-2066:15
LPAREN, 2066:15-2066:16
RPAREN, 2066:16-2066:17
SEMI, 2066:17-2066:18
RBRACE, 2067:1-2067:2
SEMI, 2067:2-2067:3
LBRACKET, 2069:1-2069:2
ID("Exposed"), 2069:2-2069:9
EQUAL, 2069:9-2069:10
ID("Window"), 2069:10-2069:16
RBRACKET, 2069:16-2069:17
INTERFACE, 2070:1-2070:10
ID("NavigationCurrentEntryChangeEvent"), 2070:11-2070:44
COLON, 2070:45-2070:46
ID("Event"), 2070:47-2070:52
LBRACE, 2070:53-2070:54
CONSTRUCTOR, 2071:3-2071:14
LPAREN, 2071:14-2071:15
DOMSTRING, 2071:15-2071:24
ID("type"), 2071:25-2071:29
COMMA, 2071:29-2071:30
ID("NavigationCurrentEntryChangeEventInit"), 2071:31-2071:68
ID("eventInitDict"), 2071:69-2071:82
RPAREN, 2071:82-2071:83
SEMI, 2071:83-2071:84
READONLY, 2073:3-2073:11
ATTRIBUTE, 2073:12-2073:21
ID("NavigationType"), 2073:22-2073:36
QUESTION, 2073:36-2073:37
ID("navigationType"), 2073:38-2073:52
SEMI, 2073:52-2073:53
READONLY, 2074:3-2074:11
ATTRIBUTE, 2074:12-2074:21
ID("NavigationHistoryEntry"), 2074:22-2074:44
ID("from"), 2074:45-2074:49
SEMI, 2074:49-2074:50
RBRACE, 2075:1-2075:2
SEMI, 2075:2-2075:3
DICTIONARY, 2077:1-2077:11
ID("NavigationCurrentEntryChangeEventInit"), 2077:12-2077:49
COLON, 2077:50-2077:51
ID("EventInit"), 2077:52-2077:61
LBRACE, 2077:62-2077:63
ID("NavigationType"), 2078:3-2078:17
QUESTION, 2078:17-2078:18
ID("navigationType"), 2078:19-2078:33
EQUAL, 2078:34-2078:35
NULL, 2078:36-2078:40
SEMI, 2078:40-2078:41
REQUIRED, 2079:3-2079:11
ID("NavigationHistoryEntry"), 2079:12-2079:34
ID("from"), 2079:35-2079:39
SEMI, 2079:39-2079:40
RBRACE, 2080:1-2080:2
SEMI, 2080:2-2080:3
LBRACKET, 2082:1-2082:2
ID("Exposed"), 2082:2-2082:9
EQUAL, 2082:9-2082:10
ID("Window"), 2082:10-2082:16
RBRACKET, 2082:16-2082:17
INTERFACE, 2083:1-2083:10
ID("PopStateEvent"), 2083:11-2083:24
COLON, 2083:25-2083:26
ID("Event"), 2083:27-2083:32
LBRACE, 2083:33-2083:34
CONSTRUCTOR, 2084:3-2084:14
LPAREN, 2084:14-2084:15
DOMSTRING, 2084:15-2084:24
ID("type"), 2084:25-2084:29
COMMA, 2084:29-2084:30
OPTIONAL, 2084:31-2084:39
ID("PopStateEventInit"), 2084:40-2084:57
ID("eventInitDict"), 2084:58-2084:71
EQUAL, 2084:72-2084:73
LBRACE, 2084:74-2084:75
RBRACE, 2084:75-2084:76
RPAREN, 2084:76-2084:77
SEMI, 2084:77-2084:78
READONLY, 2086:3-2086:11
ATTRIBUTE, 2086:12-2086:21
ANY, 2086:22-2086:25
ID("state"), 2086:26-2086:31
SEMI, 2086:31-2086:32
READONLY, 2087:3-2087:11
ATTRIBUTE, 2087:12-2087:21
BOOLEAN, 2087:22-2087:29
ID("hasUAVisualTransition"), 2087:30-2087:51
SEMI, 2087:51-2087:52
RBRACE, 2088:1-2088:2
SEMI, 2088:2-2088:3
DICTIONARY, 2090:1-2090:11
ID("PopStateEventInit"), 2090:12-2090:29
COLON, 2090:30-2090:31
ID("EventInit"), 2090:32-2090:41
LBRACE, 2090:42-2090:43
ANY, 2091:3-2091:6
ID("state"), 2091:7-2091:12
EQUAL, 2091:13-2091:14
NULL, 2091:15-2091:19
SEMI, 2091:19-2091:20
BOOLEAN, 2092:3-2092:10
ID("hasUAVisualTransition"), 2092:11-2092:32
EQUAL, 2092:33-2092:34
FALSE, 2092:35-2092:40
SEMI, 2092:40-2092:41
RBRACE, 2093:1-2093:2
SEMI, 2093:2-2093:3
LBRACKET, 2095:1-2095:2
ID("Exposed"), 2095:2-2095:9
EQUAL, 2095:9-2095:10
ID("Window"), 2095:10-2095:16
RBRACKET, 2095:16-2095:17
INTERFACE, 2096:1-2096:10
ID("HashChangeEvent"), 2096:11-2096:26
COLON, 2096:27-2096:28
ID("Event"), 2096:29-2096:34
LBRACE, 2096:35-2096:36
CONSTRUCTOR, 2097:3-2097:14
LPAREN, 2097:14-2097:15
DOMSTRING, 2097:15-2097:24
ID("type"), 2097:25-2097:29
COMMA, 2097:29-2097:30
OPTIONAL, 2097:31-2097:39
ID("HashChangeEventInit"), 2097:40-2097:59
ID("eventInitDict"), 2097:60-2097:73
EQUAL, 2097:74-2097:75
LBRACE, 2097:76-2097:77
RBRACE, 2097:77-2097:78
RPAREN, 2097:78-2097:79
SEMI, 2097:79-2097:80
READONLY, 2099:3-2099:11
ATTRIBUTE, 2099:12-2099:21
USVSTRING, 2099:22-2099:31
ID("oldURL"), 2099:32-2099:38
SEMI, 2099:38-2099:39
READONLY, 2100:3-2100:11
ATTRIBUTE, 2100:12-2100:21
USVSTRING, 2100:22-2100:31
ID("newURL"), 2100:32-2100:38
SEMI, 2100:38-2100:39
RBRACE, 2101:1-2101:2
SEMI, 2101:2-2101:3
DICTIONARY, 2103:1-2103:11
ID("HashChangeEventInit"), 2103:12-2103:31
COLON, 2103:32-2103:33
ID("EventInit"), 2103:34-2103:43
LBRACE, 2103:44-2103:45
USVSTRING, 2104:3-2104:12
ID("oldURL"), 2104:13-2104:19
EQUAL, 2104:20-2104:21
STRING("\"\""), 2104:22-2104:24
SEMI, 2104:24-2104:25
USVSTRING, 2105:3-2105:12
ID("newURL"), 2105:13-2105:19
EQUAL, 2105:20-2105:21
STRING("\"\""), 2105:22-2105:24
SEMI, 2105:24-2105:25
RBRACE, 2106:1-2106:2
SEMI, 2106:2-2106:3
LBRACKET, 2108:1-2108:2
ID("Exposed"), 2108:2-2108:9
EQUAL, 2108:9-2108:10
ID("Window"), 2108:10-2108:16
RBRACKET, 2108:16-2108:17
INTERFACE, 2109:1-2109:10
ID("PageSwapEvent"), 2109:11-2109:24
COLON, 2109:25-2109:26
ID("Event"), 2109:27-2109:32
LBRACE, 2109:33-2109:34
CONSTRUCTOR, 2110:3-2110:14
LPAREN, 2110:14-2110:15
DOMSTRING, 2110:15-2110:24
ID("type"), 2110:25-2110:29
COMMA, 2110:29-2110:30
OPTIONAL, 2110:31-2110:39
ID("PageSwapEventInit"), 2110:40-2110:57
ID("eventInitDict"), 2110:58-2110:71
EQUAL, 2110:72-2110:73
LBRACE, 2110:74-2110:75
RBRACE, 2110:75-2110:76
RPAREN, 2110:76-2110:77
SEMI, 2110:77-2110:78
READONLY, 2111:3-2111:11
ATTRIBUTE, 2111:12-2111:21
ID("NavigationActivation"), 2111:22-2111:42
QUESTION, 2111:42-2111:43
ID("activation"), 2111:44-2111:54
SEMI, 2111:54-2111:55
READONLY, 2112:3-2112:11
ATTRIBUTE, 2112:12-2112:21
ID("ViewTransition"), 2112:22-2112:36
QUESTION, 2112:36-2112:37
ID("viewTransition"), 2112:38-2112:52
SEMI, 2112:52-2112:53
RBRACE, 2113:1-2113:2
SEMI, 2113:2-2113:3
DICTIONARY, 2115:1-2115:11
ID("PageSwapEventInit"), 2115:12-2115:29
COLON, 2115:30-2115:31
ID("EventInit"), 2115:32-2115:41
LBRACE, 2115:42-2115:43
ID("NavigationActivation"), 2116:3-2116:23
QUESTION, 2116:23-2116:24
ID("activation"), 2116:25-2116:35
EQUAL, 2116:36-2116:37
NULL, 2116:38-2116:42
SEMI, 2116:42-2116:43
ID("ViewTransition"), 2117:3-2117:17
QUESTION, 2117:17-2117:18
ID("viewTransition"), 2117:19-2117:33
EQUAL, 2117:34-2117:35
NULL, 2117:36-2117:40
SEMI, 2117:40-2117:41
RBRACE, 2118:1-2118:2
SEMI, 2118:2-2118:3
LBRACKET, 2120:1-2120:2
ID("Exposed"), 2120:2-2120:9
EQUAL, 2120:9-2120:10
ID("Window"), 2120:10-2120:16
RBRACKET, 2120:16-2120:17
INTERFACE, 2121:1-2121:10
ID("PageRevealEvent"), 2121:11-2121:26
COLON, 2121:27-2121:28
ID("Event"), 2121:29-2121:34
LBRACE, 2121:35-2121:36
CONSTRUCTOR, 2122:3-2122:14
LPAREN, 2122:14-2122:15
DOMSTRING, 2122:15-2122:24
ID("type"), 2122:25-2122:29
COMMA, 2122:29-2122:30
OPTIONAL, 2122:31-2122:39
ID("PageRevealEventInit"), 2122:40-2122:59
ID("eventInitDict"), 2122:60-2122:73
EQUAL, 2122:74-2122:75
LBRACE, 2122:76-2122:77
RBRACE, 2122:77-2122:78
RPAREN, 2122:78-2122:79
SEMI, 2122:79-2122:80
READONLY, 2123:3-2123:11
ATTRIBUTE, 2123:12-2123:21
ID("ViewTransition"), 2123:22-2123:36
QUESTION, 2123:36-2123:37
ID("viewTransition"), 2123:38-2123:52
SEMI, 2123:52-2123:53
RBRACE, 2124:1-2124:2
SEMI, 2124:2-2124:3
DICTIONARY, 2126:1-2126:11
ID("PageRevealEventInit"), 2126:12-2126:31
COLON, 2126:32-2126:33
ID("EventInit"), 2126:34-2126:43
LBRACE, 2126:44-2126:45
ID("ViewTransition"), 2127:3-2127:17
QUESTION, 2127:17-2127:18
ID("viewTransition"), 2127:19-2127:33
EQUAL, 2127:34-2127:35
NULL, 2127:36-2127:40
SEMI, 2127:40-2127:41
RBRACE, 2128:1-2128:2
SEMI, 2128:2-2128:3
LBRACKET, 2130:1-2130:2
ID("Exposed"), 2130:2-2130:9
EQUAL, 2130:9-2130:10
ID("Window"), 2130:10-2130:16
RBRACKET, 2130:16-2130:17
INTERFACE, 2131:1-2131:10
ID("PageTransitionEvent"), 2131:11-2131:30
COLON, 2131:31-2131:32
ID("Event"), 2131:33-2131:38
LBRACE, 2131:39-2131:40
CONSTRUCTOR, 2132:3-2132:14
LPAREN, 2132:14-2132:15
DOMSTRING, 2132:15-2132:24
ID("type"), 2132:25-2132:29
COMMA, 2132:29-2132:30
OPTIONAL, 2132:31-2132:39
ID("PageTransitionEventInit"), 2132:40-2132:63
ID("eventInitDict"), 2132:64-2132:77
EQUAL, 2132:78-2132:79
LBRACE, 2132:80-2132:81
RBRACE, 2132:81-2132:82
RPAREN, 2132:82-2132:83
SEMI, 2132:83-2132:84
READONLY, 2134:3-2134:11
ATTRIBUTE, 2134:12-2134:21
BOOLEAN, 2134:22-2134:29
ID("persisted"), 2134:30-2134:39
SEMI, 2134:39-2134:40
RBRACE, 2135:1-2135:2
SEMI, 2135:2-2135:3
DICTIONARY, 2137:1-2137:11
ID("PageTransitionEventInit"), 2137:12-2137:35
COLON, 2137:36-2137:37
ID("EventInit"), 2137:38-2137:47
LBRACE, 2137:48-2137:49
BOOLEAN, 2138:3-2138:10
ID("persisted"), 2138:11-2138:20
EQUAL, 2138:21-2138:22
FALSE, 2138:23-2138:28
SEMI, 2138:28-2138:29
RBRACE, 2139:1-2139:2
SEMI, 2139:2-2139:3
LBRACKET, 2141:1-2141:2
ID("Exposed"), 2141:2-2141:9
EQUAL, 2141:9-2141:10
ID("Window"), 2141:10-2141:16
RBRACKET, 2141:16-2141:17
INTERFACE, 2142:1-2142:10
ID("BeforeUnloadEvent"), 2142:11-2142:28
COLON, 2142:29-2142:30
ID("Event"), 2142:31-2142:36
LBRACE, 2142:37-2142:38
ATTRIBUTE, 2143:3-2143:12
DOMSTRING, 2143:13-2143:22
ID("returnValue"), 2143:23-2143:34
SEMI, 2143:34-2143:35
RBRACE, 2144:1-2144:2
SEMI, 2144:2-2144:3
LBRACKET, 2146:1-2146:2
ID("Exposed"), 2146:2-2146:9
EQUAL, 2146:9-2146:10
ID("Window"), 2146:10-2146:16
RBRACKET, 2146:16-2146:17
INTERFACE, 2147:1-2147:10
ID("NotRestoredReasonDetails"), 2147:11-2147:35
LBRACE, 2147:36-2147:37
READONLY, 2148:3-2148:11
ATTRIBUTE, 2148:12-2148:21
DOMSTRING, 2148:22-2148:31
ID("reason"), 2148:32-2148:38
SEMI, 2148:38-2148:39
LBRACKET, 2149:3-2149:4
ID("Default"), 2149:4-2149:11
RBRACKET, 2149:11-2149:12
OBJECT, 2149:13-2149:19
ID("toJSON"), 2149:20-2149:26
LPAREN, 2149:26-2149:27
RPAREN, 2149:27-2149:28
SEMI, 2149:28-2149:29
RBRACE, 2150:1-2150:2
SEMI, 2150:2-2150:3
LBRACKET, 2152:1-2152:2
ID("Exposed"), 2152:2-2152:9
EQUAL, 2152:9-2152:10
ID("Window"), 2152:10-2152:16
RBRACKET, 2152:16-2152:17
INTERFACE, 2153:1-2153:10
ID("NotRestoredReasons"), 2153:11-2153:29
LBRACE, 2153:30-2153:31
READONLY, 2154:3-2154:11
ATTRIBUTE, 2154:12-2154:21
USVSTRING, 2154:22-2154:31
QUESTION, 2154:31-2154:32
ID("src"), 2154:33-2154:36
SEMI, 2154:36-2154:37
READONLY, 2155:3-2155:11
ATTRIBUTE, 2155:12-2155:21
DOMSTRING, 2155:22-2155:31
QUESTION, 2155:31-2155:32
ID("id"), 2155:33-2155:35
SEMI, 2155:35-2155:36
READONLY, 2156:3-2156:11
ATTRIBUTE, 2156:12-2156:21
DOMSTRING, 2156:22-2156:31
QUESTION, 2156:31-2156:32
ID("name"), 2156:33-2156:37
SEMI, 2156:37-2156:38
READONLY, 2157:3-2157:11
ATTRIBUTE, 2157:12-2157:21
USVSTRING, 2157:22-2157:31
QUESTION, 2157:31-2157:32
ID("url"), 2157:33-2157:36
SEMI, 2157:36-2157:37
READONLY, 2158:3-2158:11
ATTRIBUTE, 2158:12-2158:21
FROZENARRAY, 2158:22-2158:33
LT, 2158:33-2158:34
ID("NotRestoredReasonDetails"), 2158:34-2158:58
GT, 2158:58-2158:59
QUESTION, 2158:59-2158:60
ID("reasons"), 2158:61-2158:68
SEMI, 2158:68-2158:69
READONLY, 2159:3-2159:11
ATTRIBUTE, 2159:12-2159:21
FROZENARRAY, 2159:22-2159:33
LT, 2159:33-2159:34
ID("NotRestoredReasons"), 2159:34-2159:52
GT, 2159:52-2159:53
QUESTION, 2159:53-2159:54
ID("children"), 2159:55-2159:63
SEMI, 2159:63-2159:64
LBRACKET, 2160:3-2160:4
ID("Default"), 2160:4-2160:11
RBRACKET, 2160:11-2160:12
OBJECT, 2160:13-2160:19
ID("toJSON"), 2160:20-2160:26
LPAREN, 2160:26-2160:27
RPAREN, 2160:27-2160:28
SEMI, 2160:28-2160:29
RBRACE, 2161:1-2161:2
SEMI, 2161:2-2161:3
LBRACKET, 2163:1-2163:2
ID("Exposed"), 2163:2-2163:9
EQUAL, 2163:9-2163:10
STAR, 2163:10-2163:11
RBRACKET, 2163:11-2163:12
INTERFACE, 2164:1-2164:10
ID("ErrorEvent"), 2164:11-2164:21
COLON, 2164:22-2164:23
ID("Event"), 2164:24-2164:29
LBRACE, 2164:30-2164:31
CONSTRUCTOR, 2165:3-2165:14
LPAREN, 2165:14-2165:15
DOMSTRING, 2165:15-2165:24
ID("type"), 2165:25-2165:29
COMMA, 2165:29-2165:30
OPTIONAL, 2165:31-2165:39
ID("ErrorEventInit"), 2165:40-2165:54
ID("eventInitDict"), 2165:55-2165:68
EQUAL, 2165:69-2165:70
LBRACE, 2165:71-2165:72
RBRACE, 2165:72-2165:73
RPAREN, 2165:73-2165:74
SEMI, 2165:74-2165:75
READONLY, 2167:3-2167:11
ATTRIBUTE, 2167:12-2167:21
DOMSTRING, 2167:22-2167:31
ID("message"), 2167:32-2167:39
SEMI, 2167:39-2167:40
READONLY, 2168:3-2168:11
ATTRIBUTE, 2168:12-2168:21
USVSTRING, 2168:22-2168:31
ID("filename"), 2168:32-2168:40
SEMI, 2168:40-2168:41
READONLY, 2169:3-2169:11
ATTRIBUTE, 2169:12-2169:21
UNSIGNED, 2169:22-2169:30
LONG, 2169:31-2169:35
ID("lineno"), 2169:36-2169:42
SEMI, 2169:42-2169:43
READONLY, 2170:3-2170:11
ATTRIBUTE, 2170:12-2170:21
UNSIGNED, 2170:22-2170:30
LONG, 2170:31-2170:35
ID("colno"), 2170:36-2170:41
SEMI, 2170:41-2170:42
READONLY, 2171:3-2171:11
ATTRIBUTE, 2171:12-2171:21
ANY, 2171:22-2171:25
ID("error"), 2171:26-2171:31
SEMI, 2171:31-2171:32
RBRACE, 2172:1-2172:2
SEMI, 2172:2-2172:3
DICTIONARY, 2174:1-2174:11
ID("ErrorEventInit"), 2174:12-2174:26
COLON, 2174:27-2174:28
ID("EventInit"), 2174:29-2174:38
LBRACE, 2174:39-2174:40
DOMSTRING, 2175:3-2175:12
ID("message"), 2175:13-2175:20
EQUAL, 2175:21-2175:22
STRING("\"\""), 2175:23-2175:25
SEMI, 2175:25-2175:26
USVSTRING, 2176:3-2176:12
ID("filename"), 2176:13-2176:21
EQUAL, 2176:22-2176:23
STRING("\"\""), 2176:24-2176:26
SEMI, 2176:26-2176:27
UNSIGNED, 2177:3-2177:11
LONG, 2177:12-2177:16
ID("lineno"), 2177:17-2177:23
EQUAL, 2177:24-2177:25
INT("0"), 2177:26-2177:27
SEMI, 2177:27-2177:28
UNSIGNED, 2178:3-2178:11
LONG, 2178:12-2178:16
ID("colno"), 2178:17-2178:22
EQUAL, 2178:23-2178:24
INT("0"), 2178:25-2178:26
SEMI, 2178:26-2178:27
ANY, 2179:3-2179:6
ID("error"), 2179:7-2179:12
SEMI, 2179:12-2179:13
RBRACE, 2180:1-2180:2
SEMI, 2180:2-2180:3
LBRACKET, 2182:1-2182:2
ID("Exposed"), 2182:2-2182:9
EQUAL, 2182:9-2182:10
STAR, 2182:10-2182:11
RBRACKET, 2182:11-2182:12
INTERFACE, 2183:1-2183:10
ID("PromiseRejectionEvent"), 2183:11-2183:32
COLON, 2183:33-2183:34
ID("Event"), 2183:35-2183:40
LBRACE, 2183:41-2183:42
CONSTRUCTOR, 2184:3-2184:14
LPAREN, 2184:14-2184:15
DOMSTRING, 2184:15-2184:24
ID("type"), 2184:25-2184:29
COMMA, 2184:29-2184:30
ID("PromiseRejectionEventInit"), 2184:31-2184:56
ID("eventInitDict"), 2184:57-2184:70
RPAREN, 2184:70-2184:71
SEMI, 2184:71-2184:72
READONLY, 2186:3-2186:11
ATTRIBUTE, 2186:12-2186:21
OBJECT, 2186:22-2186:28
ID("promise"), 2186:29-2186:36
SEMI, 2186:36-2186:37
READONLY, 2187:3-2187:11
ATTRIBUTE, 2187:12-2187:21
ANY, 2187:22-2187:25
ID("reason"), 2187:26-2187:32
SEMI, 2187:32-2187:33
RBRACE, 2188:1-2188:2
SEMI, 2188:2-2188:3
DICTIONARY, 2190:1-2190:11
ID("PromiseRejectionEventInit"), 2190:12-2190:37
COLON, 2190:38-2190:39
ID("EventInit"), 2190:40-2190:49
LBRACE, 2190:50-2190:51
REQUIRED, 2191:3-2191:11
OBJECT, 2191:12-2191:18
ID("promise"), 2191:19-2191:26
SEMI, 2191:26-2191:27
ANY, 2192:3-2192:6
ID("reason"), 2192:7-2192:13
SEMI, 2192:13-2192:14
RBRACE, 2193:1-2193:2
SEMI, 2193:2-2193:3
LBRACKET, 2195:1-2195:2
ID("LegacyTreatNonObjectAsNull"), 2195:2-2195:28
RBRACKET, 2195:28-2195:29
CALLBACK, 2196:1-2196:9
ID("EventHandlerNonNull"), 2196:10-2196:29
EQUAL, 2196:30-2196:31
ANY, 2196:32-2196:35
LPAREN, 2196:36-2196:37
ID("Event"), 2196:37-2196:42
ID("event"), 2196:43-2196:48
RPAREN, 2196:48-2196:49
SEMI, 2196:49-2196:50
TYPEDEF, 2197:1-2197:8
ID("EventHandlerNonNull"), 2197:9-2197:28
QUESTION, 2197:28-2197:29
ID("EventHandler"), 2197:30-2197:42
SEMI, 2197:42-2197:43
LBRACKET, 2199:1-2199:2
ID("LegacyTreatNonObjectAsNull"), 2199:2-2199:28
RBRACKET, 2199:28-2199:29
CALLBACK, 2200:1-2200:9
ID("OnErrorEventHandlerNonNull"), 2200:10-2200:36
EQUAL, 2200:37-2200:38
ANY, 2200:39-2200:42
LPAREN, 2200:43-2200:44
LPAREN, 2200:44-2200:45
ID("Event"), 2200:45-2200:50
OR, 2200:51-2200:53
DOMSTRING, 2200:54-2200:63
RPAREN, 2200:63-2200:64
ID("event"), 2200:65-2200:70
COMMA, 2200:70-2200:71
OPTIONAL, 2200:72-2200:80
DOMSTRING, 2200:81-2200:90
ID("source"), 2200:91-2200:97
COMMA, 2200:97-2200:98
OPTIONAL, 2200:99-2200:107
UNSIGNED, 2200:108-2200:116
LONG, 2200:117-2200:121
ID("lineno"), 2200:122-2200:128
COMMA, 2200:128-2200:129
OPTIONAL, 2200:130-2200:138
UNSIGNED, 2200:139-2200:147
LONG, 2200:148-2200:152
ID("colno"), 2200:153-2200:158
COMMA, 2200:158-2200:159
OPTIONAL, 2200:160-2200:168
ANY, 2200:169-2200:172
ID("error"), 2200:173-2200:178
RPAREN, 2200:178-2200:179
SEMI, 2200:179-2200:180
TYPEDEF, 2201:1-2201:8
ID("OnErrorEventHandlerNonNull"), 2201:9-2201:35
QUESTION, 2201:35-2201:36
ID("OnErrorEventHandler"), 2201:37-2201:56
SEMI, 2201:56-2201:57
LBRACKET, 2203:1-2203:2
ID("LegacyTreatNonObjectAsNull"), 2203:2-2203:28
RBRACKET, 2203:28-2203:29
CALLBACK, 2204:1-2204:9
ID("OnBeforeUnloadEventHandlerNonNull"), 2204:10-2204:43
EQUAL, 2204:44-2204:45
DOMSTRING, 2204:46-2204:55
QUESTION, 2204:55-2204:56
LPAREN, 2204:57-2204:58
ID("Event"), 2204:58-2204:63
ID("event"), 2204:64-2204:69
RPAREN, 2204:69-2204:70
SEMI, 2204:70-2204:71
TYPEDEF, 2205:1-2205:8
ID("OnBeforeUnloadEventHandlerNonNull"), 2205:9-2205:42
QUESTION, 2205:42-2205:43
ID("OnBeforeUnloadEventHandler"), 2205:44-2205:70
SEMI, 2205:70-2205:71
INTERFACE, 2207:1-2207:10
MIXIN, 2207:11-2207:16
ID("GlobalEventHandlers"), 2207:17-2207:36
LBRACE, 2207:37-2207:38
ATTRIBUTE, 2208:3-2208:12
ID("EventHandler"), 2208:13-2208:25
ID("onabort"), 2208:26-2208:33
SEMI, 2208:33-2208:34
ATTRIBUTE, 2209:3-2209:12
ID("EventHandler"), 2209:13-2209:25
ID("onauxclick"), 2209:26-2209:36
SEMI, 2209:36-2209:37
ATTRIBUTE, 2210:3-2210:12
ID("EventHandler"), 2210:13-2210:25
ID("onbeforeinput"), 2210:26-2210:39
SEMI, 2210:39-2210:40
ATTRIBUTE, 2211:3-2211:12
ID("EventHandler"), 2211:13-2211:25
ID("onbeforematch"), 2211:26-2211:39
SEMI, 2211:39-2211:40
ATTRIBUTE, 2212:3-2212:12
ID("EventHandler"), 2212:13-2212:25
ID("onbeforetoggle"), 2212:26-2212:40
SEMI, 2212:40-2212:41
ATTRIBUTE, 2213:3-2213:12
ID("EventHandler"), 2213:13-2213:25
ID("onblur"), 2213:26-2213:32
SEMI, 2213:32-2213:33
ATTRIBUTE, 2214:3-2214:12
ID("EventHandler"), 2214:13-2214:25
ID("oncancel"), 2214:26-2214:34
SEMI, 2214:34-2214:35
ATTRIBUTE, 2215:3-2215:12
ID("EventHandler"), 2215:13-2215:25
ID("oncanplay"), 2215:26-2215:35
SEMI, 2215:35-2215:36
ATTRIBUTE, 2216:3-2216:12
ID("EventHandler"), 2216:13-2216:25
ID("oncanplaythrough"), 2216:26-2216:42
SEMI, 2216:42-2216:43
ATTRIBUTE, 2217:3-2217:12
ID("EventHandler"), 2217:13-2217:25
ID("onchange"), 2217:26-2217:34
SEMI, 2217:34-2217:35
ATTRIBUTE, 2218:3-2218:12
ID("EventHandler"), 2218:13-2218:25
ID("onclick"), 2218:26-2218:33
SEMI, 2218:33-2218:34
ATTRIBUTE, 2219:3-2219:12
ID("EventHandler"), 2219:13-2219:25
ID("onclose"), 2219:26-2219:33
SEMI, 2219:33-2219:34
ATTRIBUTE, 2220:3-2220:12
ID("EventHandler"), 2220:13-2220:25
ID("oncommand"), 2220:26-2220:35
SEMI, 2220:35-2220:36
ATTRIBUTE, 2221:3-2221:12
ID("EventHandler"), 2221:13-2221:25
ID("oncontextlost"), 2221:26-2221:39
SEMI, 2221:39-2221:40
ATTRIBUTE, 2222:3-2222:12
ID("EventHandler"), 2222:13-2222:25
ID("oncontextmenu"), 2222:26-2222:39
SEMI, 2222:39-2222:40
ATTRIBUTE, 2223:3-2223:12
ID("EventHandler"), 2223:13-2223:25
ID("oncontextrestored"), 2223:26-2223:43
SEMI, 2223:43-2223:44
ATTRIBUTE, 2224:3-2224:12
ID("EventHandler"), 2224:13-2224:25
ID("oncopy"), 2224:26-2224:32
SEMI, 2224:32-2224:33
ATTRIBUTE, 2225:3-2225:12
ID("EventHandler"), 2225:13-2225:25
ID("oncuechange"), 2225:26-2225:37
SEMI, 2225:37-2225:38
ATTRIBUTE, 2226:3-2226:12
ID("EventHandler"), 2226:13-2226:25
ID("oncut"), 2226:26-2226:31
SEMI, 2226:31-2226:32
ATTRIBUTE, 2227:3-2227:12
ID("EventHandler"), 2227:13-2227:25
ID("ondblclick"), 2227:26-2227:36
SEMI, 2227:36-2227:37
ATTRIBUTE, 2228:3-2228:12
ID("EventHandler"), 2228:13-2228:25
ID("ondrag"), 2228:26-2228:32
SEMI, 2228:32-2228:33
ATTRIBUTE, 2229:3-2229:12
ID("EventHandler"), 2229:13-2229:25
ID("ondragend"), 2229:26-2229:35
SEMI, 2229:35-2229:36
ATTRIBUTE, 2230:3-2230:12
ID("EventHandler"), 2230:13-2230:25
ID("ondragenter"), 2230:26-2230:37
SEMI, 2230:37-2230:38
ATTRIBUTE, 2231:3-2231:12
ID("EventHandler"), 2231:13-2231:25
ID("ondragleave"), 2231:26-2231:37
SEMI, 2231:37-2231:38
ATTRIBUTE, 2232:3-2232:12
ID("EventHandler"), 2232:13-2232:25
ID("ondragover"), 2232:26-2232:36
SEMI, 2232:36-2232:37
ATTRIBUTE, 2233:3-2233:12
ID("EventHandler"), 2233:13-2233:25
ID("ondragstart"), 2233:26-2233:37
SEMI, 2233:37-2233:38
ATTRIBUTE, 2234:3-2234:12
ID("EventHandler"), 2234:13-2234:25
ID("ondrop"), 2234:26-2234:32
SEMI, 2234:32-2234:33
ATTRIBUTE, 2235:3-2235:12
ID("EventHandler"), 2235:13-2235:25
ID("ondurationchange"), 2235:26-2235:42
SEMI, 2235:42-2235:43
ATTRIBUTE, 2236:3-2236:12
ID("EventHandler"), 2236:13-2236:25
ID("onemptied"), 2236:26-2236:35
SEMI, 2236:35-2236:36
ATTRIBUTE, 2237:3-2237:12
ID("EventHandler"), 2237:13-2237:25
ID("onended"), 2237:26-2237:33
SEMI, 2237:33-2237:34
ATTRIBUTE, 2238:3-2238:12
ID("OnErrorEventHandler"), 2238:13-2238:32
ID("onerror"), 2238:33-2238:40
SEMI, 2238:40-2238:41
ATTRIBUTE, 2239:3-2239:12
ID("EventHandler"), 2239:13-2239:25
ID("onfocus"), 2239:26-2239:33
SEMI, 2239:33-2239:34
ATTRIBUTE, 2240:3-2240:12
ID("EventHandler"), 2240:13-2240:25
ID("onformdata"), 2240:26-2240:36
SEMI, 2240:36-2240:37
ATTRIBUTE, 2241:3-2241:12
ID("EventHandler"), 2241:13-2241:25
ID("oninput"), 2241:26-2241:33
SEMI, 2241:33-2241:34
ATTRIBUTE, 2242:3-2242:12
ID("EventHandler"), 2242:13-2242:25
ID("oninvalid"), 2242:26-2242:35
SEMI, 2242:35-2242:36
ATTRIBUTE, 2243:3-2243:12
ID("EventHandler"), 2243:13-2243:25
ID("onkeydown"), 2243:26-2243:35
SEMI, 2243:35-2243:36
ATTRIBUTE, 2244:3-2244:12
ID("EventHandler"), 2244:13-2244:25
ID("onkeypress"), 2244:26-2244:36
SEMI, 2244:36-2244:37
ATTRIBUTE, 2245:3-2245:12
ID("EventHandler"), 2245:13-2245:25
ID("onkeyup"), 2245:26-2245:33
SEMI, 2245:33-2245:34
ATTRIBUTE, 2246:3-2246:12
ID("EventHandler"), 2246:13-2246:25
ID("onload"), 2246:26-2246:32
SEMI, 2246:32-2246:33
ATTRIBUTE, 2247:3-2247:12
ID("EventHandler"), 2247:13-2247:25
ID("onloadeddata"), 2247:26-2247:38
SEMI, 2247:38-2247:39
ATTRIBUTE, 2248:3-2248:12
ID("EventHandler"), 2248:13-2248:25
ID("onloadedmetadata"), 2248:26-2248:42
SEMI, 2248:42-2248:43
ATTRIBUTE, 2249:3-2249:12
ID("EventHandler"), 2249:13-2249:25
ID("onloadstart"), 2249:26-2249:37
SEMI, 2249:37-2249:38
ATTRIBUTE, 2250:3-2250:12
ID("EventHandler"), 2250:13-2250:25
ID("onmousedown"), 2250:26-2250:37
SEMI, 2250:37-2250:38
LBRACKET, 2251:3-2251:4
ID("LegacyLenientThis"), 2251:4-2251:21
RBRACKET, 2251:21-2251:22
ATTRIBUTE, 2251:23-2251:32
ID("EventHandler"), 2251:33-2251:45
ID("onmouseenter"), 2251:46-2251:58
SEMI, 2251:58-2251:59
LBRACKET, 2252:3-2252:4
ID("LegacyLenientThis"), 2252:4-2252:21
RBRACKET, 2252:21-2252:22
ATTRIBUTE, 2252:23-2252:32
ID("EventHandler"), 2252:33-2252:45
ID("onmouseleave"), 2252:46-2252:58
SEMI, 2252:58-2252:59
ATTRIBUTE, 2253:3-2253:12
ID("EventHandler"), 2253:13-2253:25
ID("onmousemove"), 2253:26-2253:37
SEMI, 2253:37-2253:38
ATTRIBUTE, 2254:3-2254:12
ID("EventHandler"), 2254:13-2254:25
ID("onmouseout"), 2254:26-2254:36
SEMI, 2254:36-2254:37
ATTRIBUTE, 2255:3-2255:12
ID("EventHandler"), 2255:13-2255:25
ID("onmouseover"), 2255:26-2255:37
SEMI, 2255:37-2255:38
ATTRIBUTE, 2256:3-2256:12
ID("EventHandler"), 2256:13-2256:25
ID("onmouseup"), 2256:26-2256:35
SEMI, 2256:35-2256:36
ATTRIBUTE, 2257:3-2257:12
ID("EventHandler"), 2257:13-2257:25
ID("onpaste"), 2257:26-2257:33
SEMI, 2257:33-2257:34
ATTRIBUTE, 2258:3-2258:12
ID("EventHandler"), 2258:13-2258:25
ID("onpause"), 2258:26-2258:33
SEMI, 2258:33-2258:34
ATTRIBUTE, 2259:3-2259:12
ID("EventHandler"), 2259:13-2259:25
ID("onplay"), 2259:26-2259:32
SEMI, 2259:32-2259:33
ATTRIBUTE, 2260:3-2260:12
ID("EventHandler"), 2260:13-2260:25
ID("onplaying"), 2260:26-2260:35
SEMI, 2260:35-2260:36
ATTRIBUTE, 2261:3-2261:12
ID("EventHandler"), 2261:13-2261:25
ID("onprogress"), 2261:26-2261:36
SEMI, 2261:36-2261:37
ATTRIBUTE, 2262:3-2262:12
ID("EventHandler"), 2262:13-2262:25
ID("onratechange"), 2262:26-2262:38
SEMI, 2262:38-2262:39
ATTRIBUTE, 2263:3-2263:12
ID("EventHandler"), 2263:13-2263:25
ID("onreset"), 2263:26-2263:33
SEMI, 2263:33-2263:34
ATTRIBUTE, 2264:3-2264:12
ID("EventHandler"), 2264:13-2264:25
ID("onresize"), 2264:26-2264:34
SEMI, 2264:34-2264:35
ATTRIBUTE, 2265:3-2265:12
ID("EventHandler"), 2265:13-2265:25
ID("onscroll"), 2265:26-2265:34
SEMI, 2265:34-2265:35
ATTRIBUTE, 2266:3-2266:12
ID("EventHandler"), 2266:13-2266:25
ID("onscrollend"), 2266:26-2266:37
SEMI, 2266:37-2266:38
ATTRIBUTE, 2267:3-2267:12
ID("EventHandler"), 2267:13-2267:25
ID("onsecuritypolicyviolation"), 2267:26-2267:51
SEMI, 2267:51-2267:52
ATTRIBUTE, 2268:3-2268:12
ID("EventHandler"), 2268:13-2268:25
ID("onseeked"), 2268:26-2268:34
SEMI, 2268:34-2268:35
ATTRIBUTE, 2269:3-2269:12
ID("EventHandler"), 2269:13-2269:25
ID("onseeking"), 2269:26-2269:35
SEMI, 2269:35-2269:36
ATTRIBUTE, 2270:3-2270:12
ID("EventHandler"), 2270:13-2270:25
ID("onselect"), 2270:26-2270:34
SEMI, 2270:34-2270:35
ATTRIBUTE, 2271:3-2271:12
ID("EventHandler"), 2271:13-2271:25
ID("onslotchange"), 2271:26-2271:38
SEMI, 2271:38-2271:39
ATTRIBUTE, 2272:3-2272:12
ID("EventHandler"), 2272:13-2272:25
ID("onstalled"), 2272:26-2272:35
SEMI, 2272:35-2272:36
ATTRIBUTE, 2273:3-2273:12
ID("EventHandler"), 2273:13-2273:25
ID("onsubmit"), 2273:26-2273:34
SEMI, 2273:34-2273:35
ATTRIBUTE, 2274:3-2274:12
ID("EventHandler"), 2274:13-2274:25
ID("onsuspend"), 2274:26-2274:35
SEMI, 2274:35-2274:36
ATTRIBUTE, 2275:3-2275:12
ID("EventHandler"), 2275:13-2275:25
ID("ontimeupdate"), 2275:26-2275:38
SEMI, 2275:38-2275:39
ATTRIBUTE, 2276:3-2276:12
ID("EventHandler"), 2276:13-2276:25
ID("ontoggle"), 2276:26-2276:34
SEMI, 2276:34-2276:35
ATTRIBUTE, 2277:3-2277:12
ID("EventHandler"), 2277:13-2277:25
ID("onvolumechange"), 2277:26-2277:40
SEMI, 2277:40-2277:41
ATTRIBUTE, 2278:3-2278:12
ID("EventHandler"), 2278:13-2278:25
ID("onwaiting"), 2278:26-2278:35
SEMI, 2278:35-2278:36
ATTRIBUTE, 2279:3-2279:12
ID("EventHandler"), 2279:13-2279:25
ID("onwebkitanimationend"), 2279:26-2279:46
SEMI, 2279:46-2279:47
ATTRIBUTE, 2280:3-2280:12
ID("EventHandler"), 2280:13-2280:25
ID("onwebkitanimationiteration"), 2280:26-2280:52
SEMI, 2280:52-2280:53
ATTRIBUTE, 2281:3-2281:12
ID("EventHandler"), 2281:13-2281:25
ID("onwebkitanimationstart"), 2281:26-2281:48
SEMI, 2281:48-2281:49
ATTRIBUTE, 2282:3-2282:12
ID("EventHandler"), 2282:13-2282:25
ID("onwebkittransitionend"), 2282:26-2282:47
SEMI, 2282:47-2282:48
ATTRIBUTE, 2283:3-2283:12
ID("EventHandler"), 2283:13-2283:25
ID("onwheel"), 2283:26-2283:33
SEMI, 2283:33-2283:34
RBRACE, 2284:1-2284:2
SEMI, 2284:2-2284:3
INTERFACE, 2286:1-2286:10
MIXIN, 2286:11-2286:16
ID("WindowEventHandlers"), 2286:17-2286:36
LBRACE, 2286:37-2286:38
ATTRIBUTE, 2287:3-2287:12
ID("EventHandler"), 2287:13-2287:25
ID("onafterprint"), 2287:26-2287:38
SEMI, 2287:38-2287:39
ATTRIBUTE, 2288:3-2288:12
ID("EventHandler"), 2288:13-2288:25
ID("onbeforeprint"), 2288:26-2288:39
SEMI, 2288:39-2288:40
ATTRIBUTE, 2289:3-2289:12
ID("OnBeforeUnloadEventHandler"), 2289:13-2289:39
ID("onbeforeunload"), 2289:40-2289:54
SEMI, 2289:54-2289:55
ATTRIBUTE, 2290:3-2290:12
ID("EventHandler"), 2290:13-2290:25
ID("onhashchange"), 2290:26-2290:38
SEMI, 2290:38-2290:39
ATTRIBUTE, 2291:3-2291:12
ID("EventHandler"), 2291:13-2291:25
ID("onlanguagechange"), 2291:26-2291:42
SEMI, 2291:42-2291:43
ATTRIBUTE, 2292:3-2292:12
ID("EventHandler"), 2292:13-2292:25
ID("onmessage"), 2292:26-2292:35
SEMI, 2292:35-2292:36
ATTRIBUTE, 2293:3-2293:12
ID("EventHandler"), 2293:13-2293:25
ID("onmessageerror"), 2293:26-2293:40
SEMI, 2293:40-2293:41
ATTRIBUTE, 2294:3-2294:12
ID("EventHandler"), 2294:13-2294:25
ID("onoffline"), 2294:26-2294:35
SEMI, 2294:35-2294:36
ATTRIBUTE, 2295:3-2295:12
ID("EventHandler"), 2295:13-2295:25
ID("ononline"), 2295:26-2295:34
SEMI, 2295:34-2295:35
ATTRIBUTE, 2296:3-2296:12
ID("EventHandler"), 2296:13-2296:25
ID("onpagehide"), 2296:26-2296:36
SEMI, 2296:36-2296:37
ATTRIBUTE, 2297:3-2297:12
ID("EventHandler"), 2297:13-2297:25
ID("onpagereveal"), 2297:26-2297:38
SEMI, 2297:38-2297:39
ATTRIBUTE, 2298:3-2298:12
ID("EventHandler"), 2298:13-2298:25
ID("onpageshow"), 2298:26-2298:36
SEMI, 2298:36-2298:37
ATTRIBUTE, 2299:3-2299:12
ID("EventHandler"), 2299:13-2299:25
ID("onpageswap"), 2299:26-2299:36
SEMI, 2299:36-2299:37
ATTRIBUTE, 2300:3-2300:12
ID("EventHandler"), 2300:13-2300:25
ID("onpopstate"), 2300:26-2300:36
SEMI, 2300:36-2300:37
ATTRIBUTE, 2301:3-2301:12
ID("EventHandler"), 2301:13-2301:25
ID("onrejectionhandled"), 2301:26-2301:44
SEMI, 2301:44-2301:45
ATTRIBUTE, 2302:3-2302:12
ID("EventHandler"), 2302:13-2302:25
ID("onstorage"), 2302:26-2302:35
SEMI, 2302:35-2302:36
ATTRIBUTE, 2303:3-2303:12
ID("EventHandler"), 2303:13-2303:25
ID("onunhandledrejection"), 2303:26-2303:46
SEMI, 2303:46-2303:47
ATTRIBUTE, 2304:3-2304:12
ID("EventHandler"), 2304:13-2304:25
ID("onunload"), 2304:26-2304:34
SEMI, 2304:34-2304:35
RBRACE, 2305:1-2305:2
SEMI, 2305:2-2305:3
TYPEDEF, 2307:1-2307:8
LPAREN, 2307:9-2307:10
DOMSTRING, 2307:10-2307:19
OR, 2307:20-2307:22
ID("Function"), 2307:23-2307:31
OR, 2307:32-2307:34
ID("TrustedScript"), 2307:35-2307:48
RPAREN, 2307:48-2307:49
ID("TimerHandler"), 2307:50-2307:62
SEMI, 2307:62-2307:63
INTERFACE, 2309:1-2309:10
MIXIN, 2309:11-2309:16
ID("WindowOrWorkerGlobalScope"), 2309:17-2309:42
LBRACE, 2309:43-2309:44
LBRACKET, 2310:3-2310:4
ID("Replaceable"), 2310:4-2310:15
RBRACKET, 2310:15-2310:16
READONLY, 2310:17-2310:25
ATTRIBUTE, 2310:26-2310:35
USVSTRING, 2310:36-2310:45
ID("origin"), 2310:46-2310:52
SEMI, 2310:52-2310:53
READONLY, 2311:3-2311:11
ATTRIBUTE, 2311:12-2311:21
BOOLEAN, 2311:22-2311:29
ID("isSecureContext"), 2311:30-2311:45
SEMI, 2311:45-2311:46
READONLY, 2312:3-2312:11
ATTRIBUTE, 2312:12-2312:21
BOOLEAN, 2312:22-2312:29
ID("crossOriginIsolated"), 2312:30-2312:49
SEMI, 2312:49-2312:50
UNDEFINED, 2314:3-2314:12
ID("reportError"), 2314:13-2314:24
LPAREN, 2314:24-2314:25
ANY, 2314:25-2314:28
ID("e"), 2314:29-2314:30
RPAREN, 2314:30-2314:31
SEMI, 2314:31-2314:32
DOMSTRING, 2317:3-2317:12
ID("btoa"), 2317:13-2317:17
LPAREN, 2317:17-2317:18
DOMSTRING, 2317:18-2317:27
ID("data"), 2317:28-2317:32
RPAREN, 2317:32-2317:33
SEMI, 2317:33-2317:34
BYTESTRING, 2318:3-2318:13
ID("atob"), 2318:14-2318:18
LPAREN, 2318:18-2318:19
DOMSTRING, 2318:19-2318:28
ID("data"), 2318:29-2318:33
RPAREN, 2318:33-2318:34
SEMI, 2318:34-2318:35
LONG, 2321:3-2321:7
ID("setTimeout"), 2321:8-2321:18
LPAREN, 2321:18-2321:19
ID("TimerHandler"), 2321:19-2321:31
ID("handler"), 2321:32-2321:39
COMMA, 2321:39-2321:40
OPTIONAL, 2321:41-2321:49
LONG, 2321:50-2321:54
ID("timeout"), 2321:55-2321:62
EQUAL, 2321:63-2321:64
INT("0"), 2321:65-2321:66
COMMA, 2321:66-2321:67
ANY, 2321:68-2321:71
ELLIPS, 2321:71-2321:74
ID("arguments"), 2321:75-2321:84
RPAREN, 2321:84-2321:85
SEMI, 2321:85-2321:86
UNDEFINED, 2322:3-2322:12
ID("clearTimeout"), 2322:13-2322:25
LPAREN, 2322:25-2322:26
OPTIONAL, 2322:26-2322:34
LONG, 2322:35-2322:39
ID("id"), 2322:40-2322:42
EQUAL, 2322:43-2322:44
INT("0"), 2322:45-2322:46
RPAREN, 2322:46-2322:47
SEMI, 2322:47-2322:48
LONG, 2323:3-2323:7
ID("setInterval"), 2323:8-2323:19
LPAREN, 2323:19-2323:20
ID("TimerHandler"), 2323:20-2323:32
ID("handler"), 2323:33-2323:40
COMMA, 2323:40-2323:41
OPTIONAL, 2323:42-2323:50
LONG, 2323:51-2323:55
ID("timeout"), 2323:56-2323:63
EQUAL, 2323:64-2323:65
INT("0"), 2323:66-2323:67
COMMA, 2323:67-2323:68
ANY, 2323:69-2323:72
ELLIPS, 2323:72-2323:75
ID("arguments"), 2323:76-2323:85
RPAREN, 2323:85-2323:86
SEMI, 2323:86-2323:87
UNDEFINED, 2324:3-2324:12
ID("clearInterval"), 2324:13-2324:26
LPAREN, 2324:26-2324:27
OPTIONAL, 2324:27-2324:35
LONG, 2324:36-2324:40
ID("id"), 2324:41-2324:43
EQUAL, 2324:44-2324:45
INT("0"), 2324:46-2324:47
RPAREN, 2324:47-2324:48
SEMI, 2324:48-2324:49
UNDEFINED, 2327:3-2327:12
ID("queueMicrotask"), 2327:13-2327:27
LPAREN, 2327:27-2327:28
ID("VoidFunction"), 2327:28-2327:40
CALLBACK, 2327:41-2327:49
RPAREN, 2327:49-2327:50
SEMI, 2327:50-2327:51
PROMISE, 2330:3-2330:10
LT, 2330:10-2330:11
ID("ImageBitmap"), 2330:11-2330:22
GT, 2330:22-2330:23
ID("createImageBitmap"), 2330:24-2330:41
LPAREN, 2330:41-2330:42
ID("ImageBitmapSource"), 2330:42-2330:59
ID("image"), 2330:60-2330:65
COMMA, 2330:65-2330:66
OPTIONAL, 2330:67-2330:75
ID("ImageBitmapOptions"), 2330:76-2330:94
ID("options"), 2330:95-2330:102
EQUAL, 2330:103-2330:104
LBRACE, 2330:105-2330:106
RBRACE, 2330:106-2330:107
RPAREN, 2330:107-2330:108
SEMI, 2330:108-2330:109
PROMISE, 2331:3-2331:10
LT, 2331:10-2331:11
ID("ImageBitmap"), 2331:11-2331:22
GT, 2331:22-2331:23
ID("createImageBitmap"), 2331:24-2331:41
LPAREN, 2331:41-2331:42
ID("ImageBitmapSource"), 2331:42-2331:59
ID("image"), 2331:60-2331:65
COMMA, 2331:65-2331:66
LONG, 2331:67-2331:71
ID("sx"), 2331:72-2331:74
COMMA, 2331:74-2331:75
LONG, 2331:76-2331:80
ID("sy"), 2331:81-2331:83
COMMA, 2331:83-2331:84
LONG, 2331:85-2331:89
ID("sw"), 2331:90-2331:92
COMMA, 2331:92-2331:93
LONG, 2331:94-2331:98
ID("sh"), 2331:99-2331:101
COMMA, 2331:101-2331:102
OPTIONAL, 2331:103-2331:111
ID("ImageBitmapOptions"), 2331:112-2331:130
ID("options"), 2331:131-2331:138
EQUAL, 2331:139-2331:140
LBRACE, 2331:141-2331:142
RBRACE, 2331:142-2331:143
RPAREN, 2331:143-2331:144
SEMI, 2331:144-2331:145
ANY, 2334:3-2334:6
ID("structuredClone"), 2334:7-2334:22
LPAREN, 2334:22-2334:23
ANY, 2334:23-2334:26
ID("value"), 2334:27-2334:32
COMMA, 2334:32-2334:33
OPTIONAL, 2334:34-2334:42
ID("StructuredSerializeOptions"), 2334:43-2334:69
ID("options"), 2334:70-2334:77
EQUAL, 2334:78-2334:79
LBRACE, 2334:80-2334:81
RBRACE, 2334:81-2334:82
RPAREN, 2334:82-2334:83
SEMI, 2334:83-2334:84
RBRACE, 2335:1-2335:2
SEMI, 2335:2-2335:3
ID("Window"), 2336:1-2336:7
INCLUDES, 2336:8-2336:16
ID("WindowOrWorkerGlobalScope"), 2336:17-2336:42
SEMI, 2336:42-2336:43
ID("WorkerGlobalScope"), 2337:1-2337:18
INCLUDES, 2337:19-2337:27
ID("WindowOrWorkerGlobalScope"), 2337:28-2337:53
SEMI, 2337:53-2337:54
PARTIAL, 2339:1-2339:8
INTERFACE, 2339:9-2339:18
ID("Element"), 2339:19-2339:26
LBRACE, 2339:27-2339:28
LBRACKET, 2340:3-2340:4
ID("CEReactions"), 2340:4-2340:15
RBRACKET, 2340:15-2340:16
UNDEFINED, 2340:17-2340:26
ID("setHTMLUnsafe"), 2340:27-2340:40
LPAREN, 2340:40-2340:41
LPAREN, 2340:41-2340:42
ID("TrustedHTML"), 2340:42-2340:53
OR, 2340:54-2340:56
DOMSTRING, 2340:57-2340:66
RPAREN, 2340:66-2340:67
ID("html"), 2340:68-2340:72
RPAREN, 2340:72-2340:73
SEMI, 2340:73-2340:74
DOMSTRING, 2341:3-2341:12
ID("getHTML"), 2341:13-2341:20
LPAREN, 2341:20-2341:21
OPTIONAL, 2341:21-2341:29
ID("GetHTMLOptions"), 2341:30-2341:44
ID("options"), 2341:45-2341:52
EQUAL, 2341:53-2341:54
LBRACE, 2341:55-2341:56
RBRACE, 2341:56-2341:57
RPAREN, 2341:57-2341:58
SEMI, 2341:58-2341:59
LBRACKET, 2343:3-2343:4
ID("CEReactions"), 2343:4-2343:15
RBRACKET, 2343:15-2343:16
ATTRIBUTE, 2343:17-2343:26
LPAREN, 2343:27-2343:28
ID("TrustedHTML"), 2343:28-2343:39
OR, 2343:40-2343:42
LBRACKET, 2343:43-2343:44
ID("LegacyNullToEmptyString"), 2343:44-2343:67
RBRACKET, 2343:67-2343:68
DOMSTRING, 2343:69-2343:78
RPAREN, 2343:78-2343:79
ID("innerHTML"), 2343:80-2343:89
SEMI, 2343:89-2343:90
LBRACKET, 2344:3-2344:4
ID("CEReactions"), 2344:4-2344:15
RBRACKET, 2344:15-2344:16
ATTRIBUTE, 2344:17-2344:26
LPAREN, 2344:27-2344:28
ID("TrustedHTML"), 2344:28-2344:39
OR, 2344:40-2344:42
LBRACKET, 2344:43-2344:44
ID("LegacyNullToEmptyString"), 2344:44-2344:67
RBRACKET, 2344:67-2344:68
DOMSTRING, 2344:69-2344:78
RPAREN, 2344:78-2344:79
ID("outerHTML"), 2344:80-2344:89
SEMI, 2344:89-2344:90
LBRACKET, 2345:3-2345:4
ID("CEReactions"), 2345:4-2345:15
RBRACKET, 2345:15-2345:16
UNDEFINED, 2345:17-2345:26
ID("insertAdjacentHTML"), 2345:27-2345:45
LPAREN, 2345:45-2345:46
DOMSTRING, 2345:46-2345:55
ID("position"), 2345:56-2345:64
COMMA, 2345:64-2345:65
LPAREN, 2345:66-2345:67
ID("TrustedHTML"), 2345:67-2345:78
OR, 2345:79-2345:81
DOMSTRING, 2345:82-2345:91
RPAREN, 2345:91-2345:92
ID("string"), 2345:93-2345:99
RPAREN, 2345:99-2345:100
SEMI, 2345:100-2345:101
RBRACE, 2346:1-2346:2
SEMI, 2346:2-2346:3
PARTIAL, 2348:1-2348:8
INTERFACE, 2348:9-2348:18
ID("ShadowRoot"), 2348:19-2348:29
LBRACE, 2348:30-2348:31
LBRACKET, 2349:3-2349:4
ID("CEReactions"), 2349:4-2349:15
RBRACKET, 2349:15-2349:16
UNDEFINED, 2349:17-2349:26
ID("setHTMLUnsafe"), 2349:27-2349:40
LPAREN, 2349:40-2349:41
LPAREN, 2349:41-2349:42
ID("TrustedHTML"), 2349:42-2349:53
OR, 2349:54-2349:56
DOMSTRING, 2349:57-2349:66
RPAREN, 2349:66-2349:67
ID("html"), 2349:68-2349:72
RPAREN, 2349:72-2349:73
SEMI, 2349:73-2349:74
DOMSTRING, 2350:3-2350:12
ID("getHTML"), 2350:13-2350:20
LPAREN, 2350:20-2350:21
OPTIONAL, 2350:21-2350:29
ID("GetHTMLOptions"), 2350:30-2350:44
ID("options"), 2350:45-2350:52
EQUAL, 2350:53-2350:54
LBRACE, 2350:55-2350:56
RBRACE, 2350:56-2350:57
RPAREN, 2350:57-2350:58
SEMI, 2350:58-2350:59
LBRACKET, 2352:3-2352:4
ID("CEReactions"), 2352:4-2352:15
RBRACKET, 2352:15-2352:16
ATTRIBUTE, 2352:17-2352:26
LPAREN, 2352:27-2352:28
ID("TrustedHTML"), 2352:28-2352:39
OR, 2352:40-2352:42
LBRACKET, 2352:43-2352:44
ID("LegacyNullToEmptyString"), 2352:44-2352:67
RBRACKET, 2352:67-2352:68
DOMSTRING, 2352:69-2352:78
RPAREN, 2352:78-2352:79
ID("innerHTML"), 2352:80-2352:89
SEMI, 2352:89-2352:90
RBRACE, 2353:1-2353:2
SEMI, 2353:2-2353:3
DICTIONARY, 2355:1-2355:11
ID("GetHTMLOptions"), 2355:12-2355:26
LBRACE, 2355:27-2355:28
BOOLEAN, 2356:3-2356:10
ID("serializableShadowRoots"), 2356:11-2356:34
EQUAL, 2356:35-2356:36
FALSE, 2356:37-2356:42
SEMI, 2356:42-2356:43
SEQUENCE, 2357:3-2357:11
LT, 2357:11-2357:12
ID("ShadowRoot"), 2357:12-2357:22
GT, 2357:22-2357:23
ID("shadowRoots"), 2357:24-2357:35
EQUAL, 2357:36-2357:37
LBRACKET, 2357:38-2357:39
RBRACKET, 2357:39-2357:40
SEMI, 2357:40-2357:41
RBRACE, 2358:1-2358:2
SEMI, 2358:2-2358:3
LBRACKET, 2360:1-2360:2
ID("Exposed"), 2360:2-2360:9
EQUAL, 2360:9-2360:10
ID("Window"), 2360:10-2360:16
RBRACKET, 2360:16-2360:17
INTERFACE, 2361:1-2361:10
ID("DOMParser"), 2361:11-2361:20
LBRACE, 2361:21-2361:22
CONSTRUCTOR, 2362:3-2362:14
LPAREN, 2362:14-2362:15
RPAREN, 2362:15-2362:16
SEMI, 2362:16-2362:17
LBRACKET, 2364:3-2364:4
ID("NewObject"), 2364:4-2364:13
RBRACKET, 2364:13-2364:14
ID("Document"), 2364:15-2364:23
ID("parseFromString"), 2364:24-2364:39
LPAREN, 2364:39-2364:40
LPAREN, 2364:40-2364:41
ID("TrustedHTML"), 2364:41-2364:52
OR, 2364:53-2364:55
DOMSTRING, 2364:56-2364:65
RPAREN, 2364:65-2364:66
ID("string"), 2364:67-2364:73
COMMA, 2364:73-2364:74
ID("DOMParserSupportedType"), 2364:75-2364:97
ID("type"), 2364:98-2364:102
RPAREN, 2364:102-2364:103
SEMI, 2364:103-2364:104
RBRACE, 2365:1-2365:2
SEMI, 2365:2-2365:3
ENUM, 2367:1-2367:5
ID("DOMParserSupportedType"), 2367:6-2367:28
LBRACE, 2367:29-2367:30
STRING("\"text/html\""), 2368:3-2368:14
COMMA, 2368:14-2368:15
STRING("\"text/xml\""), 2369:3-2369:13
COMMA, 2369:13-2369:14
STRING("\"application/xml\""), 2370:3-2370:20
COMMA, 2370:20-2370:21
STRING("\"application/xhtml+xml\""), 2371:3-2371:26
COMMA, 2371:26-2371:27
STRING("\"image/svg+xml\""), 2372:3-2372:18
RBRACE, 2373:1-2373:2
SEMI, 2373:2-2373:3
PARTIAL, 2375:1-2375:8
INTERFACE, 2375:9-2375:18
ID("Range"), 2375:19-2375:24
LBRACE, 2375:25-2375:26
LBRACKET, 2376:3-2376:4
ID("CEReactions"), 2376:4-2376:15
COMMA, 2376:15-2376:16
ID("NewObject"), 2376:17-2376:26
RBRACKET, 2376:26-2376:27
ID("DocumentFragment"), 2376:28-2376:44
ID("createContextualFragment"), 2376:45-2376:69
LPAREN, 2376:69-2376:70
LPAREN, 2376:70-2376:71
ID("TrustedHTML"), 2376:71-2376:82
OR, 2376:83-2376:85
DOMSTRING, 2376:86-2376:95
RPAREN, 2376:95-2376:96
ID("string"), 2376:97-2376:103
RPAREN, 2376:103-2376:104
SEMI, 2376:104-2376:105
RBRACE, 2377:1-2377:2
SEMI, 2377:2-2377:3
LBRACKET, 2379:1-2379:2
ID("Exposed"), 2379:2-2379:9
EQUAL, 2379:9-2379:10
ID("Window"), 2379:10-2379:16
RBRACKET, 2379:16-2379:17
INTERFACE, 2380:1-2380:10
ID("XMLSerializer"), 2380:11-2380:24
LBRACE, 2380:25-2380:26
CONSTRUCTOR, 2381:3-2381:14
LPAREN, 2381:14-2381:15
RPAREN, 2381:15-2381:16
SEMI, 2381:16-2381:17
DOMSTRING, 2383:3-2383:12
ID("serializeToString"), 2383:13-2383:30
LPAREN, 2383:30-2383:31
ID("Node"), 2383:31-2383:35
ID("root"), 2383:36-2383:40
RPAREN, 2383:40-2383:41
SEMI, 2383:41-2383:42
RBRACE, 2384:1-2384:2
SEMI, 2384:2-2384:3
LBRACKET, 2386:1-2386:2
ID("Exposed"), 2386:2-2386:9
EQUAL, 2386:9-2386:10
ID("Window"), 2386:10-2386:16
RBRACKET, 2386:16-2386:17
INTERFACE, 2387:1-2387:10
ID("Navigator"), 2387:11-2387:20
LBRACE, 2387:21-2387:22
RBRACE, 2389:1-2389:2
SEMI, 2389:2-2389:3
ID("Navigator"), 2390:1-2390:10
INCLUDES, 2390:11-2390:19
ID("NavigatorID"), 2390:20-2390:31
SEMI, 2390:31-2390:32
ID("Navigator"), 2391:1-2391:10
INCLUDES, 2391:11-2391:19
ID("NavigatorLanguage"), 2391:20-2391:37
SEMI, 2391:37-2391:38
ID("Navigator"), 2392:1-2392:10
INCLUDES, 2392:11-2392:19
ID("NavigatorOnLine"), 2392:20-2392:35
SEMI, 2392:35-2392:36
ID("Navigator"), 2393:1-2393:10
INCLUDES, 2393:11-2393:19
ID("NavigatorContentUtils"), 2393:20-2393:41
SEMI, 2393:41-2393:42
ID("Navigator"), 2394:1-2394:10
INCLUDES, 2394:11-2394:19
ID("NavigatorCookies"), 2394:20-2394:36
SEMI, 2394:36-2394:37
ID("Navigator"), 2395:1-2395:10
INCLUDES, 2395:11-2395:19
ID("NavigatorPlugins"), 2395:20-2395:36
SEMI, 2395:36-2395:37
ID("Navigator"), 2396:1-2396:10
INCLUDES, 2396:11-2396:19
ID("NavigatorConcurrentHardware"), 2396:20-2396:47
SEMI, 2396:47-2396:48
INTERFACE, 2398:1-2398:10
MIXIN, 2398:11-2398:16
ID("NavigatorID"), 2398:17-2398:28
LBRACE, 2398:29-2398:30
READONLY, 2399:3-2399:11
ATTRIBUTE, 2399:12-2399:21
DOMSTRING, 2399:22-2399:31
ID("appCodeName"), 2399:32-2399:43
SEMI, 2399:43-2399:44
READONLY, 2400:3-2400:11
ATTRIBUTE, 2400:12-2400:21
DOMSTRING, 2400:22-2400:31
ID("appName"), 2400:32-2400:39
SEMI, 2400:39-2400:40
READONLY, 2401:3-2401:11
ATTRIBUTE, 2401:12-2401:21
DOMSTRING, 2401:22-2401:31
ID("appVersion"), 2401:32-2401:42
SEMI, 2401:42-2401:43
READONLY, 2402:3-2402:11
ATTRIBUTE, 2402:12-2402:21
DOMSTRING, 2402:22-2402:31
ID("platform"), 2402:32-2402:40
SEMI, 2402:40-2402:41
READONLY, 2403:3-2403:11
ATTRIBUTE, 2403:12-2403:21
DOMSTRING, 2403:22-2403:31
ID("product"), 2403:32-2403:39
SEMI, 2403:39-2403:40
LBRACKET, 2404:3-2404:4
ID("Exposed"), 2404:4-2404:11
EQUAL, 2404:11-2404:12
ID("Window"), 2404:12-2404:18
RBRACKET, 2404:18-2404:19
READONLY, 2404:20-2404:28
ATTRIBUTE, 2404:29-2404:38
DOMSTRING, 2404:39-2404:48
ID("productSub"), 2404:49-2404:59
SEMI, 2404:59-2404:60
READONLY, 2405:3-2405:11
ATTRIBUTE, 2405:12-2405:21
DOMSTRING, 2405:22-2405:31
ID("userAgent"), 2405:32-2405:41
SEMI, 2405:41-2405:42
LBRACKET, 2406:3-2406:4
ID("Exposed"), 2406:4-2406:11
EQUAL, 2406:11-2406:12
ID("Window"), 2406:12-2406:18
RBRACKET, 2406:18-2406:19
READONLY, 2406:20-2406:28
ATTRIBUTE, 2406:29-2406:38
DOMSTRING, 2406:39-2406:48
ID("vendor"), 2406:49-2406:55
SEMI, 2406:55-2406:56
LBRACKET, 2407:3-2407:4
ID("Exposed"), 2407:4-2407:11
EQUAL, 2407:11-2407:12
ID("Window"), 2407:12-2407:18
RBRACKET, 2407:18-2407:19
READONLY, 2407:20-2407:28
ATTRIBUTE, 2407:29-2407:38
DOMSTRING, 2407:39-2407:48
ID("vendorSub"), 2407:49-2407:58
SEMI, 2407:58-2407:59
RBRACE, 2408:1-2408:2
SEMI, 2408:2-2408:3
PARTIAL, 2410:1-2410:8
INTERFACE, 2410:9-2410:18
MIXIN, 2410:19-2410:24
ID("NavigatorID"), 2410:25-2410:36
LBRACE, 2410:37-2410:38
LBRACKET, 2411:3-2411:4
ID("Exposed"), 2411:4-2411:11
EQUAL, 2411:11-2411:12
ID("Window"), 2411:12-2411:18
RBRACKET, 2411:18-2411:19
BOOLEAN, 2411:20-2411:27
ID("taintEnabled"), 2411:28-2411:40
LPAREN, 2411:40-2411:41
RPAREN, 2411:41-2411:42
SEMI, 2411:42-2411:43
LBRACKET, 2412:3-2412:4
ID("Exposed"), 2412:4-2412:11
EQUAL, 2412:11-2412:12
ID("Window"), 2412:12-2412:18
RBRACKET, 2412:18-2412:19
READONLY, 2412:20-2412:28
ATTRIBUTE, 2412:29-2412:38
DOMSTRING, 2412:39-2412:48
ID("oscpu"), 2412:49-2412:54
SEMI, 2412:54-2412:55
RBRACE, 2413:1-2413:2
SEMI, 2413:2-2413:3
INTERFACE, 2415:1-2415:10
MIXIN, 2415:11-2415:16
ID("NavigatorLanguage"), 2415:17-2415:34
LBRACE, 2415:35-2415:36
READONLY, 2416:3-2416:11
ATTRIBUTE, 2416:12-2416:21
DOMSTRING, 2416:22-2416:31
ID("language"), 2416:32-2416:40
SEMI, 2416:40-2416:41
READONLY, 2417:3-2417:11
ATTRIBUTE, 2417:12-2417:21
FROZENARRAY, 2417:22-2417:33
LT, 2417:33-2417:34
DOMSTRING, 2417:34-2417:43
GT, 2417:43-2417:44
ID("languages"), 2417:45-2417:54
SEMI, 2417:54-2417:55
RBRACE, 2418:1-2418:2
SEMI, 2418:2-2418:3
INTERFACE, 2420:1-2420:10
MIXIN, 2420:11-2420:16
ID("NavigatorOnLine"), 2420:17-2420:32
LBRACE, 2420:33-2420:34
READONLY, 2421:3-2421:11
ATTRIBUTE, 2421:12-2421:21
BOOLEAN, 2421:22-2421:29
ID("onLine"), 2421:30-2421:36
SEMI, 2421:36-2421:37
RBRACE, 2422:1-2422:2
SEMI, 2422:2-2422:3
INTERFACE, 2424:1-2424:10
MIXIN, 2424:11-2424:16
ID("NavigatorContentUtils"), 2424:17-2424:38
LBRACE, 2424:39-2424:40
LBRACKET, 2425:3-2425:4
ID("SecureContext"), 2425:4-2425:17
RBRACKET, 2425:17-2425:18
UNDEFINED, 2425:19-2425:28
ID("registerProtocolHandler"), 2425:29-2425:52
LPAREN, 2425:52-2425:53
DOMSTRING, 2425:53-2425:62
ID("scheme"), 2425:63-2425:69
COMMA, 2425:69-2425:70
USVSTRING, 2425:71-2425:80
ID("url"), 2425:81-2425:84
RPAREN, 2425:84-2425:85
SEMI, 2425:85-2425:86
LBRACKET, 2426:3-2426:4
ID("SecureContext"), 2426:4-2426:17
RBRACKET, 2426:17-2426:18
UNDEFINED, 2426:19-2426:28
ID("unregisterProtocolHandler"), 2426:29-2426:54
LPAREN, 2426:54-2426:55
DOMSTRING, 2426:55-2426:64
ID("scheme"), 2426:65-2426:71
COMMA, 2426:71-2426:72
USVSTRING, 2426:73-2426:82
ID("url"), 2426:83-2426:86
RPAREN, 2426:86-2426:87
SEMI, 2426:87-2426:88
RBRACE, 2427:1-2427:2
SEMI, 2427:2-2427:3
INTERFACE, 2429:1-2429:10
MIXIN, 2429:11-2429:16
ID("NavigatorCookies"), 2429:17-2429:33
LBRACE, 2429:34-2429:35
READONLY, 2430:3-2430:11
ATTRIBUTE, 2430:12-2430:21
BOOLEAN, 2430:22-2430:29
ID("cookieEnabled"), 2430:30-2430:43
SEMI, 2430:43-2430:44
RBRACE, 2431:1-2431:2
SEMI, 2431:2-2431:3
INTERFACE, 2433:1-2433:10
MIXIN, 2433:11-2433:16
ID("NavigatorPlugins"), 2433:17-2433:33
LBRACE, 2433:34-2433:35
LBRACKET, 2434:3-2434:4
ID("SameObject"), 2434:4-2434:14
RBRACKET, 2434:14-2434:15
READONLY, 2434:16-2434:24
ATTRIBUTE, 2434:25-2434:34
ID("PluginArray"), 2434:35-2434:46
ID("plugins"), 2434:47-2434:54
SEMI, 2434:54-2434:55
LBRACKET, 2435:3-2435:4
ID("SameObject"), 2435:4-2435:14
RBRACKET, 2435:14-2435:15
READONLY, 2435:16-2435:24
ATTRIBUTE, 2435:25-2435:34
ID("MimeTypeArray"), 2435:35-2435:48
ID("mimeTypes"), 2435:49-2435:58
SEMI, 2435:58-2435:59
BOOLEAN, 2436:3-2436:10
ID("javaEnabled"), 2436:11-2436:22
LPAREN, 2436:22-2436:23
RPAREN, 2436:23-2436:24
SEMI, 2436:24-2436:25
READONLY, 2437:3-2437:11
ATTRIBUTE, 2437:12-2437:21
BOOLEAN, 2437:22-2437:29
ID("pdfViewerEnabled"), 2437:30-2437:46
SEMI, 2437:46-2437:47
RBRACE, 2438:1-2438:2
SEMI, 2438:2-2438:3
LBRACKET, 2440:1-2440:2
ID("Exposed"), 2440:2-2440:9
EQUAL, 2440:9-2440:10
ID("Window"), 2440:10-2440:16
COMMA, 2440:16-2440:17
ID("LegacyUnenumerableNamedProperties"), 2441:2-2441:35
RBRACKET, 2441:35-2441:36
INTERFACE, 2442:1-2442:10
ID("PluginArray"), 2442:11-2442:22
LBRACE, 2442:23-2442:24
UNDEFINED, 2443:3-2443:12
ID("refresh"), 2443:13-2443:20
LPAREN, 2443:20-2443:21
RPAREN, 2443:21-2443:22
SEMI, 2443:22-2443:23
READONLY, 2444:3-2444:11
ATTRIBUTE, 2444:12-2444:21
UNSIGNED, 2444:22-2444:30
LONG, 2444:31-2444:35
ID("length"), 2444:36-2444:42
SEMI, 2444:42-2444:43
GETTER, 2445:3-2445:9
ID("Plugin"), 2445:10-2445:16
QUESTION, 2445:16-2445:17
ID("item"), 2445:18-2445:22
LPAREN, 2445:22-2445:23
UNSIGNED, 2445:23-2445:31
LONG, 2445:32-2445:36
ID("index"), 2445:37-2445:42
RPAREN, 2445:42-2445:43
SEMI, 2445:43-2445:44
GETTER, 2446:3-2446:9
ID("Plugin"), 2446:10-2446:16
QUESTION, 2446:16-2446:17
ID("namedItem"), 2446:18-2446:27
LPAREN, 2446:27-2446:28
DOMSTRING, 2446:28-2446:37
ID("name"), 2446:38-2446:42
RPAREN, 2446:42-2446:43
SEMI, 2446:43-2446:44
RBRACE, 2447:1-2447:2
SEMI, 2447:2-2447:3
LBRACKET, 2449:1-2449:2
ID("Exposed"), 2449:2-2449:9
EQUAL, 2449:9-2449:10
ID("Window"), 2449:10-2449:16
COMMA, 2449:16-2449:17
ID("LegacyUnenumerableNamedProperties"), 2450:2-2450:35
RBRACKET, 2450:35-2450:36
INTERFACE, 2451:1-2451:10
ID("MimeTypeArray"), 2451:11-2451:24
LBRACE, 2451:25-2451:26
READONLY, 2452:3-2452:11
ATTRIBUTE, 2452:12-2452:21
UNSIGNED, 2452:22-2452:30
LONG, 2452:31-2452:35
ID("length"), 2452:36-2452:42
SEMI, 2452:42-2452:43
GETTER, 2453:3-2453:9
ID("MimeType"), 2453:10-2453:18
QUESTION, 2453:18-2453:19
ID("item"), 2453:20-2453:24
LPAREN, 2453:24-2453:25
UNSIGNED, 2453:25-2453:33
LONG, 2453:34-2453:38
ID("index"), 2453:39-2453:44
RPAREN, 2453:44-2453:45
SEMI, 2453:45-2453:46
GETTER, 2454:3-2454:9
ID("MimeType"), 2454:10-2454:18
QUESTION, 2454:18-2454:19
ID("namedItem"), 2454:20-2454:29
LPAREN, 2454:29-2454:30
DOMSTRING, 2454:30-2454:39
ID("name"), 2454:40-2454:44
RPAREN, 2454:44-2454:45
SEMI, 2454:45-2454:46
RBRACE, 2455:1-2455:2
SEMI, 2455:2-2455:3
LBRACKET, 2457:1-2457:2
ID("Exposed"), 2457:2-2457:9
EQUAL, 2457:9-2457:10
ID("Window"), 2457:10-2457:16
COMMA, 2457:16-2457:17
ID("LegacyUnenumerableNamedProperties"), 2458:2-2458:35
RBRACKET, 2458:35-2458:36
INTERFACE, 2459:1-2459:10
ID("Plugin"), 2459:11-2459:17
LBRACE, 2459:18-2459:19
READONLY, 2460:3-2460:11
ATTRIBUTE, 2460:12-2460:21
DOMSTRING, 2460:22-2460:31
ID("name"), 2460:32-2460:36
SEMI, 2460:36-2460:37
READONLY, 2461:3-2461:11
ATTRIBUTE, 2461:12-2461:21
DOMSTRING, 2461:22-2461:31
ID("description"), 2461:32-2461:43
SEMI, 2461:43-2461:44
READONLY, 2462:3-2462:11
ATTRIBUTE, 2462:12-2462:21
DOMSTRING, 2462:22-2462:31
ID("filename"), 2462:32-2462:40
SEMI, 2462:40-2462:41
READONLY, 2463:3-2463:11
ATTRIBUTE, 2463:12-2463:21
UNSIGNED, 2463:22-2463:30
LONG, 2463:31-2463:35
ID("length"), 2463:36-2463:42
SEMI, 2463:42-2463:43
GETTER, 2464:3-2464:9
ID("MimeType"), 2464:10-2464:18
QUESTION, 2464:18-2464:19
ID("item"), 2464:20-2464:24
LPAREN, 2464:24-2464:25
UNSIGNED, 2464:25-2464:33
LONG, 2464:34-2464:38
ID("index"), 2464:39-2464:44
RPAREN, 2464:44-2464:45
SEMI, 2464:45-2464:46
GETTER, 2465:3-2465:9
ID("MimeType"), 2465:10-2465:18
QUESTION, 2465:18-2465:19
ID("namedItem"), 2465:20-2465:29
LPAREN, 2465:29-2465:30
DOMSTRING, 2465:30-2465:39
ID("name"), 2465:40-2465:44
RPAREN, 2465:44-2465:45
SEMI, 2465:45-2465:46
RBRACE, 2466:1-2466:2
SEMI, 2466:2-2466:3
LBRACKET, 2468:1-2468:2
ID("Exposed"), 2468:2-2468:9
EQUAL, 2468:9-2468:10
ID("Window"), 2468:10-2468:16
RBRACKET, 2468:16-2468:17
INTERFACE, 2469:1-2469:10
ID("MimeType"), 2469:11-2469:19
LBRACE, 2469:20-2469:21
READONLY, 2470:3-2470:11
ATTRIBUTE, 2470:12-2470:21
DOMSTRING, 2470:22-2470:31
ID("type"), 2470:32-2470:36
SEMI, 2470:36-2470:37
READONLY, 2471:3-2471:11
ATTRIBUTE, 2471:12-2471:21
DOMSTRING, 2471:22-2471:31
ID("description"), 2471:32-2471:43
SEMI, 2471:43-2471:44
READONLY, 2472:3-2472:11
ATTRIBUTE, 2472:12-2472:21
DOMSTRING, 2472:22-2472:31
ID("suffixes"), 2472:32-2472:40
SEMI, 2472:40-2472:41
READONLY, 2473:3-2473:11
ATTRIBUTE, 2473:12-2473:21
ID("Plugin"), 2473:22-2473:28
ID("enabledPlugin"), 2473:29-2473:42
SEMI, 2473:42-2473:43
RBRACE, 2474:1-2474:2
SEMI, 2474:2-2474:3
TYPEDEF, 2476:1-2476:8
LPAREN, 2476:9-2476:10
UINT8CLAMPEDARRAY, 2476:10-2476:27
OR, 2476:28-2476:30
FLOAT16ARRAY, 2476:31-2476:43
RPAREN, 2476:43-2476:44
ID("ImageDataArray"), 2476:45-2476:59
SEMI, 2476:59-2476:60
ENUM, 2478:1-2478:5
ID("ImageDataPixelFormat"), 2478:6-2478:26
LBRACE, 2478:27-2478:28
STRING("\"rgba-unorm8\""), 2478:29-2478:42
COMMA, 2478:42-2478:43
STRING("\"rgba-float16\""), 2478:44-2478:58
RBRACE, 2478:59-2478:60
SEMI, 2478:60-2478:61
DICTIONARY, 2480:1-2480:11
ID("ImageDataSettings"), 2480:12-2480:29
LBRACE, 2480:30-2480:31
ID("PredefinedColorSpace"), 2481:3-2481:23
ID("colorSpace"), 2481:24-2481:34
SEMI, 2481:34-2481:35
ID("ImageDataPixelFormat"), 2482:3-2482:23
ID("pixelFormat"), 2482:24-2482:35
EQUAL, 2482:36-2482:37
STRING("\"rgba-unorm8\""), 2482:38-2482:51
SEMI, 2482:51-2482:52
RBRACE, 2483:1-2483:2
SEMI, 2483:2-2483:3
LBRACKET, 2485:1-2485:2
ID("Exposed"), 2485:2-2485:9
EQUAL, 2485:9-2485:10
LPAREN, 2485:10-2485:11
ID("Window"), 2485:11-2485:17
COMMA, 2485:17-2485:18
ID("Worker"), 2485:18-2485:24
RPAREN, 2485:24-2485:25
COMMA, 2485:25-2485:26
ID("Serializable"), 2486:2-2486:14
RBRACKET, 2486:14-2486:15
INTERFACE, 2487:1-2487:10
ID("ImageData"), 2487:11-2487:20
LBRACE, 2487:21-2487:22
CONSTRUCTOR, 2488:3-2488:14
LPAREN, 2488:14-2488:15
UNSIGNED, 2488:15-2488:23
LONG, 2488:24-2488:28
ID("sw"), 2488:29-2488:31
COMMA, 2488:31-2488:32
UNSIGNED, 2488:33-2488:41
LONG, 2488:42-2488:46
ID("sh"), 2488:47-2488:49
COMMA, 2488:49-2488:50
OPTIONAL, 2488:51-2488:59
ID("ImageDataSettings"), 2488:60-2488:77
ID("settings"), 2488:78-2488:86
EQUAL, 2488:87-2488:88
LBRACE, 2488:89-2488:90
RBRACE, 2488:90-2488:91
RPAREN, 2488:91-2488:92
SEMI, 2488:92-2488:93
CONSTRUCTOR, 2489:3-2489:14
LPAREN, 2489:14-2489:15
ID("ImageDataArray"), 2489:15-2489:29
ID("data"), 2489:30-2489:34
COMMA, 2489:34-2489:35
UNSIGNED, 2489:36-2489:44
LONG, 2489:45-2489:49
ID("sw"), 2489:50-2489:52
COMMA, 2489:52-2489:53
OPTIONAL, 2489:54-2489:62
UNSIGNED, 2489:63-2489:71
LONG, 2489:72-2489:76
ID("sh"), 2489:77-2489:79
COMMA, 2489:79-2489:80
OPTIONAL, 2489:81-2489:89
ID("ImageDataSettings"), 2489:90-2489:107
ID("settings"), 2489:108-2489:116
EQUAL, 2489:117-2489:118
LBRACE, 2489:119-2489:120
RBRACE, 2489:120-2489:121
RPAREN, 2489:121-2489:122
SEMI, 2489:122-2489:123
READONLY, 2491:3-2491:11
ATTRIBUTE, 2491:12-2491:21
UNSIGNED, 2491:22-2491:30
LONG, 2491:31-2491:35
ID("width"), 2491:36-2491:41
SEMI, 2491:41-2491:42
READONLY, 2492:3-2492:11
ATTRIBUTE, 2492:12-2492:21
UNSIGNED, 2492:22-2492:30
LONG, 2492:31-2492:35
ID("height"), 2492:36-2492:42
SEMI, 2492:42-2492:43
READONLY, 2493:3-2493:11
ATTRIBUTE, 2493:12-2493:21
ID("ImageDataArray"), 2493:22-2493:36
ID("data"), 2493:37-2493:41
SEMI, 2493:41-2493:42
READONLY, 2494:3-2494:11
ATTRIBUTE, 2494:12-2494:21
ID("ImageDataPixelFormat"), 2494:22-2494:42
ID("pixelFormat"), 2494:43-2494:54
SEMI, 2494:54-2494:55
READONLY, 2495:3-2495:11
ATTRIBUTE, 2495:12-2495:21
ID("PredefinedColorSpace"), 2495:22-2495:42
ID("colorSpace"), 2495:43-2495:53
SEMI, 2495:53-2495:54
RBRACE, 2496:1-2496:2
SEMI, 2496:2-2496:3
LBRACKET, 2498:1-2498:2
ID("Exposed"), 2498:2-2498:9
EQUAL, 2498:9-2498:10
LPAREN, 2498:10-2498:11
ID("Window"), 2498:11-2498:17
COMMA, 2498:17-2498:18
ID("Worker"), 2498:18-2498:24
RPAREN, 2498:24-2498:25
COMMA, 2498:25-2498:26
ID("Serializable"), 2498:27-2498:39
COMMA, 2498:39-2498:40
ID("Transferable"), 2498:41-2498:53
RBRACKET, 2498:53-2498:54
INTERFACE, 2499:1-2499:10
ID("ImageBitmap"), 2499:11-2499:22
LBRACE, 2499:23-2499:24
READONLY, 2500:3-2500:11
ATTRIBUTE, 2500:12-2500:21
UNSIGNED, 2500:22-2500:30
LONG, 2500:31-2500:35
ID("width"), 2500:36-2500:41
SEMI, 2500:41-2500:42
READONLY, 2501:3-2501:11
ATTRIBUTE, 2501:12-2501:21
UNSIGNED, 2501:22-2501:30
LONG, 2501:31-2501:35
ID("height"), 2501:36-2501:42
SEMI, 2501:42-2501:43
UNDEFINED, 2502:3-2502:12
ID("close"), 2502:13-2502:18
LPAREN, 2502:18-2502:19
RPAREN, 2502:19-2502:20
SEMI, 2502:20-2502:21
RBRACE, 2503:1-2503:2
SEMI, 2503:2-2503:3
TYPEDEF, 2505:1-2505:8
LPAREN, 2505:9-2505:10
ID("CanvasImageSource"), 2505:10-2505:27
OR, 2505:28-2505:30
ID("Blob"), 2506:10-2506:14
OR, 2506:15-2506:17
ID("ImageData"), 2507:10-2507:19
RPAREN, 2507:19-2507:20
ID("ImageBitmapSource"), 2507:21-2507:38
SEMI, 2507:38-2507:39
ENUM, 2509:1-2509:5
ID("ImageOrientation"), 2509:6-2509:22
LBRACE, 2509:23-2509:24
STRING("\"from-image\""), 2509:25-2509:37
COMMA, 2509:37-2509:38
STRING("\"flipY\""), 2509:39-2509:46
RBRACE, 2509:47-2509:48
SEMI, 2509:48-2509:49
ENUM, 2510:1-2510:5
ID("PremultiplyAlpha"), 2510:6-2510:22
LBRACE, 2510:23-2510:24
STRING("\"none\""), 2510:25-2510:31
COMMA, 2510:31-2510:32
STRING("\"premultiply\""), 2510:33-2510:46
COMMA, 2510:46-2510:47
STRING("\"default\""), 2510:48-2510:57
RBRACE, 2510:58-2510:59
SEMI, 2510:59-2510:60
ENUM, 2511:1-2511:5
ID("ColorSpaceConversion"), 2511:6-2511:26
LBRACE, 2511:27-2511:28
STRING("\"none\""), 2511:29-2511:35
COMMA, 2511:35-2511:36
STRING("\"default\""), 2511:37-2511:46
RBRACE, 2511:47-2511:48
SEMI, 2511:48-2511:49
ENUM, 2512:1-2512:5
ID("ResizeQuality"), 2512:6-2512:19
LBRACE, 2512:20-2512:21
STRING("\"pixelated\""), 2512:22-2512:33
COMMA, 2512:33-2512:34
STRING("\"low\""), 2512:35-2512:40
COMMA, 2512:40-2512:41
STRING("\"medium\""), 2512:42-2512:50
COMMA, 2512:50-2512:51
STRING("\"high\""), 2512:52-2512:58
RBRACE, 2512:59-2512:60
SEMI, 2512:60-2512:61
DICTIONARY, 2514:1-2514:11
ID("ImageBitmapOptions"), 2514:12-2514:30
LBRACE, 2514:31-2514:32
ID("ImageOrientation"), 2515:3-2515:19
ID("imageOrientation"), 2515:20-2515:36
EQUAL, 2515:37-2515:38
STRING("\"from-image\""), 2515:39-2515:51
SEMI, 2515:51-2515:52
ID("PremultiplyAlpha"), 2516:3-2516:19
ID("premultiplyAlpha"), 2516:20-2516:36
EQUAL, 2516:37-2516:38
STRING("\"default\""), 2516:39-2516:48
SEMI, 2516:48-2516:49
ID("ColorSpaceConversion"), 2517:3-2517:23
ID("colorSpaceConversion"), 2517:24-2517:44
EQUAL, 2517:45-2517:46
STRING("\"default\""), 2517:47-2517:56
SEMI, 2517:56-2517:57
LBRACKET, 2518:3-2518:4
ID("EnforceRange"), 2518:4-2518:16
RBRACKET, 2518:16-2518:17
UNSIGNED, 2518:18-2518:26
LONG, 2518:27-2518:31
ID("resizeWidth"), 2518:32-2518:43
SEMI, 2518:43-2518:44
LBRACKET, 2519:3-2519:4
ID("EnforceRange"), 2519:4-2519:16
RBRACKET, 2519:16-2519:17
UNSIGNED, 2519:18-2519:26
LONG, 2519:27-2519:31
ID("resizeHeight"), 2519:32-2519:44
SEMI, 2519:44-2519:45
ID("ResizeQuality"), 2520:3-2520:16
ID("resizeQuality"), 2520:17-2520:30
EQUAL, 2520:31-2520:32
STRING("\"low\""), 2520:33-2520:38
SEMI, 2520:38-2520:39
RBRACE, 2521:1-2521:2
SEMI, 2521:2-2521:3
CALLBACK, 2523:1-2523:9
ID("FrameRequestCallback"), 2523:10-2523:30
EQUAL, 2523:31-2523:32
UNDEFINED, 2523:33-2523:42
LPAREN, 2523:43-2523:44
ID("DOMHighResTimeStamp"), 2523:44-2523:63
ID("time"), 2523:64-2523:68
RPAREN, 2523:68-2523:69
SEMI, 2523:69-2523:70
INTERFACE, 2525:1-2525:10
MIXIN, 2525:11-2525:16
ID("AnimationFrameProvider"), 2525:17-2525:39
LBRACE, 2525:40-2525:41
UNSIGNED, 2526:3-2526:11
LONG, 2526:12-2526:16
ID("requestAnimationFrame"), 2526:17-2526:38
LPAREN, 2526:38-2526:39
ID("FrameRequestCallback"), 2526:39-2526:59
CALLBACK, 2526:60-2526:68
RPAREN, 2526:68-2526:69
SEMI, 2526:69-2526:70
UNDEFINED, 2527:3-2527:12
ID("cancelAnimationFrame"), 2527:13-2527:33
LPAREN, 2527:33-2527:34
UNSIGNED, 2527:34-2527:42
LONG, 2527:43-2527:47
ID("handle"), 2527:48-2527:54
RPAREN, 2527:54-2527:55
SEMI, 2527:55-2527:56
RBRACE, 2528:1-2528:2
SEMI, 2528:2-2528:3
ID("Window"), 2529:1-2529:7
INCLUDES, 2529:8-2529:16
ID("AnimationFrameProvider"), 2529:17-2529:39
SEMI, 2529:39-2529:40
ID("DedicatedWorkerGlobalScope"), 2530:1-2530:27
INCLUDES, 2530:28-2530:36
ID("AnimationFrameProvider"), 2530:37-2530:59
SEMI, 2530:59-2530:60
LBRACKET, 2532:1-2532:2
ID("Exposed"), 2532:2-2532:9
EQUAL, 2532:9-2532:10
LPAREN, 2532:10-2532:11
ID("Window"), 2532:11-2532:17
COMMA, 2532:17-2532:18
ID("Worker"), 2532:18-2532:24
COMMA, 2532:24-2532:25
ID("AudioWorklet"), 2532:25-2532:37
RPAREN, 2532:37-2532:38
RBRACKET, 2532:38-2532:39
INTERFACE, 2533:1-2533:10
ID("MessageEvent"), 2533:11-2533:23
COLON, 2533:24-2533:25
ID("Event"), 2533:26-2533:31
LBRACE, 2533:32-2533:33
CONSTRUCTOR, 2534:3-2534:14
LPAREN, 2534:14-2534:15
DOMSTRING, 2534:15-2534:24
ID("type"), 2534:25-2534:29
COMMA, 2534:29-2534:30
OPTIONAL, 2534:31-2534:39
ID("MessageEventInit"), 2534:40-2534:56
ID("eventInitDict"), 2534:57-2534:70
EQUAL, 2534:71-2534:72
LBRACE, 2534:73-2534:74
RBRACE, 2534:74-2534:75
RPAREN, 2534:75-2534:76
SEMI, 2534:76-2534:77
READONLY, 2536:3-2536:11
ATTRIBUTE, 2536:12-2536:21
ANY, 2536:22-2536:25
ID("data"), 2536:26-2536:30
SEMI, 2536:30-2536:31
READONLY, 2537:3-2537:11
ATTRIBUTE, 2537:12-2537:21
USVSTRING, 2537:22-2537:31
ID("origin"), 2537:32-2537:38
SEMI, 2537:38-2537:39
READONLY, 2538:3-2538:11
ATTRIBUTE, 2538:12-2538:21
DOMSTRING, 2538:22-2538:31
ID("lastEventId"), 2538:32-2538:43
SEMI, 2538:43-2538:44
READONLY, 2539:3-2539:11
ATTRIBUTE, 2539:12-2539:21
ID("MessageEventSource"), 2539:22-2539:40
QUESTION, 2539:40-2539:41
ID("source"), 2539:42-2539:48
SEMI, 2539:48-2539:49
READONLY, 2540:3-2540:11
ATTRIBUTE, 2540:12-2540:21
FROZENARRAY, 2540:22-2540:33
LT, 2540:33-2540:34
ID("MessagePort"), 2540:34-2540:45
GT, 2540:45-2540:46
ID("ports"), 2540:47-2540:52
SEMI, 2540:52-2540:53
UNDEFINED, 2542:3-2542:12
ID("initMessageEvent"), 2542:13-2542:29
LPAREN, 2542:29-2542:30
DOMSTRING, 2542:30-2542:39
ID("type"), 2542:40-2542:44
COMMA, 2542:44-2542:45
OPTIONAL, 2542:46-2542:54
BOOLEAN, 2542:55-2542:62
ID("bubbles"), 2542:63-2542:70
EQUAL, 2542:71-2542:72
FALSE, 2542:73-2542:78
COMMA, 2542:78-2542:79
OPTIONAL, 2542:80-2542:88
BOOLEAN, 2542:89-2542:96
ID("cancelable"), 2542:97-2542:107
EQUAL, 2542:108-2542:109
FALSE, 2542:110-2542:115
COMMA, 2542:115-2542:116
OPTIONAL, 2542:117-2542:125
ANY, 2542:126-2542:129
ID("data"), 2542:130-2542:134
EQUAL, 2542:135-2542:136
NULL, 2542:137-2542:141
COMMA, 2542:141-2542:142
OPTIONAL, 2542:143-2542:151
USVSTRING, 2542:152-2542:161
ID("origin"), 2542:162-2542:168
EQUAL, 2542:169-2542:170
STRING("\"\""), 2542:171-2542:173
COMMA, 2542:173-2542:174
OPTIONAL, 2542:175-2542:183
DOMSTRING, 2542:184-2542:193
ID("lastEventId"), 2542:194-2542:205
EQUAL, 2542:206-2542:207
STRING("\"\""), 2542:208-2542:210
COMMA, 2542:210-2542:211
OPTIONAL, 2542:212-2542:220
ID("MessageEventSource"), 2542:221-2542:239
QUESTION, 2542:239-2542:240
ID("source"), 2542:241-2542:247
EQUAL, 2542:248-2542:249
NULL, 2542:250-2542:254
COMMA, 2542:254-2542:255
OPTIONAL, 2542:256-2542:264
SEQUENCE, 2542:265-2542:273
LT, 2542:273-2542:274
ID("MessagePort"), 2542:274-2542:285
GT, 2542:285-2542:286
ID("ports"), 2542:287-2542:292
EQUAL, 2542:293-2542:294
LBRACKET, 2542:295-2542:296
RBRACKET, 2542:296-2542:297
RPAREN, 2542:297-2542:298
SEMI, 2542:298-2542:299
RBRACE, 2543:1-2543:2
SEMI, 2543:2-2543:3
DICTIONARY, 2545:1-2545:11
ID("MessageEventInit"), 2545:12-2545:28
COLON, 2545:29-2545:30
ID("EventInit"), 2545:31-2545:40
LBRACE, 2545:41-2545:42
ANY, 2546:3-2546:6
ID("data"), 2546:7-2546:11
EQUAL, 2546:12-2546:13
NULL, 2546:14-2546:18
SEMI, 2546:18-2546:19
USVSTRING, 2547:3-2547:12
ID("origin"), 2547:13-2547:19
EQUAL, 2547:20-2547:21
STRING("\"\""), 2547:22-2547:24
SEMI, 2547:24-2547:25
DOMSTRING, 2548:3-2548:12
ID("lastEventId"), 2548:13-2548:24
EQUAL, 2548:25-2548:26
STRING("\"\""), 2548:27-2548:29
SEMI, 2548:29-2548:30
ID("MessageEventSource"), 2549:3-2549:21
QUESTION, 2549:21-2549:22
ID("source"), 2549:23-2549:29
EQUAL, 2549:30-2549:31
NULL, 2549:32-2549:36
SEMI, 2549:36-2549:37
SEQUENCE, 2550:3-2550:11
LT, 2550:11-2550:12
ID("MessagePort"), 2550:12-2550:23
GT, 2550:23-2550:24
ID("ports"), 2550:25-2550:30
EQUAL, 2550:31-2550:32
LBRACKET, 2550:33-2550:34
RBRACKET, 2550:34-2550:35
SEMI, 2550:35-2550:36
RBRACE, 2551:1-2551:2
SEMI, 2551:2-2551:3
TYPEDEF, 2553:1-2553:8
LPAREN, 2553:9-2553:10
ID("WindowProxy"), 2553:10-2553:21
OR, 2553:22-2553:24
ID("MessagePort"), 2553:25-2553:36
OR, 2553:37-2553:39
ID("ServiceWorker"), 2553:40-2553:53
RPAREN, 2553:53-2553:54
ID("MessageEventSource"), 2553:55-2553:73
SEMI, 2553:73-2553:74
LBRACKET, 2555:1-2555:2
ID("Exposed"), 2555:2-2555:9
EQUAL, 2555:9-2555:10
LPAREN, 2555:10-2555:11
ID("Window"), 2555:11-2555:17
COMMA, 2555:17-2555:18
ID("Worker"), 2555:18-2555:24
RPAREN, 2555:24-2555:25
RBRACKET, 2555:25-2555:26
INTERFACE, 2556:1-2556:10
ID("EventSource"), 2556:11-2556:22
COLON, 2556:23-2556:24
ID("EventTarget"), 2556:25-2556:36
LBRACE, 2556:37-2556:38
CONSTRUCTOR, 2557:3-2557:14
LPAREN, 2557:14-2557:15
USVSTRING, 2557:15-2557:24
ID("url"), 2557:25-2557:28
COMMA, 2557:28-2557:29
OPTIONAL, 2557:30-2557:38
ID("EventSourceInit"), 2557:39-2557:54
ID("eventSourceInitDict"), 2557:55-2557:74
EQUAL, 2557:75-2557:76
LBRACE, 2557:77-2557:78
RBRACE, 2557:78-2557:79
RPAREN, 2557:79-2557:80
SEMI, 2557:80-2557:81
READONLY, 2559:3-2559:11
ATTRIBUTE, 2559:12-2559:21
USVSTRING, 2559:22-2559:31
ID("url"), 2559:32-2559:35
SEMI, 2559:35-2559:36
READONLY, 2560:3-2560:11
ATTRIBUTE, 2560:12-2560:21
BOOLEAN, 2560:22-2560:29
ID("withCredentials"), 2560:30-2560:45
SEMI, 2560:45-2560:46
CONST, 2563:3-2563:8
UNSIGNED, 2563:9-2563:17
SHORT, 2563:18-2563:23
ID("CONNECTING"), 2563:24-2563:34
EQUAL, 2563:35-2563:36
INT("0"), 2563:37-2563:38
SEMI, 2563:38-2563:39
CONST, 2564:3-2564:8
UNSIGNED, 2564:9-2564:17
SHORT, 2564:18-2564:23
ID("OPEN"), 2564:24-2564:28
EQUAL, 2564:29-2564:30
INT("1"), 2564:31-2564:32
SEMI, 2564:32-2564:33
CONST, 2565:3-2565:8
UNSIGNED, 2565:9-2565:17
SHORT, 2565:18-2565:23
ID("CLOSED"), 2565:24-2565:30
EQUAL, 2565:31-2565:32
INT("2"), 2565:33-2565:34
SEMI, 2565:34-2565:35
READONLY, 2566:3-2566:11
ATTRIBUTE, 2566:12-2566:21
UNSIGNED, 2566:22-2566:30
SHORT, 2566:31-2566:36
ID("readyState"), 2566:37-2566:47
SEMI, 2566:47-2566:48
ATTRIBUTE, 2569:3-2569:12
ID("EventHandler"), 2569:13-2569:25
ID("onopen"), 2569:26-2569:32
SEMI, 2569:32-2569:33
ATTRIBUTE, 2570:3-2570:12
ID("EventHandler"), 2570:13-2570:25
ID("onmessage"), 2570:26-2570:35
SEMI, 2570:35-2570:36
ATTRIBUTE, 2571:3-2571:12
ID("EventHandler"), 2571:13-2571:25
ID("onerror"), 2571:26-2571:33
SEMI, 2571:33-2571:34
UNDEFINED, 2572:3-2572:12
ID("close"), 2572:13-2572:18
LPAREN, 2572:18-2572:19
RPAREN, 2572:19-2572:20
SEMI, 2572:20-2572:21
RBRACE, 2573:1-2573:2
SEMI, 2573:2-2573:3
DICTIONARY, 2575:1-2575:11
ID("EventSourceInit"), 2575:12-2575:27
LBRACE, 2575:28-2575:29
BOOLEAN, 2576:3-2576:10
ID("withCredentials"), 2576:11-2576:26
EQUAL, 2576:27-2576:28
FALSE, 2576:29-2576:34
SEMI, 2576:34-2576:35
RBRACE, 2577:1-2577:2
SEMI, 2577:2-2577:3
LBRACKET, 2579:1-2579:2
ID("Exposed"), 2579:2-2579:9
EQUAL, 2579:9-2579:10
LPAREN, 2579:10-2579:11
ID("Window"), 2579:11-2579:17
COMMA, 2579:17-2579:18
ID("Worker"), 2579:18-2579:24
RPAREN, 2579:24-2579:25
RBRACKET, 2579:25-2579:26
INTERFACE, 2580:1-2580:10
ID("MessageChannel"), 2580:11-2580:25
LBRACE, 2580:26-2580:27
CONSTRUCTOR, 2581:3-2581:14
LPAREN, 2581:14-2581:15
RPAREN, 2581:15-2581:16
SEMI, 2581:16-2581:17
READONLY, 2583:3-2583:11
ATTRIBUTE, 2583:12-2583:21
ID("MessagePort"), 2583:22-2583:33
ID("port1"), 2583:34-2583:39
SEMI, 2583:39-2583:40
READONLY, 2584:3-2584:11
ATTRIBUTE, 2584:12-2584:21
ID("MessagePort"), 2584:22-2584:33
ID("port2"), 2584:34-2584:39
SEMI, 2584:39-2584:40
RBRACE, 2585:1-2585:2
SEMI, 2585:2-2585:3
INTERFACE, 2587:1-2587:10
MIXIN, 2587:11-2587:16
ID("MessageEventTarget"), 2587:17-2587:35
LBRACE, 2587:36-2587:37
ATTRIBUTE, 2588:3-2588:12
ID("EventHandler"), 2588:13-2588:25
ID("onmessage"), 2588:26-2588:35
SEMI, 2588:35-2588:36
ATTRIBUTE, 2589:3-2589:12
ID("EventHandler"), 2589:13-2589:25
ID("onmessageerror"), 2589:26-2589:40
SEMI, 2589:40-2589:41
RBRACE, 2590:1-2590:2
SEMI, 2590:2-2590:3
LBRACKET, 2592:1-2592:2
ID("Exposed"), 2592:2-2592:9
EQUAL, 2592:9-2592:10
LPAREN, 2592:10-2592:11
ID("Window"), 2592:11-2592:17
COMMA, 2592:17-2592:18
ID("Worker"), 2592:18-2592:24
COMMA, 2592:24-2592:25
ID("AudioWorklet"), 2592:25-2592:37
RPAREN, 2592:37-2592:38
COMMA, 2592:38-2592:39
ID("Transferable"), 2592:40-2592:52
RBRACKET, 2592:52-2592:53
INTERFACE, 2593:1-2593:10
ID("MessagePort"), 2593:11-2593:22
COLON, 2593:23-2593:24
ID("EventTarget"), 2593:25-2593:36
LBRACE, 2593:37-2593:38
UNDEFINED, 2594:3-2594:12
ID("postMessage"), 2594:13-2594:24
LPAREN, 2594:24-2594:25
ANY, 2594:25-2594:28
ID("message"), 2594:29-2594:36
COMMA, 2594:36-2594:37
SEQUENCE, 2594:38-2594:46
LT, 2594:46-2594:47
OBJECT, 2594:47-2594:53
GT, 2594:53-2594:54
ID("transfer"), 2594:55-2594:63
RPAREN, 2594:63-2594:64
SEMI, 2594:64-2594:65
UNDEFINED, 2595:3-2595:12
ID("postMessage"), 2595:13-2595:24
LPAREN, 2595:24-2595:25
ANY, 2595:25-2595:28
ID("message"), 2595:29-2595:36
COMMA, 2595:36-2595:37
OPTIONAL, 2595:38-2595:46
ID("StructuredSerializeOptions"), 2595:47-2595:73
ID("options"), 2595:74-2595:81
EQUAL, 2595:82-2595:83
LBRACE, 2595:84-2595:85
RBRACE, 2595:85-2595:86
RPAREN, 2595:86-2595:87
SEMI, 2595:87-2595:88
UNDEFINED, 2596:3-2596:12
ID("start"), 2596:13-2596:18
LPAREN, 2596:18-2596:19
RPAREN, 2596:19-2596:20
SEMI, 2596:20-2596:21
UNDEFINED, 2597:3-2597:12
ID("close"), 2597:13-2597:18
LPAREN, 2597:18-2597:19
RPAREN, 2597:19-2597:20
SEMI, 2597:20-2597:21
ATTRIBUTE, 2600:3-2600:12
ID("EventHandler"), 2600:13-2600:25
ID("onclose"), 2600:26-2600:33
SEMI, 2600:33-2600:34
RBRACE, 2601:1-2601:2
SEMI, 2601:2-2601:3
ID("MessagePort"), 2603:1-2603:12
INCLUDES, 2603:13-2603:21
ID("MessageEventTarget"), 2603:22-2603:40
SEMI, 2603:40-2603:41
DICTIONARY, 2605:1-2605:11
ID("StructuredSerializeOptions"), 2605:12-2605:38
LBRACE, 2605:39-2605:40
SEQUENCE, 2606:3-2606:11
LT, 2606:11-2606:12
OBJECT, 2606:12-2606:18
GT, 2606:18-2606:19
ID("transfer"), 2606:20-2606:28
EQUAL, 2606:29-2606:30
LBRACKET, 2606:31-2606:32
RBRACKET, 2606:32-2606:33
SEMI, 2606:33-2606:34
RBRACE, 2607:1-2607:2
SEMI, 2607:2-2607:3
LBRACKET, 2609:1-2609:2
ID("Exposed"), 2609:2-2609:9
EQUAL, 2609:9-2609:10
LPAREN, 2609:10-2609:11
ID("Window"), 2609:11-2609:17
COMMA, 2609:17-2609:18
ID("Worker"), 2609:18-2609:24
RPAREN, 2609:24-2609:25
RBRACKET, 2609:25-2609:26
INTERFACE, 2610:1-2610:10
ID("BroadcastChannel"), 2610:11-2610:27
COLON, 2610:28-2610:29
ID("EventTarget"), 2610:30-2610:41
LBRACE, 2610:42-2610:43
CONSTRUCTOR, 2611:3-2611:14
LPAREN, 2611:14-2611:15
DOMSTRING, 2611:15-2611:24
ID("name"), 2611:25-2611:29
RPAREN, 2611:29-2611:30
SEMI, 2611:30-2611:31
READONLY, 2613:3-2613:11
ATTRIBUTE, 2613:12-2613:21
DOMSTRING, 2613:22-2613:31
ID("name"), 2613:32-2613:36
SEMI, 2613:36-2613:37
UNDEFINED, 2614:3-2614:12
ID("postMessage"), 2614:13-2614:24
LPAREN, 2614:24-2614:25
ANY, 2614:25-2614:28
ID("message"), 2614:29-2614:36
RPAREN, 2614:36-2614:37
SEMI, 2614:37-2614:38
UNDEFINED, 2615:3-2615:12
ID("close"), 2615:13-2615:18
LPAREN, 2615:18-2615:19
RPAREN, 2615:19-2615:20
SEMI, 2615:20-2615:21
ATTRIBUTE, 2616:3-2616:12
ID("EventHandler"), 2616:13-2616:25
ID("onmessage"), 2616:26-2616:35
SEMI, 2616:35-2616:36
ATTRIBUTE, 2617:3-2617:12
ID("EventHandler"), 2617:13-2617:25
ID("onmessageerror"), 2617:26-2617:40
SEMI, 2617:40-2617:41
RBRACE, 2618:1-2618:2
SEMI, 2618:2-2618:3
LBRACKET, 2620:1-2620:2
ID("Exposed"), 2620:2-2620:9
EQUAL, 2620:9-2620:10
ID("Worker"), 2620:10-2620:16
RBRACKET, 2620:16-2620:17
INTERFACE, 2621:1-2621:10
ID("WorkerGlobalScope"), 2621:11-2621:28
COLON, 2621:29-2621:30
ID("EventTarget"), 2621:31-2621:42
LBRACE, 2621:43-2621:44
READONLY, 2622:3-2622:11
ATTRIBUTE, 2622:12-2622:21
ID("WorkerGlobalScope"), 2622:22-2622:39
ID("self"), 2622:40-2622:44
SEMI, 2622:44-2622:45
READONLY, 2623:3-2623:11
ATTRIBUTE, 2623:12-2623:21
ID("WorkerLocation"), 2623:22-2623:36
ID("location"), 2623:37-2623:45
SEMI, 2623:45-2623:46
READONLY, 2624:3-2624:11
ATTRIBUTE, 2624:12-2624:21
ID("WorkerNavigator"), 2624:22-2624:37
ID("navigator"), 2624:38-2624:47
SEMI, 2624:47-2624:48
UNDEFINED, 2625:3-2625:12
ID("importScripts"), 2625:13-2625:26
LPAREN, 2625:26-2625:27
LPAREN, 2625:27-2625:28
ID("TrustedScriptURL"), 2625:28-2625:44
OR, 2625:45-2625:47
USVSTRING, 2625:48-2625:57
RPAREN, 2625:57-2625:58
ELLIPS, 2625:58-2625:61
ID("urls"), 2625:62-2625:66
RPAREN, 2625:66-2625:67
SEMI, 2625:67-2625:68
ATTRIBUTE, 2627:3-2627:12
ID("OnErrorEventHandler"), 2627:13-2627:32
ID("onerror"), 2627:33-2627:40
SEMI, 2627:40-2627:41
ATTRIBUTE, 2628:3-2628:12
ID("EventHandler"), 2628:13-2628:25
ID("onlanguagechange"), 2628:26-2628:42
SEMI, 2628:42-2628:43
ATTRIBUTE, 2629:3-2629:12
ID("EventHandler"), 2629:13-2629:25
ID("onoffline"), 2629:26-2629:35
SEMI, 2629:35-2629:36
ATTRIBUTE, 2630:3-2630:12
ID("EventHandler"), 2630:13-2630:25
ID("ononline"), 2630:26-2630:34
SEMI, 2630:34-2630:35
ATTRIBUTE, 2631:3-2631:12
ID("EventHandler"), 2631:13-2631:25
ID("onrejectionhandled"), 2631:26-2631:44
SEMI, 2631:44-2631:45
ATTRIBUTE, 2632:3-2632:12
ID("EventHandler"), 2632:13-2632:25
ID("onunhandledrejection"), 2632:26-2632:46
SEMI, 2632:46-2632:47
RBRACE, 2633:1-2633:2
SEMI, 2633:2-2633:3
LBRACKET, 2635:1-2635:2
ID("Global"), 2635:2-2635:8
EQUAL, 2635:8-2635:9
LPAREN, 2635:9-2635:10
ID("Worker"), 2635:10-2635:16
COMMA, 2635:16-2635:17
ID("DedicatedWorker"), 2635:17-2635:32
RPAREN, 2635:32-2635:33
COMMA, 2635:33-2635:34
ID("Exposed"), 2635:34-2635:41
EQUAL, 2635:41-2635:42
ID("DedicatedWorker"), 2635:42-2635:57
RBRACKET, 2635:57-2635:58
INTERFACE, 2636:1-2636:10
ID("DedicatedWorkerGlobalScope"), 2636:11-2636:37
COLON, 2636:38-2636:39
ID("WorkerGlobalScope"), 2636:40-2636:57
LBRACE, 2636:58-2636:59
LBRACKET, 2637:3-2637:4
ID("Replaceable"), 2637:4-2637:15
RBRACKET, 2637:15-2637:16
READONLY, 2637:17-2637:25
ATTRIBUTE, 2637:26-2637:35
DOMSTRING, 2637:36-2637:45
ID("name"), 2637:46-2637:50
SEMI, 2637:50-2637:51
UNDEFINED, 2639:3-2639:12
ID("postMessage"), 2639:13-2639:24
LPAREN, 2639:24-2639:25
ANY, 2639:25-2639:28
ID("message"), 2639:29-2639:36
COMMA, 2639:36-2639:37
SEQUENCE, 2639:38-2639:46
LT, 2639:46-2639:47
OBJECT, 2639:47-2639:53
GT, 2639:53-2639:54
ID("transfer"), 2639:55-2639:63
RPAREN, 2639:63-2639:64
SEMI, 2639:64-2639:65
UNDEFINED, 2640:3-2640:12
ID("postMessage"), 2640:13-2640:24
LPAREN, 2640:24-2640:25
ANY, 2640:25-2640:28
ID("message"), 2640:29-2640:36
COMMA, 2640:36-2640:37
OPTIONAL, 2640:38-2640:46
ID("StructuredSerializeOptions"), 2640:47-2640:73
ID("options"), 2640:74-2640:81
EQUAL, 2640:82-2640:83
LBRACE, 2640:84-2640:85
RBRACE, 2640:85-2640:86
RPAREN, 2640:86-2640:87
SEMI, 2640:87-2640:88
UNDEFINED, 2642:3-2642:12
ID("close"), 2642:13-2642:18
LPAREN, 2642:18-2642:19
RPAREN, 2642:19-2642:20
SEMI, 2642:20-2642:21
RBRACE, 2643:1-2643:2
SEMI, 2643:2-2643:3
ID("DedicatedWorkerGlobalScope"), 2645:1-2645:27
INCLUDES, 2645:28-2645:36
ID("MessageEventTarget"), 2645:37-2645:55
SEMI, 2645:55-2645:56
LBRACKET, 2647:1-2647:2
ID("Global"), 2647:2-2647:8
EQUAL, 2647:8-2647:9
LPAREN, 2647:9-2647:10
ID("Worker"), 2647:10-2647:16
COMMA, 2647:16-2647:17
ID("SharedWorker"), 2647:17-2647:29
RPAREN, 2647:29-2647:30
COMMA, 2647:30-2647:31
ID("Exposed"), 2647:31-2647:38
EQUAL, 2647:38-2647:39
ID("SharedWorker"), 2647:39-2647:51
RBRACKET, 2647:51-2647:52
INTERFACE, 2648:1-2648:10
ID("SharedWorkerGlobalScope"), 2648:11-2648:34
COLON, 2648:35-2648:36
ID("WorkerGlobalScope"), 2648:37-2648:54
LBRACE, 2648:55-2648:56
LBRACKET, 2649:3-2649:4
ID("Replaceable"), 2649:4-2649:15
RBRACKET, 2649:15-2649:16
READONLY, 2649:17-2649:25
ATTRIBUTE, 2649:26-2649:35
DOMSTRING, 2649:36-2649:45
ID("name"), 2649:46-2649:50
SEMI, 2649:50-2649:51
UNDEFINED, 2651:3-2651:12
ID("close"), 2651:13-2651:18
LPAREN, 2651:18-2651:19
RPAREN, 2651:19-2651:20
SEMI, 2651:20-2651:21
ATTRIBUTE, 2653:3-2653:12
ID("EventHandler"), 2653:13-2653:25
ID("onconnect"), 2653:26-2653:35
SEMI, 2653:35-2653:36
RBRACE, 2654:1-2654:2
SEMI, 2654:2-2654:3
INTERFACE, 2656:1-2656:10
MIXIN, 2656:11-2656:16
ID("AbstractWorker"), 2656:17-2656:31
LBRACE, 2656:32-2656:33
ATTRIBUTE, 2657:3-2657:12
ID("EventHandler"), 2657:13-2657:25
ID("onerror"), 2657:26-2657:33
SEMI, 2657:33-2657:34
RBRACE, 2658:1-2658:2
SEMI, 2658:2-2658:3
LBRACKET, 2660:1-2660:2
ID("Exposed"), 2660:2-2660:9
EQUAL, 2660:9-2660:10
LPAREN, 2660:10-2660:11
ID("Window"), 2660:11-2660:17
COMMA, 2660:17-2660:18
ID("DedicatedWorker"), 2660:18-2660:33
COMMA, 2660:33-2660:34
ID("SharedWorker"), 2660:34-2660:46
RPAREN, 2660:46-2660:47
RBRACKET, 2660:47-2660:48
INTERFACE, 2661:1-2661:10
ID("Worker"), 2661:11-2661:17
COLON, 2661:18-2661:19
ID("EventTarget"), 2661:20-2661:31
LBRACE, 2661:32-2661:33
CONSTRUCTOR, 2662:3-2662:14
LPAREN, 2662:14-2662:15
LPAREN, 2662:15-2662:16
ID("TrustedScriptURL"), 2662:16-2662:32
OR, 2662:33-2662:35
USVSTRING, 2662:36-2662:45
RPAREN, 2662:45-2662:46
ID("scriptURL"), 2662:47-2662:56
COMMA, 2662:56-2662:57
OPTIONAL, 2662:58-2662:66
ID("WorkerOptions"), 2662:67-2662:80
ID("options"), 2662:81-2662:88
EQUAL, 2662:89-2662:90
LBRACE, 2662:91-2662:92
RBRACE, 2662:92-2662:93
RPAREN, 2662:93-2662:94
SEMI, 2662:94-2662:95
UNDEFINED, 2664:3-2664:12
ID("terminate"), 2664:13-2664:22
LPAREN, 2664:22-2664:23
RPAREN, 2664:23-2664:24
SEMI, 2664:24-2664:25
UNDEFINED, 2666:3-2666:12
ID("postMessage"), 2666:13-2666:24
LPAREN, 2666:24-2666:25
ANY, 2666:25-2666:28
ID("message"), 2666:29-2666:36
COMMA, 2666:36-2666:37
SEQUENCE, 2666:38-2666:46
LT, 2666:46-2666:47
OBJECT, 2666:47-2666:53
GT, 2666:53-2666:54
ID("transfer"), 2666:55-2666:63
RPAREN, 2666:63-2666:64
SEMI, 2666:64-2666:65
UNDEFINED, 2667:3-2667:12
ID("postMessage"), 2667:13-2667:24
LPAREN, 2667:24-2667:25
ANY, 2667:25-2667:28
ID("message"), 2667:29-2667:36
COMMA, 2667:36-2667:37
OPTIONAL, 2667:38-2667:46
ID("StructuredSerializeOptions"), 2667:47-2667:73
ID("options"), 2667:74-2667:81
EQUAL, 2667:82-2667:83
LBRACE, 2667:84-2667:85
RBRACE, 2667:85-2667:86
RPAREN, 2667:86-2667:87
SEMI, 2667:87-2667:88
RBRACE, 2668:1-2668:2
SEMI, 2668:2-2668:3
DICTIONARY, 2670:1-2670:11
ID("WorkerOptions"), 2670:12-2670:25
LBRACE, 2670:26-2670:27
DOMSTRING, 2671:3-2671:12
ID("name"), 2671:13-2671:17
EQUAL, 2671:18-2671:19
STRING("\"\""), 2671:20-2671:22
SEMI, 2671:22-2671:23
ID("WorkerType"), 2672:3-2672:13
ID("type"), 2672:14-2672:18
EQUAL, 2672:19-2672:20
STRING("\"classic\""), 2672:21-2672:30
SEMI, 2672:30-2672:31
ID("RequestCredentials"), 2673:3-2673:21
ID("credentials"), 2673:22-2673:33
EQUAL, 2673:34-2673:35
STRING("\"same-origin\""), 2673:36-2673:49
SEMI, 2673:49-2673:50
RBRACE, 2674:1-2674:2
SEMI, 2674:2-2674:3
ENUM, 2676:1-2676:5
ID("WorkerType"), 2676:6-2676:16
LBRACE, 2676:17-2676:18
STRING("\"classic\""), 2676:19-2676:28
COMMA, 2676:28-2676:29
STRING("\"module\""), 2676:30-2676:38
RBRACE, 2676:39-2676:40
SEMI, 2676:40-2676:41
ID("Worker"), 2678:1-2678:7
INCLUDES, 2678:8-2678:16
ID("AbstractWorker"), 2678:17-2678:31
SEMI, 2678:31-2678:32
ID("Worker"), 2679:1-2679:7
INCLUDES, 2679:8-2679:16
ID("MessageEventTarget"), 2679:17-2679:35
SEMI, 2679:35-2679:36
LBRACKET, 2681:1-2681:2
ID("Exposed"), 2681:2-2681:9
EQUAL, 2681:9-2681:10
ID("Window"), 2681:10-2681:16
RBRACKET, 2681:16-2681:17
INTERFACE, 2682:1-2682:10
ID("SharedWorker"), 2682:11-2682:23
COLON, 2682:24-2682:25
ID("EventTarget"), 2682:26-2682:37
LBRACE, 2682:38-2682:39
CONSTRUCTOR, 2683:3-2683:14
LPAREN, 2683:14-2683:15
LPAREN, 2683:15-2683:16
ID("TrustedScriptURL"), 2683:16-2683:32
OR, 2683:33-2683:35
USVSTRING, 2683:36-2683:45
RPAREN, 2683:45-2683:46
ID("scriptURL"), 2683:47-2683:56
COMMA, 2683:56-2683:57
OPTIONAL, 2683:58-2683:66
LPAREN, 2683:67-2683:68
DOMSTRING, 2683:68-2683:77
OR, 2683:78-2683:80
ID("WorkerOptions"), 2683:81-2683:94
RPAREN, 2683:94-2683:95
ID("options"), 2683:96-2683:103
EQUAL, 2683:104-2683:105
LBRACE, 2683:106-2683:107
RBRACE, 2683:107-2683:108
RPAREN, 2683:108-2683:109
SEMI, 2683:109-2683:110
READONLY, 2685:3-2685:11
ATTRIBUTE, 2685:12-2685:21
ID("MessagePort"), 2685:22-2685:33
ID("port"), 2685:34-2685:38
SEMI, 2685:38-2685:39
RBRACE, 2686:1-2686:2
SEMI, 2686:2-2686:3
ID("SharedWorker"), 2687:1-2687:13
INCLUDES, 2687:14-2687:22
ID("AbstractWorker"), 2687:23-2687:37
SEMI, 2687:37-2687:38
INTERFACE, 2689:1-2689:10
MIXIN, 2689:11-2689:16
ID("NavigatorConcurrentHardware"), 2689:17-2689:44
LBRACE, 2689:45-2689:46
READONLY, 2690:3-2690:11
ATTRIBUTE, 2690:12-2690:21
UNSIGNED, 2690:22-2690:30
LONG, 2690:31-2690:35
LONG, 2690:36-2690:40
ID("hardwareConcurrency"), 2690:41-2690:60
SEMI, 2690:60-2690:61
RBRACE, 2691:1-2691:2
SEMI, 2691:2-2691:3
LBRACKET, 2693:1-2693:2
ID("Exposed"), 2693:2-2693:9
EQUAL, 2693:9-2693:10
ID("Worker"), 2693:10-2693:16
RBRACKET, 2693:16-2693:17
INTERFACE, 2694:1-2694:10
ID("WorkerNavigator"), 2694:11-2694:26
LBRACE, 2694:27-2694:28
RBRACE, 2694:28-2694:29
SEMI, 2694:29-2694:30
ID("WorkerNavigator"), 2695:1-2695:16
INCLUDES, 2695:17-2695:25
ID("NavigatorID"), 2695:26-2695:37
SEMI, 2695:37-2695:38
ID("WorkerNavigator"), 2696:1-2696:16
INCLUDES, 2696:17-2696:25
ID("NavigatorLanguage"), 2696:26-2696:43
SEMI, 2696:43-2696:44
ID("WorkerNavigator"), 2697:1-2697:16
INCLUDES, 2697:17-2697:25
ID("NavigatorOnLine"), 2697:26-2697:41
SEMI, 2697:41-2697:42
ID("WorkerNavigator"), 2698:1-2698:16
INCLUDES, 2698:17-2698:25
ID("NavigatorConcurrentHardware"), 2698:26-2698:53
SEMI, 2698:53-2698:54
LBRACKET, 2700:1-2700:2
ID("Exposed"), 2700:2-2700:9
EQUAL, 2700:9-2700:10
ID("Worker"), 2700:10-2700:16
RBRACKET, 2700:16-2700:17
INTERFACE, 2701:1-2701:10
ID("WorkerLocation"), 2701:11-2701:25
LBRACE, 2701:26-2701:27
STRINGIFIER, 2702:3-2702:14
READONLY, 2702:15-2702:23
ATTRIBUTE, 2702:24-2702:33
USVSTRING, 2702:34-2702:43
ID("href"), 2702:44-2702:48
SEMI, 2702:48-2702:49
READONLY, 2703:3-2703:11
ATTRIBUTE, 2703:12-2703:21
USVSTRING, 2703:22-2703:31
ID("origin"), 2703:32-2703:38
SEMI, 2703:38-2703:39
READONLY, 2704:3-2704:11
ATTRIBUTE, 2704:12-2704:21
USVSTRING, 2704:22-2704:31
ID("protocol"), 2704:32-2704:40
SEMI, 2704:40-2704:41
READONLY, 2705:3-2705:11
ATTRIBUTE, 2705:12-2705:21
USVSTRING, 2705:22-2705:31
ID("host"), 2705:32-2705:36
SEMI, 2705:36-2705:37
READONLY, 2706:3-2706:11
ATTRIBUTE, 2706:12-2706:21
USVSTRING, 2706:22-2706:31
ID("hostname"), 2706:32-2706:40
SEMI, 2706:40-2706:41
READONLY, 2707:3-2707:11
ATTRIBUTE, 2707:12-2707:21
USVSTRING, 2707:22-2707:31
ID("port"), 2707:32-2707:36
SEMI, 2707:36-2707:37
READONLY, 2708:3-2708:11
ATTRIBUTE, 2708:12-2708:21
USVSTRING, 2708:22-2708:31
ID("pathname"), 2708:32-2708:40
SEMI, 2708:40-2708:41
READONLY, 2709:3-2709:11
ATTRIBUTE, 2709:12-2709:21
USVSTRING, 2709:22-2709:31
ID("search"), 2709:32-2709:38
SEMI, 2709:38-2709:39
READONLY, 2710:3-2710:11
ATTRIBUTE, 2710:12-2710:21
USVSTRING, 2710:22-2710:31
ID("hash"), 2710:32-2710:36
SEMI, 2710:36-2710:37
RBRACE, 2711:1-2711:2
SEMI, 2711:2-2711:3
LBRACKET, 2713:1-2713:2
ID("Exposed"), 2713:2-2713:9
EQUAL, 2713:9-2713:10
ID("Worklet"), 2713:10-2713:17
COMMA, 2713:17-2713:18
ID("SecureContext"), 2713:19-2713:32
RBRACKET, 2713:32-2713:33
INTERFACE, 2714:1-2714:10
ID("WorkletGlobalScope"), 2714:11-2714:29
LBRACE, 2714:30-2714:31
RBRACE, 2714:31-2714:32
SEMI, 2714:32-2714:33
LBRACKET, 2716:1-2716:2
ID("Exposed"), 2716:2-2716:9
EQUAL, 2716:9-2716:10
ID("Window"), 2716:10-2716:16
COMMA, 2716:16-2716:17
ID("SecureContext"), 2716:18-2716:31
RBRACKET, 2716:31-2716:32
INTERFACE, 2717:1-2717:10
ID("Worklet"), 2717:11-2717:18
LBRACE, 2717:19-2717:20
LBRACKET, 2718:3-2718:4
ID("NewObject"), 2718:4-2718:13
RBRACKET, 2718:13-2718:14
PROMISE, 2718:15-2718:22
LT, 2718:22-2718:23
UNDEFINED, 2718:23-2718:32
GT, 2718:32-2718:33
ID("addModule"), 2718:34-2718:43
LPAREN, 2718:43-2718:44
USVSTRING, 2718:44-2718:53
ID("moduleURL"), 2718:54-2718:63
COMMA, 2718:63-2718:64
OPTIONAL, 2718:65-2718:73
ID("WorkletOptions"), 2718:74-2718:88
ID("options"), 2718:89-2718:96
EQUAL, 2718:97-2718:98
LBRACE, 2718:99-2718:100
RBRACE, 2718:100-2718:101
RPAREN, 2718:101-2718:102
SEMI, 2718:102-2718:103
RBRACE, 2719:1-2719:2
SEMI, 2719:2-2719:3
DICTIONARY, 2721:1-2721:11
ID("WorkletOptions"), 2721:12-2721:26
LBRACE, 2721:27-2721:28
ID("RequestCredentials"), 2722:3-2722:21
ID("credentials"), 2722:22-2722:33
EQUAL, 2722:34-2722:35
STRING("\"same-origin\""), 2722:36-2722:49
SEMI, 2722:49-2722:50
RBRACE, 2723:1-2723:2
SEMI, 2723:2-2723:3
LBRACKET, 2725:1-2725:2
ID("Exposed"), 2725:2-2725:9
EQUAL, 2725:9-2725:10
ID("Window"), 2725:10-2725:16
RBRACKET, 2725:16-2725:17
INTERFACE, 2726:1-2726:10
ID("Storage"), 2726:11-2726:18
LBRACE, 2726:19-2726:20
READONLY, 2727:3-2727:11
ATTRIBUTE, 2727:12-2727:21
UNSIGNED, 2727:22-2727:30
LONG, 2727:31-2727:35
ID("length"), 2727:36-2727:42
SEMI, 2727:42-2727:43
DOMSTRING, 2728:3-2728:12
QUESTION, 2728:12-2728:13
ID("key"), 2728:14-2728:17
LPAREN, 2728:17-2728:18
UNSIGNED, 2728:18-2728:26
LONG, 2728:27-2728:31
ID("index"), 2728:32-2728:37
RPAREN, 2728:37-2728:38
SEMI, 2728:38-2728:39
GETTER, 2729:3-2729:9
DOMSTRING, 2729:10-2729:19
QUESTION, 2729:19-2729:20
ID("getItem"), 2729:21-2729:28
LPAREN, 2729:28-2729:29
DOMSTRING, 2729:29-2729:38
ID("key"), 2729:39-2729:42
RPAREN, 2729:42-2729:43
SEMI, 2729:43-2729:44
SETTER, 2730:3-2730:9
UNDEFINED, 2730:10-2730:19
ID("setItem"), 2730:20-2730:27
LPAREN, 2730:27-2730:28
DOMSTRING, 2730:28-2730:37
ID("key"), 2730:38-2730:41
COMMA, 2730:41-2730:42
DOMSTRING, 2730:43-2730:52
ID("value"), 2730:53-2730:58
RPAREN, 2730:58-2730:59
SEMI, 2730:59-2730:60
DELETER, 2731:3-2731:10
UNDEFINED, 2731:11-2731:20
ID("removeItem"), 2731:21-2731:31
LPAREN, 2731:31-2731:32
DOMSTRING, 2731:32-2731:41
ID("key"), 2731:42-2731:45
RPAREN, 2731:45-2731:46
SEMI, 2731:46-2731:47
UNDEFINED, 2732:3-2732:12
ID("clear"), 2732:13-2732:18
LPAREN, 2732:18-2732:19
RPAREN, 2732:19-2732:20
SEMI, 2732:20-2732:21
RBRACE, 2733:1-2733:2
SEMI, 2733:2-2733:3
INTERFACE, 2735:1-2735:10
MIXIN, 2735:11-2735:16
ID("WindowSessionStorage"), 2735:17-2735:37
LBRACE, 2735:38-2735:39
READONLY, 2736:3-2736:11
ATTRIBUTE, 2736:12-2736:21
ID("Storage"), 2736:22-2736:29
ID("sessionStorage"), 2736:30-2736:44
SEMI, 2736:44-2736:45
RBRACE, 2737:1-2737:2
SEMI, 2737:2-2737:3
ID("Window"), 2738:1-2738:7
INCLUDES, 2738:8-2738:16
ID("WindowSessionStorage"), 2738:17-2738:37
SEMI, 2738:37-2738:38
INTERFACE, 2740:1-2740:10
MIXIN, 2740:11-2740:16
ID("WindowLocalStorage"), 2740:17-2740:35
LBRACE, 2740:36-2740:37
READONLY, 2741:3-2741:11
ATTRIBUTE, 2741:12-2741:21
ID("Storage"), 2741:22-2741:29
ID("localStorage"), 2741:30-2741:42
SEMI, 2741:42-2741:43
RBRACE, 2742:1-2742:2
SEMI, 2742:2-2742:3
ID("Window"), 2743:1-2743:7
INCLUDES, 2743:8-2743:16
ID("WindowLocalStorage"), 2743:17-2743:35
SEMI, 2743:35-2743:36
LBRACKET, 2745:1-2745:2
ID("Exposed"), 2745:2-2745:9
EQUAL, 2745:9-2745:10
ID("Window"), 2745:10-2745:16
RBRACKET, 2745:16-2745:17
INTERFACE, 2746:1-2746:10
ID("StorageEvent"), 2746:11-2746:23
COLON, 2746:24-2746:25
ID("Event"), 2746:26-2746:31
LBRACE, 2746:32-2746:33
CONSTRUCTOR, 2747:3-2747:14
LPAREN, 2747:14-2747:15
DOMSTRING, 2747:15-2747:24
ID("type"), 2747:25-2747:29
COMMA, 2747:29-2747:30
OPTIONAL, 2747:31-2747:39
ID("StorageEventInit"), 2747:40-2747:56
ID("eventInitDict"), 2747:57-2747:70
EQUAL, 2747:71-2747:72
LBRACE, 2747:73-2747:74
RBRACE, 2747:74-2747:75
RPAREN, 2747:75-2747:76
SEMI, 2747:76-2747:77
READONLY, 2749:3-2749:11
ATTRIBUTE, 2749:12-2749:21
DOMSTRING, 2749:22-2749:31
QUESTION, 2749:31-2749:32
ID("key"), 2749:33-2749:36
SEMI, 2749:36-2749:37
READONLY, 2750:3-2750:11
ATTRIBUTE, 2750:12-2750:21
DOMSTRING, 2750:22-2750:31
QUESTION, 2750:31-2750:32
ID("oldValue"), 2750:33-2750:41
SEMI, 2750:41-2750:42
READONLY, 2751:3-2751:11
ATTRIBUTE, 2751:12-2751:21
DOMSTRING, 2751:22-2751:31
QUESTION, 2751:31-2751:32
ID("newValue"), 2751:33-2751:41
SEMI, 2751:41-2751:42
READONLY, 2752:3-2752:11
ATTRIBUTE, 2752:12-2752:21
USVSTRING, 2752:22-2752:31
ID("url"), 2752:32-2752:35
SEMI, 2752:35-2752:36
READONLY, 2753:3-2753:11
ATTRIBUTE, 2753:12-2753:21
ID("Storage"), 2753:22-2753:29
QUESTION, 2753:29-2753:30
ID("storageArea"), 2753:31-2753:42
SEMI, 2753:42-2753:43
UNDEFINED, 2755:3-2755:12
ID("initStorageEvent"), 2755:13-2755:29
LPAREN, 2755:29-2755:30
DOMSTRING, 2755:30-2755:39
ID("type"), 2755:40-2755:44
COMMA, 2755:44-2755:45
OPTIONAL, 2755:46-2755:54
BOOLEAN, 2755:55-2755:62
ID("bubbles"), 2755:63-2755:70
EQUAL, 2755:71-2755:72
FALSE, 2755:73-2755:78
COMMA, 2755:78-2755:79
OPTIONAL, 2755:80-2755:88
BOOLEAN, 2755:89-2755:96
ID("cancelable"), 2755:97-2755:107
EQUAL, 2755:108-2755:109
FALSE, 2755:110-2755:115
COMMA, 2755:115-2755:116
OPTIONAL, 2755:117-2755:125
DOMSTRING, 2755:126-2755:135
QUESTION, 2755:135-2755:136
ID("key"), 2755:137-2755:140
EQUAL, 2755:141-2755:142
NULL, 2755:143-2755:147
COMMA, 2755:147-2755:148
OPTIONAL, 2755:149-2755:157
DOMSTRING, 2755:158-2755:167
QUESTION, 2755:167-2755:168
ID("oldValue"), 2755:169-2755:177
EQUAL, 2755:178-2755:179
NULL, 2755:180-2755:184
COMMA, 2755:184-2755:185
OPTIONAL, 2755:186-2755:194
DOMSTRING, 2755:195-2755:204
QUESTION, 2755:204-2755:205
ID("newValue"), 2755:206-2755:214
EQUAL, 2755:215-2755:216
NULL, 2755:217-2755:221
COMMA, 2755:221-2755:222
OPTIONAL, 2755:223-2755:231
USVSTRING, 2755:232-2755:241
ID("url"), 2755:242-2755:245
EQUAL, 2755:246-2755:247
STRING("\"\""), 2755:248-2755:250
COMMA, 2755:250-2755:251
OPTIONAL, 2755:252-2755:260
ID("Storage"), 2755:261-2755:268
QUESTION, 2755:268-2755:269
ID("storageArea"), 2755:270-2755:281
EQUAL, 2755:282-2755:283
NULL, 2755:284-2755:288
RPAREN, 2755:288-2755:289
SEMI, 2755:289-2755:290
RBRACE, 2756:1-2756:2
SEMI, 2756:2-2756:3
DICTIONARY, 2758:1-2758:11
ID("StorageEventInit"), 2758:12-2758:28
COLON, 2758:29-2758:30
ID("EventInit"), 2758:31-2758:40
LBRACE, 2758:41-2758:42
DOMSTRING, 2759:3-2759:12
QUESTION, 2759:12-2759:13
ID("key"), 2759:14-2759:17
EQUAL, 2759:18-2759:19
NULL, 2759:20-2759:24
SEMI, 2759:24-2759:25
DOMSTRING, 2760:3-2760:12
QUESTION, 2760:12-2760:13
ID("oldValue"), 2760:14-2760:22
EQUAL, 2760:23-2760:24
NULL, 2760:25-2760:29
SEMI, 2760:29-2760:30
DOMSTRING, 2761:3-2761:12
QUESTION, 2761:12-2761:13
ID("newValue"), 2761:14-2761:22
EQUAL, 2761:23-2761:24
NULL, 2761:25-2761:29
SEMI, 2761:29-2761:30
USVSTRING, 2762:3-2762:12
ID("url"), 2762:13-2762:16
EQUAL, 2762:17-2762:18
STRING("\"\""), 2762:19-2762:21
SEMI, 2762:21-2762:22
ID("Storage"), 2763:3-2763:10
QUESTION, 2763:10-2763:11
ID("storageArea"), 2763:12-2763:23
EQUAL, 2763:24-2763:25
NULL, 2763:26-2763:30
SEMI, 2763:30-2763:31
RBRACE, 2764:1-2764:2
SEMI, 2764:2-2764:3
LBRACKET, 2766:1-2766:2
ID("Exposed"), 2766:2-2766:9
EQUAL, 2766:9-2766:10
ID("Window"), 2766:10-2766:16
RBRACKET, 2766:16-2766:17
INTERFACE, 2767:1-2767:10
ID("HTMLMarqueeElement"), 2767:11-2767:29
COLON, 2767:30-2767:31
ID("HTMLElement"), 2767:32-2767:43
LBRACE, 2767:44-2767:45
LBRACKET, 2768:3-2768:4
ID("HTMLConstructor"), 2768:4-2768:19
RBRACKET, 2768:19-2768:20
CONSTRUCTOR, 2768:21-2768:32
LPAREN, 2768:32-2768:33
RPAREN, 2768:33-2768:34
SEMI, 2768:34-2768:35
LBRACKET, 2770:3-2770:4
ID("CEReactions"), 2770:4-2770:15
COMMA, 2770:15-2770:16
ID("Reflect"), 2770:17-2770:24
RBRACKET, 2770:24-2770:25
ATTRIBUTE, 2770:26-2770:35
DOMSTRING, 2770:36-2770:45
ID("behavior"), 2770:46-2770:54
SEMI, 2770:54-2770:55
LBRACKET, 2771:3-2771:4
ID("CEReactions"), 2771:4-2771:15
COMMA, 2771:15-2771:16
ID("Reflect"), 2771:17-2771:24
RBRACKET, 2771:24-2771:25
ATTRIBUTE, 2771:26-2771:35
DOMSTRING, 2771:36-2771:45
ID("bgColor"), 2771:46-2771:53
SEMI, 2771:53-2771:54
LBRACKET, 2772:3-2772:4
ID("CEReactions"), 2772:4-2772:15
COMMA, 2772:15-2772:16
ID("Reflect"), 2772:17-2772:24
RBRACKET, 2772:24-2772:25
ATTRIBUTE, 2772:26-2772:35
DOMSTRING, 2772:36-2772:45
ID("direction"), 2772:46-2772:55
SEMI, 2772:55-2772:56
LBRACKET, 2773:3-2773:4
ID("CEReactions"), 2773:4-2773:15
COMMA, 2773:15-2773:16
ID("Reflect"), 2773:17-2773:24
RBRACKET, 2773:24-2773:25
ATTRIBUTE, 2773:26-2773:35
DOMSTRING, 2773:36-2773:45
ID("height"), 2773:46-2773:52
SEMI, 2773:52-2773:53
LBRACKET, 2774:3-2774:4
ID("CEReactions"), 2774:4-2774:15
COMMA, 2774:15-2774:16
ID("Reflect"), 2774:17-2774:24
RBRACKET, 2774:24-2774:25
ATTRIBUTE, 2774:26-2774:35
UNSIGNED, 2774:36-2774:44
LONG, 2774:45-2774:49
ID("hspace"), 2774:50-2774:56
SEMI, 2774:56-2774:57
LBRACKET, 2775:3-2775:4
ID("CEReactions"), 2775:4-2775:15
RBRACKET, 2775:15-2775:16
ATTRIBUTE, 2775:17-2775:26
LONG, 2775:27-2775:31
ID("loop"), 2775:32-2775:36
SEMI, 2775:36-2775:37
LBRACKET, 2776:3-2776:4
ID("CEReactions"), 2776:4-2776:15
COMMA, 2776:15-2776:16
ID("Reflect"), 2776:17-2776:24
COMMA, 2776:24-2776:25
ID("ReflectDefault"), 2776:26-2776:40
EQUAL, 2776:40-2776:41
INT("6"), 2776:41-2776:42
RBRACKET, 2776:42-2776:43
ATTRIBUTE, 2776:44-2776:53
UNSIGNED, 2776:54-2776:62
LONG, 2776:63-2776:67
ID("scrollAmount"), 2776:68-2776:80
SEMI, 2776:80-2776:81
LBRACKET, 2777:3-2777:4
ID("CEReactions"), 2777:4-2777:15
COMMA, 2777:15-2777:16
ID("Reflect"), 2777:17-2777:24
COMMA, 2777:24-2777:25
ID("ReflectDefault"), 2777:26-2777:40
EQUAL, 2777:40-2777:41
INT("85"), 2777:41-2777:43
RBRACKET, 2777:43-2777:44
ATTRIBUTE, 2777:45-2777:54
UNSIGNED, 2777:55-2777:63
LONG, 2777:64-2777:68
ID("scrollDelay"), 2777:69-2777:80
SEMI, 2777:80-2777:81
LBRACKET, 2778:3-2778:4
ID("CEReactions"), 2778:4-2778:15
COMMA, 2778:15-2778:16
ID("Reflect"), 2778:17-2778:24
RBRACKET, 2778:24-2778:25
ATTRIBUTE, 2778:26-2778:35
BOOLEAN, 2778:36-2778:43
ID("trueSpeed"), 2778:44-2778:53
SEMI, 2778:53-2778:54
LBRACKET, 2779:3-2779:4
ID("CEReactions"), 2779:4-2779:15
COMMA, 2779:15-2779:16
ID("Reflect"), 2779:17-2779:24
RBRACKET, 2779:24-2779:25
ATTRIBUTE, 2779:26-2779:35
UNSIGNED, 2779:36-2779:44
LONG, 2779:45-2779:49
ID("vspace"), 2779:50-2779:56
SEMI, 2779:56-2779:57
LBRACKET, 2780:3-2780:4
ID("CEReactions"), 2780:4-2780:15
COMMA, 2780:15-2780:16
ID("Reflect"), 2780:17-2780:24
RBRACKET, 2780:24-2780:25
ATTRIBUTE, 2780:26-2780:35
DOMSTRING, 2780:36-2780:45
ID("width"), 2780:46-2780:51
SEMI, 2780:51-2780:52
UNDEFINED, 2782:3-2782:12
ID("start"), 2782:13-2782:18
LPAREN, 2782:18-2782:19
RPAREN, 2782:19-2782:20
SEMI, 2782:20-2782:21
UNDEFINED, 2783:3-2783:12
ID("stop"), 2783:13-2783:17
LPAREN, 2783:17-2783:18
RPAREN, 2783:18-2783:19
SEMI, 2783:19-2783:20
RBRACE, 2784:1-2784:2
SEMI, 2784:2-2784:3
LBRACKET, 2786:1-2786:2
ID("Exposed"), 2786:2-2786:9
EQUAL, 2786:9-2786:10
ID("Window"), 2786:10-2786:16
RBRACKET, 2786:16-2786:17
INTERFACE, 2787:1-2787:10
ID("HTMLFrameSetElement"), 2787:11-2787:30
COLON, 2787:31-2787:32
ID("HTMLElement"), 2787:33-2787:44
LBRACE, 2787:45-2787:46
LBRACKET, 2788:3-2788:4
ID("HTMLConstructor"), 2788:4-2788:19
RBRACKET, 2788:19-2788:20
CONSTRUCTOR, 2788:21-2788:32
LPAREN, 2788:32-2788:33
RPAREN, 2788:33-2788:34
SEMI, 2788:34-2788:35
LBRACKET, 2790:3-2790:4
ID("CEReactions"), 2790:4-2790:15
COMMA, 2790:15-2790:16
ID("Reflect"), 2790:17-2790:24
RBRACKET, 2790:24-2790:25
ATTRIBUTE, 2790:26-2790:35
DOMSTRING, 2790:36-2790:45
ID("cols"), 2790:46-2790:50
SEMI, 2790:50-2790:51
LBRACKET, 2791:3-2791:4
ID("CEReactions"), 2791:4-2791:15
COMMA, 2791:15-2791:16
ID("Reflect"), 2791:17-2791:24
RBRACKET, 2791:24-2791:25
ATTRIBUTE, 2791:26-2791:35
DOMSTRING, 2791:36-2791:45
ID("rows"), 2791:46-2791:50
SEMI, 2791:50-2791:51
RBRACE, 2792:1-2792:2
SEMI, 2792:2-2792:3
ID("HTMLFrameSetElement"), 2793:1-2793:20
INCLUDES, 2793:21-2793:29
ID("WindowEventHandlers"), 2793:30-2793:49
SEMI, 2793:49-2793:50
LBRACKET, 2795:1-2795:2
ID("Exposed"), 2795:2-2795:9
EQUAL, 2795:9-2795:10
ID("Window"), 2795:10-2795:16
RBRACKET, 2795:16-2795:17
INTERFACE, 2796:1-2796:10
ID("HTMLFrameElement"), 2796:11-2796:27
COLON, 2796:28-2796:29
ID("HTMLElement"), 2796:30-2796:41
LBRACE, 2796:42-2796:43
LBRACKET, 2797:3-2797:4
ID("HTMLConstructor"), 2797:4-2797:19
RBRACKET, 2797:19-2797:20
CONSTRUCTOR, 2797:21-2797:32
LPAREN, 2797:32-2797:33
RPAREN, 2797:33-2797:34
SEMI, 2797:34-2797:35
LBRACKET, 2799:3-2799:4
ID("CEReactions"), 2799:4-2799:15
COMMA, 2799:15-2799:16
ID("Reflect"), 2799:17-2799:24
RBRACKET, 2799:24-2799:25
ATTRIBUTE, 2799:26-2799:35
DOMSTRING, 2799:36-2799:45
ID("name"), 2799:46-2799:50
SEMI, 2799:50-2799:51
LBRACKET, 2800:3-2800:4
ID("CEReactions"), 2800:4-2800:15
COMMA, 2800:15-2800:16
ID("Reflect"), 2800:17-2800:24
RBRACKET, 2800:24-2800:25
ATTRIBUTE, 2800:26-2800:35
DOMSTRING, 2800:36-2800:45
ID("scrolling"), 2800:46-2800:55
SEMI, 2800:55-2800:56
LBRACKET, 2801:3-2801:4
ID("CEReactions"), 2801:4-2801:15
COMMA, 2801:15-2801:16
ID("ReflectURL"), 2801:17-2801:27
RBRACKET, 2801:27-2801:28
ATTRIBUTE, 2801:29-2801:38
USVSTRING, 2801:39-2801:48
ID("src"), 2801:49-2801:52
SEMI, 2801:52-2801:53
LBRACKET, 2802:3-2802:4
ID("CEReactions"), 2802:4-2802:15
COMMA, 2802:15-2802:16
ID("Reflect"), 2802:17-2802:24
RBRACKET, 2802:24-2802:25
ATTRIBUTE, 2802:26-2802:35
DOMSTRING, 2802:36-2802:45
ID("frameBorder"), 2802:46-2802:57
SEMI, 2802:57-2802:58
LBRACKET, 2803:3-2803:4
ID("CEReactions"), 2803:4-2803:15
COMMA, 2803:15-2803:16
ID("ReflectURL"), 2803:17-2803:27
RBRACKET, 2803:27-2803:28
ATTRIBUTE, 2803:29-2803:38
USVSTRING, 2803:39-2803:48
ID("longDesc"), 2803:49-2803:57
SEMI, 2803:57-2803:58
LBRACKET, 2804:3-2804:4
ID("CEReactions"), 2804:4-2804:15
COMMA, 2804:15-2804:16
ID("Reflect"), 2804:17-2804:24
RBRACKET, 2804:24-2804:25
ATTRIBUTE, 2804:26-2804:35
BOOLEAN, 2804:36-2804:43
ID("noResize"), 2804:44-2804:52
SEMI, 2804:52-2804:53
READONLY, 2805:3-2805:11
ATTRIBUTE, 2805:12-2805:21
ID("Document"), 2805:22-2805:30
QUESTION, 2805:30-2805:31
ID("contentDocument"), 2805:32-2805:47
SEMI, 2805:47-2805:48
READONLY, 2806:3-2806:11
ATTRIBUTE, 2806:12-2806:21
ID("WindowProxy"), 2806:22-2806:33
QUESTION, 2806:33-2806:34
ID("contentWindow"), 2806:35-2806:48
SEMI, 2806:48-2806:49
LBRACKET, 2808:3-2808:4
ID("CEReactions"), 2808:4-2808:15
COMMA, 2808:15-2808:16
ID("Reflect"), 2808:17-2808:24
RBRACKET, 2808:24-2808:25
ATTRIBUTE, 2808:26-2808:35
LBRACKET, 2808:36-2808:37
ID("LegacyNullToEmptyString"), 2808:37-2808:60
RBRACKET, 2808:60-2808:61
DOMSTRING, 2808:62-2808:71
ID("marginHeight"), 2808:72-2808:84
SEMI, 2808:84-2808:85
LBRACKET, 2809:3-2809:4
ID("CEReactions"), 2809:4-2809:15
COMMA, 2809:15-2809:16
ID("Reflect"), 2809:17-2809:24
RBRACKET, 2809:24-2809:25
ATTRIBUTE, 2809:26-2809:35
LBRACKET, 2809:36-2809:37
ID("LegacyNullToEmptyString"), 2809:37-2809:60
RBRACKET, 2809:60-2809:61
DOMSTRING, 2809:62-2809:71
ID("marginWidth"), 2809:72-2809:83
SEMI, 2809:83-2809:84
RBRACE, 2810:1-2810:2
SEMI, 2810:2-2810:3
PARTIAL, 2812:1-2812:8
INTERFACE, 2812:9-2812:18
ID("HTMLAnchorElement"), 2812:19-2812:36
LBRACE, 2812:37-2812:38
LBRACKET, 2813:3-2813:4
ID("CEReactions"), 2813:4-2813:15
COMMA, 2813:15-2813:16
ID("Reflect"), 2813:17-2813:24
RBRACKET, 2813:24-2813:25
ATTRIBUTE, 2813:26-2813:35
DOMSTRING, 2813:36-2813:45
ID("coords"), 2813:46-2813:52
SEMI, 2813:52-2813:53
LBRACKET, 2814:3-2814:4
ID("CEReactions"), 2814:4-2814:15
COMMA, 2814:15-2814:16
ID("Reflect"), 2814:17-2814:24
RBRACKET, 2814:24-2814:25
ATTRIBUTE, 2814:26-2814:35
DOMSTRING, 2814:36-2814:45
ID("charset"), 2814:46-2814:53
SEMI, 2814:53-2814:54
LBRACKET, 2815:3-2815:4
ID("CEReactions"), 2815:4-2815:15
COMMA, 2815:15-2815:16
ID("Reflect"), 2815:17-2815:24
RBRACKET, 2815:24-2815:25
ATTRIBUTE, 2815:26-2815:35
DOMSTRING, 2815:36-2815:45
ID("name"), 2815:46-2815:50
SEMI, 2815:50-2815:51
LBRACKET, 2816:3-2816:4
ID("CEReactions"), 2816:4-2816:15
COMMA, 2816:15-2816:16
ID("Reflect"), 2816:17-2816:24
RBRACKET, 2816:24-2816:25
ATTRIBUTE, 2816:26-2816:35
DOMSTRING, 2816:36-2816:45
ID("rev"), 2816:46-2816:49
SEMI, 2816:49-2816:50
LBRACKET, 2817:3-2817:4
ID("CEReactions"), 2817:4-2817:15
COMMA, 2817:15-2817:16
ID("Reflect"), 2817:17-2817:24
RBRACKET, 2817:24-2817:25
ATTRIBUTE, 2817:26-2817:35
DOMSTRING, 2817:36-2817:45
ID("shape"), 2817:46-2817:51
SEMI, 2817:51-2817:52
RBRACE, 2818:1-2818:2
SEMI, 2818:2-2818:3
PARTIAL, 2820:1-2820:8
INTERFACE, 2820:9-2820:18
ID("HTMLAreaElement"), 2820:19-2820:34
LBRACE, 2820:35-2820:36
LBRACKET, 2821:3-2821:4
ID("CEReactions"), 2821:4-2821:15
COMMA, 2821:15-2821:16
ID("Reflect"), 2821:17-2821:24
RBRACKET, 2821:24-2821:25
ATTRIBUTE, 2821:26-2821:35
BOOLEAN, 2821:36-2821:43
ID("noHref"), 2821:44-2821:50
SEMI, 2821:50-2821:51
RBRACE, 2822:1-2822:2
SEMI, 2822:2-2822:3
PARTIAL, 2824:1-2824:8
INTERFACE, 2824:9-2824:18
ID("HTMLBodyElement"), 2824:19-2824:34
LBRACE, 2824:35-2824:36
LBRACKET, 2825:3-2825:4
ID("CEReactions"), 2825:4-2825:15
COMMA, 2825:15-2825:16
ID("Reflect"), 2825:17-2825:24
RBRACKET, 2825:24-2825:25
ATTRIBUTE, 2825:26-2825:35
LBRACKET, 2825:36-2825:37
ID("LegacyNullToEmptyString"), 2825:37-2825:60
RBRACKET, 2825:60-2825:61
DOMSTRING, 2825:62-2825:71
ID("text"), 2825:72-2825:76
SEMI, 2825:76-2825:77
LBRACKET, 2826:3-2826:4
ID("CEReactions"), 2826:4-2826:15
COMMA, 2826:15-2826:16
ID("Reflect"), 2826:17-2826:24
RBRACKET, 2826:24-2826:25
ATTRIBUTE, 2826:26-2826:35
LBRACKET, 2826:36-2826:37
ID("LegacyNullToEmptyString"), 2826:37-2826:60
RBRACKET, 2826:60-2826:61
DOMSTRING, 2826:62-2826:71
ID("link"), 2826:72-2826:76
SEMI, 2826:76-2826:77
LBRACKET, 2827:3-2827:4
ID("CEReactions"), 2827:4-2827:15
COMMA, 2827:15-2827:16
ID("Reflect"), 2827:17-2827:24
RBRACKET, 2827:24-2827:25
ATTRIBUTE, 2827:26-2827:35
LBRACKET, 2827:36-2827:37
ID("LegacyNullToEmptyString"), 2827:37-2827:60
RBRACKET, 2827:60-2827:61
DOMSTRING, 2827:62-2827:71
ID("vLink"), 2827:72-2827:77
SEMI, 2827:77-2827:78
LBRACKET, 2828:3-2828:4
ID("CEReactions"), 2828:4-2828:15
COMMA, 2828:15-2828:16
ID("Reflect"), 2828:17-2828:24
RBRACKET, 2828:24-2828:25
ATTRIBUTE, 2828:26-2828:35
LBRACKET, 2828:36-2828:37
ID("LegacyNullToEmptyString"), 2828:37-2828:60
RBRACKET, 2828:60-2828:61
DOMSTRING, 2828:62-2828:71
ID("aLink"), 2828:72-2828:77
SEMI, 2828:77-2828:78
LBRACKET, 2829:3-2829:4
ID("CEReactions"), 2829:4-2829:15
COMMA, 2829:15-2829:16
ID("Reflect"), 2829:17-2829:24
RBRACKET, 2829:24-2829:25
ATTRIBUTE, 2829:26-2829:35
LBRACKET, 2829:36-2829:37
ID("LegacyNullToEmptyString"), 2829:37-2829:60
RBRACKET, 2829:60-2829:61
DOMSTRING, 2829:62-2829:71
ID("bgColor"), 2829:72-2829:79
SEMI, 2829:79-2829:80
LBRACKET, 2830:3-2830:4
ID("CEReactions"), 2830:4-2830:15
COMMA, 2830:15-2830:16
ID("Reflect"), 2830:17-2830:24
RBRACKET, 2830:24-2830:25
ATTRIBUTE, 2830:26-2830:35
DOMSTRING, 2830:36-2830:45
ID("background"), 2830:46-2830:56
SEMI, 2830:56-2830:57
RBRACE, 2831:1-2831:2
SEMI, 2831:2-2831:3
PARTIAL, 2833:1-2833:8
INTERFACE, 2833:9-2833:18
ID("HTMLBRElement"), 2833:19-2833:32
LBRACE, 2833:33-2833:34
LBRACKET, 2834:3-2834:4
ID("CEReactions"), 2834:4-2834:15
COMMA, 2834:15-2834:16
ID("Reflect"), 2834:17-2834:24
RBRACKET, 2834:24-2834:25
ATTRIBUTE, 2834:26-2834:35
DOMSTRING, 2834:36-2834:45
ID("clear"), 2834:46-2834:51
SEMI, 2834:51-2834:52
RBRACE, 2835:1-2835:2
SEMI, 2835:2-2835:3
PARTIAL, 2837:1-2837:8
INTERFACE, 2837:9-2837:18
ID("HTMLTableCaptionElement"), 2837:19-2837:42
LBRACE, 2837:43-2837:44
LBRACKET, 2838:3-2838:4
ID("CEReactions"), 2838:4-2838:15
COMMA, 2838:15-2838:16
ID("Reflect"), 2838:17-2838:24
RBRACKET, 2838:24-2838:25
ATTRIBUTE, 2838:26-2838:35
DOMSTRING, 2838:36-2838:45
ID("align"), 2838:46-2838:51
SEMI, 2838:51-2838:52
RBRACE, 2839:1-2839:2
SEMI, 2839:2-2839:3
PARTIAL, 2841:1-2841:8
INTERFACE, 2841:9-2841:18
ID("HTMLTableColElement"), 2841:19-2841:38
LBRACE, 2841:39-2841:40
LBRACKET, 2842:3-2842:4
ID("CEReactions"), 2842:4-2842:15
COMMA, 2842:15-2842:16
ID("Reflect"), 2842:17-2842:24
RBRACKET, 2842:24-2842:25
ATTRIBUTE, 2842:26-2842:35
DOMSTRING, 2842:36-2842:45
ID("align"), 2842:46-2842:51
SEMI, 2842:51-2842:52
LBRACKET, 2843:3-2843:4
ID("CEReactions"), 2843:4-2843:15
COMMA, 2843:15-2843:16
ID("Reflect"), 2843:17-2843:24
EQUAL, 2843:24-2843:25
STRING("\"char\""), 2843:25-2843:31
RBRACKET, 2843:31-2843:32
ATTRIBUTE, 2843:33-2843:42
DOMSTRING, 2843:43-2843:52
ID("ch"), 2843:53-2843:55
SEMI, 2843:55-2843:56
LBRACKET, 2844:3-2844:4
ID("CEReactions"), 2844:4-2844:15
COMMA, 2844:15-2844:16
ID("Reflect"), 2844:17-2844:24
EQUAL, 2844:24-2844:25
STRING("\"charoff\""), 2844:25-2844:34
RBRACKET, 2844:34-2844:35
ATTRIBUTE, 2844:36-2844:45
DOMSTRING, 2844:46-2844:55
ID("chOff"), 2844:56-2844:61
SEMI, 2844:61-2844:62
LBRACKET, 2845:3-2845:4
ID("CEReactions"), 2845:4-2845:15
COMMA, 2845:15-2845:16
ID("Reflect"), 2845:17-2845:24
RBRACKET, 2845:24-2845:25
ATTRIBUTE, 2845:26-2845:35
DOMSTRING, 2845:36-2845:45
ID("vAlign"), 2845:46-2845:52
SEMI, 2845:52-2845:53
LBRACKET, 2846:3-2846:4
ID("CEReactions"), 2846:4-2846:15
COMMA, 2846:15-2846:16
ID("Reflect"), 2846:17-2846:24
RBRACKET, 2846:24-2846:25
ATTRIBUTE, 2846:26-2846:35
DOMSTRING, 2846:36-2846:45
ID("width"), 2846:46-2846:51
SEMI, 2846:51-2846:52
RBRACE, 2847:1-2847:2
SEMI, 2847:2-2847:3
LBRACKET, 2849:1-2849:2
ID("Exposed"), 2849:2-2849:9
EQUAL, 2849:9-2849:10
ID("Window"), 2849:10-2849:16
RBRACKET, 2849:16-2849:17
INTERFACE, 2850:1-2850:10
ID("HTMLDirectoryElement"), 2850:11-2850:31
COLON, 2850:32-2850:33
ID("HTMLElement"), 2850:34-2850:45
LBRACE, 2850:46-2850:47
LBRACKET, 2851:3-2851:4
ID("HTMLConstructor"), 2851:4-2851:19
RBRACKET, 2851:19-2851:20
CONSTRUCTOR, 2851:21-2851:32
LPAREN, 2851:32-2851:33
RPAREN, 2851:33-2851:34
SEMI, 2851:34-2851:35
LBRACKET, 2853:3-2853:4
ID("CEReactions"), 2853:4-2853:15
COMMA, 2853:15-2853:16
ID("Reflect"), 2853:17-2853:24
RBRACKET, 2853:24-2853:25
ATTRIBUTE, 2853:26-2853:35
BOOLEAN, 2853:36-2853:43
ID("compact"), 2853:44-2853:51
SEMI, 2853:51-2853:52
RBRACE, 2854:1-2854:2
SEMI, 2854:2-2854:3
PARTIAL, 2856:1-2856:8
INTERFACE, 2856:9-2856:18
ID("HTMLDivElement"), 2856:19-2856:33
LBRACE, 2856:34-2856:35
LBRACKET, 2857:3-2857:4
ID("CEReactions"), 2857:4-2857:15
COMMA, 2857:15-2857:16
ID("Reflect"), 2857:17-2857:24
RBRACKET, 2857:24-2857:25
ATTRIBUTE, 2857:26-2857:35
DOMSTRING, 2857:36-2857:45
ID("align"), 2857:46-2857:51
SEMI, 2857:51-2857:52
RBRACE, 2858:1-2858:2
SEMI, 2858:2-2858:3
PARTIAL, 2860:1-2860:8
INTERFACE, 2860:9-2860:18
ID("HTMLDListElement"), 2860:19-2860:35
LBRACE, 2860:36-2860:37
LBRACKET, 2861:3-2861:4
ID("CEReactions"), 2861:4-2861:15
COMMA, 2861:15-2861:16
ID("Reflect"), 2861:17-2861:24
RBRACKET, 2861:24-2861:25
ATTRIBUTE, 2861:26-2861:35
BOOLEAN, 2861:36-2861:43
ID("compact"), 2861:44-2861:51
SEMI, 2861:51-2861:52
RBRACE, 2862:1-2862:2
SEMI, 2862:2-2862:3
PARTIAL, 2864:1-2864:8
INTERFACE, 2864:9-2864:18
ID("HTMLEmbedElement"), 2864:19-2864:35
LBRACE, 2864:36-2864:37
LBRACKET, 2865:3-2865:4
ID("CEReactions"), 2865:4-2865:15
COMMA, 2865:15-2865:16
ID("Reflect"), 2865:17-2865:24
RBRACKET, 2865:24-2865:25
ATTRIBUTE, 2865:26-2865:35
DOMSTRING, 2865:36-2865:45
ID("align"), 2865:46-2865:51
SEMI, 2865:51-2865:52
LBRACKET, 2866:3-2866:4
ID("CEReactions"), 2866:4-2866:15
COMMA, 2866:15-2866:16
ID("Reflect"), 2866:17-2866:24
RBRACKET, 2866:24-2866:25
ATTRIBUTE, 2866:26-2866:35
DOMSTRING, 2866:36-2866:45
ID("name"), 2866:46-2866:50
SEMI, 2866:50-2866:51
RBRACE, 2867:1-2867:2
SEMI, 2867:2-2867:3
LBRACKET, 2869:1-2869:2
ID("Exposed"), 2869:2-2869:9
EQUAL, 2869:9-2869:10
ID("Window"), 2869:10-2869:16
RBRACKET, 2869:16-2869:17
INTERFACE, 2870:1-2870:10
ID("HTMLFontElement"), 2870:11-2870:26
COLON, 2870:27-2870:28
ID("HTMLElement"), 2870:29-2870:40
LBRACE, 2870:41-2870:42
LBRACKET, 2871:3-2871:4
ID("HTMLConstructor"), 2871:4-2871:19
RBRACKET, 2871:19-2871:20
CONSTRUCTOR, 2871:21-2871:32
LPAREN, 2871:32-2871:33
RPAREN, 2871:33-2871:34
SEMI, 2871:34-2871:35
LBRACKET, 2873:3-2873:4
ID("CEReactions"), 2873:4-2873:15
COMMA, 2873:15-2873:16
ID("Reflect"), 2873:17-2873:24
RBRACKET, 2873:24-2873:25
ATTRIBUTE, 2873:26-2873:35
LBRACKET, 2873:36-2873:37
ID("LegacyNullToEmptyString"), 2873:37-2873:60
RBRACKET, 2873:60-2873:61
DOMSTRING, 2873:62-2873:71
ID("color"), 2873:72-2873:77
SEMI, 2873:77-2873:78
LBRACKET, 2874:3-2874:4
ID("CEReactions"), 2874:4-2874:15
COMMA, 2874:15-2874:16
ID("Reflect"), 2874:17-2874:24
RBRACKET, 2874:24-2874:25
ATTRIBUTE, 2874:26-2874:35
DOMSTRING, 2874:36-2874:45
ID("face"), 2874:46-2874:50
SEMI, 2874:50-2874:51
LBRACKET, 2875:3-2875:4
ID("CEReactions"), 2875:4-2875:15
COMMA, 2875:15-2875:16
ID("Reflect"), 2875:17-2875:24
RBRACKET, 2875:24-2875:25
ATTRIBUTE, 2875:26-2875:35
DOMSTRING, 2875:36-2875:45
ID("size"), 2875:46-2875:50
SEMI, 2875:50-2875:51
RBRACE, 2876:1-2876:2
SEMI, 2876:2-2876:3
PARTIAL, 2878:1-2878:8
INTERFACE, 2878:9-2878:18
ID("HTMLHeadingElement"), 2878:19-2878:37
LBRACE, 2878:38-2878:39
LBRACKET, 2879:3-2879:4
ID("CEReactions"), 2879:4-2879:15
COMMA, 2879:15-2879:16
ID("Reflect"), 2879:17-2879:24
RBRACKET, 2879:24-2879:25
ATTRIBUTE, 2879:26-2879:35
DOMSTRING, 2879:36-2879:45
ID("align"), 2879:46-2879:51
SEMI, 2879:51-2879:52
RBRACE, 2880:1-2880:2
SEMI, 2880:2-2880:3
PARTIAL, 2882:1-2882:8
INTERFACE, 2882:9-2882:18
ID("HTMLHRElement"), 2882:19-2882:32
LBRACE, 2882:33-2882:34
LBRACKET, 2883:3-2883:4
ID("CEReactions"), 2883:4-2883:15
COMMA, 2883:15-2883:16
ID("Reflect"), 2883:17-2883:24
RBRACKET, 2883:24-2883:25
ATTRIBUTE, 2883:26-2883:35
DOMSTRING, 2883:36-2883:45
ID("align"), 2883:46-2883:51
SEMI, 2883:51-2883:52
LBRACKET, 2884:3-2884:4
ID("CEReactions"), 2884:4-2884:15
COMMA, 2884:15-2884:16
ID("Reflect"), 2884:17-2884:24
RBRACKET, 2884:24-2884:25
ATTRIBUTE, 2884:26-2884:35
DOMSTRING, 2884:36-2884:45
ID("color"), 2884:46-2884:51
SEMI, 2884:51-2884:52
LBRACKET, 2885:3-2885:4
ID("CEReactions"), 2885:4-2885:15
COMMA, 2885:15-2885:16
ID("Reflect"), 2885:17-2885:24
RBRACKET, 2885:24-2885:25
ATTRIBUTE, 2885:26-2885:35
BOOLEAN, 2885:36-2885:43
ID("noShade"), 2885:44-2885:51
SEMI, 2885:51-2885:52
LBRACKET, 2886:3-2886:4
ID("CEReactions"), 2886:4-2886:15
COMMA, 2886:15-2886:16
ID("Reflect"), 2886:17-2886:24
RBRACKET, 2886:24-2886:25
ATTRIBUTE, 2886:26-2886:35
DOMSTRING, 2886:36-2886:45
ID("size"), 2886:46-2886:50
SEMI, 2886:50-2886:51
LBRACKET, 2887:3-2887:4
ID("CEReactions"), 2887:4-2887:15
COMMA, 2887:15-2887:16
ID("Reflect"), 2887:17-2887:24
RBRACKET, 2887:24-2887:25
ATTRIBUTE, 2887:26-2887:35
DOMSTRING, 2887:36-2887:45
ID("width"), 2887:46-2887:51
SEMI, 2887:51-2887:52
RBRACE, 2888:1-2888:2
SEMI, 2888:2-2888:3
PARTIAL, 2890:1-2890:8
INTERFACE, 2890:9-2890:18
ID("HTMLHtmlElement"), 2890:19-2890:34
LBRACE, 2890:35-2890:36
LBRACKET, 2891:3-2891:4
ID("CEReactions"), 2891:4-2891:15
COMMA, 2891:15-2891:16
ID("Reflect"), 2891:17-2891:24
RBRACKET, 2891:24-2891:25
ATTRIBUTE, 2891:26-2891:35
DOMSTRING, 2891:36-2891:45
ID("version"), 2891:46-2891:53
SEMI, 2891:53-2891:54
RBRACE, 2892:1-2892:2
SEMI, 2892:2-2892:3
PARTIAL, 2894:1-2894:8
INTERFACE, 2894:9-2894:18
ID("HTMLIFrameElement"), 2894:19-2894:36
LBRACE, 2894:37-2894:38
LBRACKET, 2895:3-2895:4
ID("CEReactions"), 2895:4-2895:15
COMMA, 2895:15-2895:16
ID("Reflect"), 2895:17-2895:24
RBRACKET, 2895:24-2895:25
ATTRIBUTE, 2895:26-2895:35
DOMSTRING, 2895:36-2895:45
ID("align"), 2895:46-2895:51
SEMI, 2895:51-2895:52
LBRACKET, 2896:3-2896:4
ID("CEReactions"), 2896:4-2896:15
COMMA, 2896:15-2896:16
ID("Reflect"), 2896:17-2896:24
RBRACKET, 2896:24-2896:25
ATTRIBUTE, 2896:26-2896:35
DOMSTRING, 2896:36-2896:45
ID("scrolling"), 2896:46-2896:55
SEMI, 2896:55-2896:56
LBRACKET, 2897:3-2897:4
ID("CEReactions"), 2897:4-2897:15
COMMA, 2897:15-2897:16
ID("Reflect"), 2897:17-2897:24
RBRACKET, 2897:24-2897:25
ATTRIBUTE, 2897:26-2897:35
DOMSTRING, 2897:36-2897:45
ID("frameBorder"), 2897:46-2897:57
SEMI, 2897:57-2897:58
LBRACKET, 2898:3-2898:4
ID("CEReactions"), 2898:4-2898:15
COMMA, 2898:15-2898:16
ID("ReflectURL"), 2898:17-2898:27
RBRACKET, 2898:27-2898:28
ATTRIBUTE, 2898:29-2898:38
USVSTRING, 2898:39-2898:48
ID("longDesc"), 2898:49-2898:57
SEMI, 2898:57-2898:58
LBRACKET, 2900:3-2900:4
ID("CEReactions"), 2900:4-2900:15
COMMA, 2900:15-2900:16
ID("Reflect"), 2900:17-2900:24
RBRACKET, 2900:24-2900:25
ATTRIBUTE, 2900:26-2900:35
LBRACKET, 2900:36-2900:37
ID("LegacyNullToEmptyString"), 2900:37-2900:60
RBRACKET, 2900:60-2900:61
DOMSTRING, 2900:62-2900:71
ID("marginHeight"), 2900:72-2900:84
SEMI, 2900:84-2900:85
LBRACKET, 2901:3-2901:4
ID("CEReactions"), 2901:4-2901:15
COMMA, 2901:15-2901:16
ID("Reflect"), 2901:17-2901:24
RBRACKET, 2901:24-2901:25
ATTRIBUTE, 2901:26-2901:35
LBRACKET, 2901:36-2901:37
ID("LegacyNullToEmptyString"), 2901:37-2901:60
RBRACKET, 2901:60-2901:61
DOMSTRING, 2901:62-2901:71
ID("marginWidth"), 2901:72-2901:83
SEMI, 2901:83-2901:84
RBRACE, 2902:1-2902:2
SEMI, 2902:2-2902:3
PARTIAL, 2904:1-2904:8
INTERFACE, 2904:9-2904:18
ID("HTMLImageElement"), 2904:19-2904:35
LBRACE, 2904:36-2904:37
LBRACKET, 2905:3-2905:4
ID("CEReactions"), 2905:4-2905:15
COMMA, 2905:15-2905:16
ID("Reflect"), 2905:17-2905:24
RBRACKET, 2905:24-2905:25
ATTRIBUTE, 2905:26-2905:35
DOMSTRING, 2905:36-2905:45
ID("name"), 2905:46-2905:50
SEMI, 2905:50-2905:51
LBRACKET, 2906:3-2906:4
ID("CEReactions"), 2906:4-2906:15
COMMA, 2906:15-2906:16
ID("ReflectURL"), 2906:17-2906:27
RBRACKET, 2906:27-2906:28
ATTRIBUTE, 2906:29-2906:38
USVSTRING, 2906:39-2906:48
ID("lowsrc"), 2906:49-2906:55
SEMI, 2906:55-2906:56
LBRACKET, 2907:3-2907:4
ID("CEReactions"), 2907:4-2907:15
COMMA, 2907:15-2907:16
ID("Reflect"), 2907:17-2907:24
RBRACKET, 2907:24-2907:25
ATTRIBUTE, 2907:26-2907:35
DOMSTRING, 2907:36-2907:45
ID("align"), 2907:46-2907:51
SEMI, 2907:51-2907:52
LBRACKET, 2908:3-2908:4
ID("CEReactions"), 2908:4-2908:15
COMMA, 2908:15-2908:16
ID("Reflect"), 2908:17-2908:24
RBRACKET, 2908:24-2908:25
ATTRIBUTE, 2908:26-2908:35
UNSIGNED, 2908:36-2908:44
LONG, 2908:45-2908:49
ID("hspace"), 2908:50-2908:56
SEMI, 2908:56-2908:57
LBRACKET, 2909:3-2909:4
ID("CEReactions"), 2909:4-2909:15
COMMA, 2909:15-2909:16
ID("Reflect"), 2909:17-2909:24
RBRACKET, 2909:24-2909:25
ATTRIBUTE, 2909:26-2909:35
UNSIGNED, 2909:36-2909:44
LONG, 2909:45-2909:49
ID("vspace"), 2909:50-2909:56
SEMI, 2909:56-2909:57
LBRACKET, 2910:3-2910:4
ID("CEReactions"), 2910:4-2910:15
COMMA, 2910:15-2910:16
ID("ReflectURL"), 2910:17-2910:27
RBRACKET, 2910:27-2910:28
ATTRIBUTE, 2910:29-2910:38
USVSTRING, 2910:39-2910:48
ID("longDesc"), 2910:49-2910:57
SEMI, 2910:57-2910:58
LBRACKET, 2912:3-2912:4
ID("CEReactions"), 2912:4-2912:15
COMMA, 2912:15-2912:16
ID("Reflect"), 2912:17-2912:24
RBRACKET, 2912:24-2912:25
ATTRIBUTE, 2912:26-2912:35
LBRACKET, 2912:36-2912:37
ID("LegacyNullToEmptyString"), 2912:37-2912:60
RBRACKET, 2912:60-2912:61
DOMSTRING, 2912:62-2912:71
ID("border"), 2912:72-2912:78
SEMI, 2912:78-2912:79
RBRACE, 2913:1-2913:2
SEMI, 2913:2-2913:3
PARTIAL, 2915:1-2915:8
INTERFACE, 2915:9-2915:18
ID("HTMLInputElement"), 2915:19-2915:35
LBRACE, 2915:36-2915:37
LBRACKET, 2916:3-2916:4
ID("CEReactions"), 2916:4-2916:15
COMMA, 2916:15-2916:16
ID("Reflect"), 2916:17-2916:24
RBRACKET, 2916:24-2916:25
ATTRIBUTE, 2916:26-2916:35
DOMSTRING, 2916:36-2916:45
ID("align"), 2916:46-2916:51
SEMI, 2916:51-2916:52
LBRACKET, 2917:3-2917:4
ID("CEReactions"), 2917:4-2917:15
COMMA, 2917:15-2917:16
ID("Reflect"), 2917:17-2917:24
RBRACKET, 2917:24-2917:25
ATTRIBUTE, 2917:26-2917:35
DOMSTRING, 2917:36-2917:45
ID("useMap"), 2917:46-2917:52
SEMI, 2917:52-2917:53
RBRACE, 2918:1-2918:2
SEMI, 2918:2-2918:3
PARTIAL, 2920:1-2920:8
INTERFACE, 2920:9-2920:18
ID("HTMLLegendElement"), 2920:19-2920:36
LBRACE, 2920:37-2920:38
LBRACKET, 2921:3-2921:4
ID("CEReactions"), 2921:4-2921:15
COMMA, 2921:15-2921:16
ID("Reflect"), 2921:17-2921:24
RBRACKET, 2921:24-2921:25
ATTRIBUTE, 2921:26-2921:35
DOMSTRING, 2921:36-2921:45
ID("align"), 2921:46-2921:51
SEMI, 2921:51-2921:52
RBRACE, 2922:1-2922:2
SEMI, 2922:2-2922:3
PARTIAL, 2924:1-2924:8
INTERFACE, 2924:9-2924:18
ID("HTMLLIElement"), 2924:19-2924:32
LBRACE, 2924:33-2924:34
LBRACKET, 2925:3-2925:4
ID("CEReactions"), 2925:4-2925:15
COMMA, 2925:15-2925:16
ID("Reflect"), 2925:17-2925:24
RBRACKET, 2925:24-2925:25
ATTRIBUTE, 2925:26-2925:35
DOMSTRING, 2925:36-2925:45
ID("type"), 2925:46-2925:50
SEMI, 2925:50-2925:51
RBRACE, 2926:1-2926:2
SEMI, 2926:2-2926:3
PARTIAL, 2928:1-2928:8
INTERFACE, 2928:9-2928:18
ID("HTMLLinkElement"), 2928:19-2928:34
LBRACE, 2928:35-2928:36
LBRACKET, 2929:3-2929:4
ID("CEReactions"), 2929:4-2929:15
COMMA, 2929:15-2929:16
ID("Reflect"), 2929:17-2929:24
RBRACKET, 2929:24-2929:25
ATTRIBUTE, 2929:26-2929:35
DOMSTRING, 2929:36-2929:45
ID("charset"), 2929:46-2929:53
SEMI, 2929:53-2929:54
LBRACKET, 2930:3-2930:4
ID("CEReactions"), 2930:4-2930:15
COMMA, 2930:15-2930:16
ID("Reflect"), 2930:17-2930:24
RBRACKET, 2930:24-2930:25
ATTRIBUTE, 2930:26-2930:35
DOMSTRING, 2930:36-2930:45
ID("rev"), 2930:46-2930:49
SEMI, 2930:49-2930:50
LBRACKET, 2931:3-2931:4
ID("CEReactions"), 2931:4-2931:15
COMMA, 2931:15-2931:16
ID("Reflect"), 2931:17-2931:24
RBRACKET, 2931:24-2931:25
ATTRIBUTE, 2931:26-2931:35
DOMSTRING, 2931:36-2931:45
ID("target"), 2931:46-2931:52
SEMI, 2931:52-2931:53
RBRACE, 2932:1-2932:2
SEMI, 2932:2-2932:3
PARTIAL, 2934:1-2934:8
INTERFACE, 2934:9-2934:18
ID("HTMLMenuElement"), 2934:19-2934:34
LBRACE, 2934:35-2934:36
LBRACKET, 2935:3-2935:4
ID("CEReactions"), 2935:4-2935:15
COMMA, 2935:15-2935:16
ID("Reflect"), 2935:17-2935:24
RBRACKET, 2935:24-2935:25
ATTRIBUTE, 2935:26-2935:35
BOOLEAN, 2935:36-2935:43
ID("compact"), 2935:44-2935:51
SEMI, 2935:51-2935:52
RBRACE, 2936:1-2936:2
SEMI, 2936:2-2936:3
PARTIAL, 2938:1-2938:8
INTERFACE, 2938:9-2938:18
ID("HTMLMetaElement"), 2938:19-2938:34
LBRACE, 2938:35-2938:36
LBRACKET, 2939:3-2939:4
ID("CEReactions"), 2939:4-2939:15
COMMA, 2939:15-2939:16
ID("Reflect"), 2939:17-2939:24
RBRACKET, 2939:24-2939:25
ATTRIBUTE, 2939:26-2939:35
DOMSTRING, 2939:36-2939:45
ID("scheme"), 2939:46-2939:52
SEMI, 2939:52-2939:53
RBRACE, 2940:1-2940:2
SEMI, 2940:2-2940:3
PARTIAL, 2942:1-2942:8
INTERFACE, 2942:9-2942:18
ID("HTMLObjectElement"), 2942:19-2942:36
LBRACE, 2942:37-2942:38
LBRACKET, 2943:3-2943:4
ID("CEReactions"), 2943:4-2943:15
COMMA, 2943:15-2943:16
ID("Reflect"), 2943:17-2943:24
RBRACKET, 2943:24-2943:25
ATTRIBUTE, 2943:26-2943:35
DOMSTRING, 2943:36-2943:45
ID("align"), 2943:46-2943:51
SEMI, 2943:51-2943:52
LBRACKET, 2944:3-2944:4
ID("CEReactions"), 2944:4-2944:15
COMMA, 2944:15-2944:16
ID("Reflect"), 2944:17-2944:24
RBRACKET, 2944:24-2944:25
ATTRIBUTE, 2944:26-2944:35
DOMSTRING, 2944:36-2944:45
ID("archive"), 2944:46-2944:53
SEMI, 2944:53-2944:54
LBRACKET, 2945:3-2945:4
ID("CEReactions"), 2945:4-2945:15
COMMA, 2945:15-2945:16
ID("Reflect"), 2945:17-2945:24
RBRACKET, 2945:24-2945:25
ATTRIBUTE, 2945:26-2945:35
DOMSTRING, 2945:36-2945:45
ID("code"), 2945:46-2945:50
SEMI, 2945:50-2945:51
LBRACKET, 2946:3-2946:4
ID("CEReactions"), 2946:4-2946:15
COMMA, 2946:15-2946:16
ID("Reflect"), 2946:17-2946:24
RBRACKET, 2946:24-2946:25
ATTRIBUTE, 2946:26-2946:35
BOOLEAN, 2946:36-2946:43
ID("declare"), 2946:44-2946:51
SEMI, 2946:51-2946:52
LBRACKET, 2947:3-2947:4
ID("CEReactions"), 2947:4-2947:15
COMMA, 2947:15-2947:16
ID("Reflect"), 2947:17-2947:24
RBRACKET, 2947:24-2947:25
ATTRIBUTE, 2947:26-2947:35
UNSIGNED, 2947:36-2947:44
LONG, 2947:45-2947:49
ID("hspace"), 2947:50-2947:56
SEMI, 2947:56-2947:57
LBRACKET, 2948:3-2948:4
ID("CEReactions"), 2948:4-2948:15
COMMA, 2948:15-2948:16
ID("Reflect"), 2948:17-2948:24
RBRACKET, 2948:24-2948:25
ATTRIBUTE, 2948:26-2948:35
DOMSTRING, 2948:36-2948:45
ID("standby"), 2948:46-2948:53
SEMI, 2948:53-2948:54
LBRACKET, 2949:3-2949:4
ID("CEReactions"), 2949:4-2949:15
COMMA, 2949:15-2949:16
ID("Reflect"), 2949:17-2949:24
RBRACKET, 2949:24-2949:25
ATTRIBUTE, 2949:26-2949:35
UNSIGNED, 2949:36-2949:44
LONG, 2949:45-2949:49
ID("vspace"), 2949:50-2949:56
SEMI, 2949:56-2949:57
LBRACKET, 2950:3-2950:4
ID("CEReactions"), 2950:4-2950:15
COMMA, 2950:15-2950:16
ID("ReflectURL"), 2950:17-2950:27
RBRACKET, 2950:27-2950:28
ATTRIBUTE, 2950:29-2950:38
DOMSTRING, 2950:39-2950:48
ID("codeBase"), 2950:49-2950:57
SEMI, 2950:57-2950:58
LBRACKET, 2951:3-2951:4
ID("CEReactions"), 2951:4-2951:15
COMMA, 2951:15-2951:16
ID("Reflect"), 2951:17-2951:24
RBRACKET, 2951:24-2951:25
ATTRIBUTE, 2951:26-2951:35
DOMSTRING, 2951:36-2951:45
ID("codeType"), 2951:46-2951:54
SEMI, 2951:54-2951:55
LBRACKET, 2952:3-2952:4
ID("CEReactions"), 2952:4-2952:15
COMMA, 2952:15-2952:16
ID("Reflect"), 2952:17-2952:24
RBRACKET, 2952:24-2952:25
ATTRIBUTE, 2952:26-2952:35
DOMSTRING, 2952:36-2952:45
ID("useMap"), 2952:46-2952:52
SEMI, 2952:52-2952:53
LBRACKET, 2954:3-2954:4
ID("CEReactions"), 2954:4-2954:15
COMMA, 2954:15-2954:16
ID("Reflect"), 2954:17-2954:24
RBRACKET, 2954:24-2954:25
ATTRIBUTE, 2954:26-2954:35
LBRACKET, 2954:36-2954:37
ID("LegacyNullToEmptyString"), 2954:37-2954:60
RBRACKET, 2954:60-2954:61
DOMSTRING, 2954:62-2954:71
ID("border"), 2954:72-2954:78
SEMI, 2954:78-2954:79
RBRACE, 2955:1-2955:2
SEMI, 2955:2-2955:3
PARTIAL, 2957:1-2957:8
INTERFACE, 2957:9-2957:18
ID("HTMLOListElement"), 2957:19-2957:35
LBRACE, 2957:36-2957:37
LBRACKET, 2958:3-2958:4
ID("CEReactions"), 2958:4-2958:15
COMMA, 2958:15-2958:16
ID("Reflect"), 2958:17-2958:24
RBRACKET, 2958:24-2958:25
ATTRIBUTE, 2958:26-2958:35
BOOLEAN, 2958:36-2958:43
ID("compact"), 2958:44-2958:51
SEMI, 2958:51-2958:52
RBRACE, 2959:1-2959:2
SEMI, 2959:2-2959:3
PARTIAL, 2961:1-2961:8
INTERFACE, 2961:9-2961:18
ID("HTMLParagraphElement"), 2961:19-2961:39
LBRACE, 2961:40-2961:41
LBRACKET, 2962:3-2962:4
ID("CEReactions"), 2962:4-2962:15
COMMA, 2962:15-2962:16
ID("Reflect"), 2962:17-2962:24
RBRACKET, 2962:24-2962:25
ATTRIBUTE, 2962:26-2962:35
DOMSTRING, 2962:36-2962:45
ID("align"), 2962:46-2962:51
SEMI, 2962:51-2962:52
RBRACE, 2963:1-2963:2
SEMI, 2963:2-2963:3
LBRACKET, 2965:1-2965:2
ID("Exposed"), 2965:2-2965:9
EQUAL, 2965:9-2965:10
ID("Window"), 2965:10-2965:16
RBRACKET, 2965:16-2965:17
INTERFACE, 2966:1-2966:10
ID("HTMLParamElement"), 2966:11-2966:27
COLON, 2966:28-2966:29
ID("HTMLElement"), 2966:30-2966:41
LBRACE, 2966:42-2966:43
LBRACKET, 2967:3-2967:4
ID("HTMLConstructor"), 2967:4-2967:19
RBRACKET, 2967:19-2967:20
CONSTRUCTOR, 2967:21-2967:32
LPAREN, 2967:32-2967:33
RPAREN, 2967:33-2967:34
SEMI, 2967:34-2967:35
LBRACKET, 2969:3-2969:4
ID("CEReactions"), 2969:4-2969:15
COMMA, 2969:15-2969:16
ID("Reflect"), 2969:17-2969:24
RBRACKET, 2969:24-2969:25
ATTRIBUTE, 2969:26-2969:35
DOMSTRING, 2969:36-2969:45
ID("name"), 2969:46-2969:50
SEMI, 2969:50-2969:51
LBRACKET, 2970:3-2970:4
ID("CEReactions"), 2970:4-2970:15
COMMA, 2970:15-2970:16
ID("Reflect"), 2970:17-2970:24
RBRACKET, 2970:24-2970:25
ATTRIBUTE, 2970:26-2970:35
DOMSTRING, 2970:36-2970:45
ID("value"), 2970:46-2970:51
SEMI, 2970:51-2970:52
LBRACKET, 2971:3-2971:4
ID("CEReactions"), 2971:4-2971:15
COMMA, 2971:15-2971:16
ID("Reflect"), 2971:17-2971:24
RBRACKET, 2971:24-2971:25
ATTRIBUTE, 2971:26-2971:35
DOMSTRING, 2971:36-2971:45
ID("type"), 2971:46-2971:50
SEMI, 2971:50-2971:51
LBRACKET, 2972:3-2972:4
ID("CEReactions"), 2972:4-2972:15
COMMA, 2972:15-2972:16
ID("Reflect"), 2972:17-2972:24
RBRACKET, 2972:24-2972:25
ATTRIBUTE, 2972:26-2972:35
DOMSTRING, 2972:36-2972:45
ID("valueType"), 2972:46-2972:55
SEMI, 2972:55-2972:56
RBRACE, 2973:1-2973:2
SEMI, 2973:2-2973:3
PARTIAL, 2975:1-2975:8
INTERFACE, 2975:9-2975:18
ID("HTMLPreElement"), 2975:19-2975:33
LBRACE, 2975:34-2975:35
LBRACKET, 2976:3-2976:4
ID("CEReactions"), 2976:4-2976:15
COMMA, 2976:15-2976:16
ID("Reflect"), 2976:17-2976:24
RBRACKET, 2976:24-2976:25
ATTRIBUTE, 2976:26-2976:35
LONG, 2976:36-2976:40
ID("width"), 2976:41-2976:46
SEMI, 2976:46-2976:47
RBRACE, 2977:1-2977:2
SEMI, 2977:2-2977:3
PARTIAL, 2979:1-2979:8
INTERFACE, 2979:9-2979:18
ID("HTMLStyleElement"), 2979:19-2979:35
LBRACE, 2979:36-2979:37
LBRACKET, 2980:3-2980:4
ID("CEReactions"), 2980:4-2980:15
COMMA, 2980:15-2980:16
ID("Reflect"), 2980:17-2980:24
RBRACKET, 2980:24-2980:25
ATTRIBUTE, 2980:26-2980:35
DOMSTRING, 2980:36-2980:45
ID("type"), 2980:46-2980:50
SEMI, 2980:50-2980:51
RBRACE, 2981:1-2981:2
SEMI, 2981:2-2981:3
PARTIAL, 2983:1-2983:8
INTERFACE, 2983:9-2983:18
ID("HTMLScriptElement"), 2983:19-2983:36
LBRACE, 2983:37-2983:38
LBRACKET, 2984:3-2984:4
ID("CEReactions"), 2984:4-2984:15
COMMA, 2984:15-2984:16
ID("Reflect"), 2984:17-2984:24
RBRACKET, 2984:24-2984:25
ATTRIBUTE, 2984:26-2984:35
DOMSTRING, 2984:36-2984:45
ID("charset"), 2984:46-2984:53
SEMI, 2984:53-2984:54
LBRACKET, 2985:3-2985:4
ID("CEReactions"), 2985:4-2985:15
COMMA, 2985:15-2985:16
ID("Reflect"), 2985:17-2985:24
RBRACKET, 2985:24-2985:25
ATTRIBUTE, 2985:26-2985:35
DOMSTRING, 2985:36-2985:45
ID("event"), 2985:46-2985:51
SEMI, 2985:51-2985:52
LBRACKET, 2986:3-2986:4
ID("CEReactions"), 2986:4-2986:15
COMMA, 2986:15-2986:16
ID("Reflect"), 2986:17-2986:24
EQUAL, 2986:24-2986:25
STRING("\"for\""), 2986:25-2986:30
RBRACKET, 2986:30-2986:31
ATTRIBUTE, 2986:32-2986:41
DOMSTRING, 2986:42-2986:51
ID("htmlFor"), 2986:52-2986:59
SEMI, 2986:59-2986:60
RBRACE, 2987:1-2987:2
SEMI, 2987:2-2987:3
PARTIAL, 2989:1-2989:8
INTERFACE, 2989:9-2989:18
ID("HTMLTableElement"), 2989:19-2989:35
LBRACE, 2989:36-2989:37
LBRACKET, 2990:3-2990:4
ID("CEReactions"), 2990:4-2990:15
COMMA, 2990:15-2990:16
ID("Reflect"), 2990:17-2990:24
RBRACKET, 2990:24-2990:25
ATTRIBUTE, 2990:26-2990:35
DOMSTRING, 2990:36-2990:45
ID("align"), 2990:46-2990:51
SEMI, 2990:51-2990:52
LBRACKET, 2991:3-2991:4
ID("CEReactions"), 2991:4-2991:15
COMMA, 2991:15-2991:16
ID("Reflect"), 2991:17-2991:24
RBRACKET, 2991:24-2991:25
ATTRIBUTE, 2991:26-2991:35
DOMSTRING, 2991:36-2991:45
ID("border"), 2991:46-2991:52
SEMI, 2991:52-2991:53
LBRACKET, 2992:3-2992:4
ID("CEReactions"), 2992:4-2992:15
COMMA, 2992:15-2992:16
ID("Reflect"), 2992:17-2992:24
RBRACKET, 2992:24-2992:25
ATTRIBUTE, 2992:26-2992:35
DOMSTRING, 2992:36-2992:45
ID("frame"), 2992:46-2992:51
SEMI, 2992:51-2992:52
LBRACKET, 2993:3-2993:4
ID("CEReactions"), 2993:4-2993:15
COMMA, 2993:15-2993:16
ID("Reflect"), 2993:17-2993:24
RBRACKET, 2993:24-2993:25
ATTRIBUTE, 2993:26-2993:35
DOMSTRING, 2993:36-2993:45
ID("rules"), 2993:46-2993:51
SEMI, 2993:51-2993:52
LBRACKET, 2994:3-2994:4
ID("CEReactions"), 2994:4-2994:15
COMMA, 2994:15-2994:16
ID("Reflect"), 2994:17-2994:24
RBRACKET, 2994:24-2994:25
ATTRIBUTE, 2994:26-2994:35
DOMSTRING, 2994:36-2994:45
ID("summary"), 2994:46-2994:53
SEMI, 2994:53-2994:54
LBRACKET, 2995:3-2995:4
ID("CEReactions"), 2995:4-2995:15
COMMA, 2995:15-2995:16
ID("Reflect"), 2995:17-2995:24
RBRACKET, 2995:24-2995:25
ATTRIBUTE, 2995:26-2995:35
DOMSTRING, 2995:36-2995:45
ID("width"), 2995:46-2995:51
SEMI, 2995:51-2995:52
LBRACKET, 2997:3-2997:4
ID("CEReactions"), 2997:4-2997:15
COMMA, 2997:15-2997:16
ID("Reflect"), 2997:17-2997:24
RBRACKET, 2997:24-2997:25
ATTRIBUTE, 2997:26-2997:35
LBRACKET, 2997:36-2997:37
ID("LegacyNullToEmptyString"), 2997:37-2997:60
RBRACKET, 2997:60-2997:61
DOMSTRING, 2997:62-2997:71
ID("bgColor"), 2997:72-2997:79
SEMI, 2997:79-2997:80
LBRACKET, 2998:3-2998:4
ID("CEReactions"), 2998:4-2998:15
COMMA, 2998:15-2998:16
ID("Reflect"), 2998:17-2998:24
RBRACKET, 2998:24-2998:25
ATTRIBUTE, 2998:26-2998:35
LBRACKET, 2998:36-2998:37
ID("LegacyNullToEmptyString"), 2998:37-2998:60
RBRACKET, 2998:60-2998:61
DOMSTRING, 2998:62-2998:71
ID("cellPadding"), 2998:72-2998:83
SEMI, 2998:83-2998:84
LBRACKET, 2999:3-2999:4
ID("CEReactions"), 2999:4-2999:15
COMMA, 2999:15-2999:16
ID("Reflect"), 2999:17-2999:24
RBRACKET, 2999:24-2999:25
ATTRIBUTE, 2999:26-2999:35
LBRACKET, 2999:36-2999:37
ID("LegacyNullToEmptyString"), 2999:37-2999:60
RBRACKET, 2999:60-2999:61
DOMSTRING, 2999:62-2999:71
ID("cellSpacing"), 2999:72-2999:83
SEMI, 2999:83-2999:84
RBRACE, 3000:1-3000:2
SEMI, 3000:2-3000:3
PARTIAL, 3002:1-3002:8
INTERFACE, 3002:9-3002:18
ID("HTMLTableSectionElement"), 3002:19-3002:42
LBRACE, 3002:43-3002:44
LBRACKET, 3003:3-3003:4
ID("CEReactions"), 3003:4-3003:15
COMMA, 3003:15-3003:16
ID("Reflect"), 3003:17-3003:24
RBRACKET, 3003:24-3003:25
ATTRIBUTE, 3003:26-3003:35
DOMSTRING, 3003:36-3003:45
ID("align"), 3003:46-3003:51
SEMI, 3003:51-3003:52
LBRACKET, 3004:3-3004:4
ID("CEReactions"), 3004:4-3004:15
COMMA, 3004:15-3004:16
ID("Reflect"), 3004:17-3004:24
EQUAL, 3004:24-3004:25
STRING("\"char\""), 3004:25-3004:31
RBRACKET, 3004:31-3004:32
ATTRIBUTE, 3004:33-3004:42
DOMSTRING, 3004:43-3004:52
ID("ch"), 3004:53-3004:55
SEMI, 3004:55-3004:56
LBRACKET, 3005:3-3005:4
ID("CEReactions"), 3005:4-3005:15
COMMA, 3005:15-3005:16
ID("Reflect"), 3005:17-3005:24
EQUAL, 3005:24-3005:25
STRING("\"charoff\""), 3005:25-3005:34
RBRACKET, 3005:34-3005:35
ATTRIBUTE, 3005:36-3005:45
DOMSTRING, 3005:46-3005:55
ID("chOff"), 3005:56-3005:61
SEMI, 3005:61-3005:62
LBRACKET, 3006:3-3006:4
ID("CEReactions"), 3006:4-3006:15
COMMA, 3006:15-3006:16
ID("Reflect"), 3006:17-3006:24
RBRACKET, 3006:24-3006:25
ATTRIBUTE, 3006:26-3006:35
DOMSTRING, 3006:36-3006:45
ID("vAlign"), 3006:46-3006:52
SEMI, 3006:52-3006:53
RBRACE, 3007:1-3007:2
SEMI, 3007:2-3007:3
PARTIAL, 3009:1-3009:8
INTERFACE, 3009:9-3009:18
ID("HTMLTableCellElement"), 3009:19-3009:39
LBRACE, 3009:40-3009:41
LBRACKET, 3010:3-3010:4
ID("CEReactions"), 3010:4-3010:15
COMMA, 3010:15-3010:16
ID("Reflect"), 3010:17-3010:24
RBRACKET, 3010:24-3010:25
ATTRIBUTE, 3010:26-3010:35
DOMSTRING, 3010:36-3010:45
ID("align"), 3010:46-3010:51
SEMI, 3010:51-3010:52
LBRACKET, 3011:3-3011:4
ID("CEReactions"), 3011:4-3011:15
COMMA, 3011:15-3011:16
ID("Reflect"), 3011:17-3011:24
RBRACKET, 3011:24-3011:25
ATTRIBUTE, 3011:26-3011:35
DOMSTRING, 3011:36-3011:45
ID("axis"), 3011:46-3011:50
SEMI, 3011:50-3011:51
LBRACKET, 3012:3-3012:4
ID("CEReactions"), 3012:4-3012:15
COMMA, 3012:15-3012:16
ID("Reflect"), 3012:17-3012:24
RBRACKET, 3012:24-3012:25
ATTRIBUTE, 3012:26-3012:35
DOMSTRING, 3012:36-3012:45
ID("height"), 3012:46-3012:52
SEMI, 3012:52-3012:53
LBRACKET, 3013:3-3013:4
ID("CEReactions"), 3013:4-3013:15
COMMA, 3013:15-3013:16
ID("Reflect"), 3013:17-3013:24
RBRACKET, 3013:24-3013:25
ATTRIBUTE, 3013:26-3013:35
DOMSTRING, 3013:36-3013:45
ID("width"), 3013:46-3013:51
SEMI, 3013:51-3013:52
LBRACKET, 3015:3-3015:4
ID("CEReactions"), 3015:4-3015:15
COMMA, 3015:15-3015:16
ID("Reflect"), 3015:17-3015:24
EQUAL, 3015:24-3015:25
STRING("\"char\""), 3015:25-3015:31
RBRACKET, 3015:31-3015:32
ATTRIBUTE, 3015:33-3015:42
DOMSTRING, 3015:43-3015:52
ID("ch"), 3015:53-3015:55
SEMI, 3015:55-3015:56
LBRACKET, 3016:3-3016:4
ID("CEReactions"), 3016:4-3016:15
COMMA, 3016:15-3016:16
ID("Reflect"), 3016:17-3016:24
EQUAL, 3016:24-3016:25
STRING("\"charoff\""), 3016:25-3016:34
RBRACKET, 3016:34-3016:35
ATTRIBUTE, 3016:36-3016:45
DOMSTRING, 3016:46-3016:55
ID("chOff"), 3016:56-3016:61
SEMI, 3016:61-3016:62
LBRACKET, 3017:3-3017:4
ID("CEReactions"), 3017:4-3017:15
COMMA, 3017:15-3017:16
ID("Reflect"), 3017:17-3017:24
RBRACKET, 3017:24-3017:25
ATTRIBUTE, 3017:26-3017:35
BOOLEAN, 3017:36-3017:43
ID("noWrap"), 3017:44-3017:50
SEMI, 3017:50-3017:51
LBRACKET, 3018:3-3018:4
ID("CEReactions"), 3018:4-3018:15
COMMA, 3018:15-3018:16
ID("Reflect"), 3018:17-3018:24
RBRACKET, 3018:24-3018:25
ATTRIBUTE, 3018:26-3018:35
DOMSTRING, 3018:36-3018:45
ID("vAlign"), 3018:46-3018:52
SEMI, 3018:52-3018:53
LBRACKET, 3020:3-3020:4
ID("CEReactions"), 3020:4-3020:15
COMMA, 3020:15-3020:16
ID("Reflect"), 3020:17-3020:24
RBRACKET, 3020:24-3020:25
ATTRIBUTE, 3020:26-3020:35
LBRACKET, 3020:36-3020:37
ID("LegacyNullToEmptyString"), 3020:37-3020:60
RBRACKET, 3020:60-3020:61
DOMSTRING, 3020:62-3020:71
ID("bgColor"), 3020:72-3020:79
SEMI, 3020:79-3020:80
RBRACE, 3021:1-3021:2
SEMI, 3021:2-3021:3
PARTIAL, 3023:1-3023:8
INTERFACE, 3023:9-3023:18
ID("HTMLTableRowElement"), 3023:19-3023:38
LBRACE, 3023:39-3023:40
LBRACKET, 3024:3-3024:4
ID("CEReactions"), 3024:4-3024:15
COMMA, 3024:15-3024:16
ID("Reflect"), 3024:17-3024:24
RBRACKET, 3024:24-3024:25
ATTRIBUTE, 3024:26-3024:35
DOMSTRING, 3024:36-3024:45
ID("align"), 3024:46-3024:51
SEMI, 3024:51-3024:52
LBRACKET, 3025:3-3025:4
ID("CEReactions"), 3025:4-3025:15
COMMA, 3025:15-3025:16
ID("Reflect"), 3025:17-3025:24
EQUAL, 3025:24-3025:25
STRING("\"char\""), 3025:25-3025:31
RBRACKET, 3025:31-3025:32
ATTRIBUTE, 3025:33-3025:42
DOMSTRING, 3025:43-3025:52
ID("ch"), 3025:53-3025:55
SEMI, 3025:55-3025:56
LBRACKET, 3026:3-3026:4
ID("CEReactions"), 3026:4-3026:15
COMMA, 3026:15-3026:16
ID("Reflect"), 3026:17-3026:24
EQUAL, 3026:24-3026:25
STRING("\"charoff\""), 3026:25-3026:34
RBRACKET, 3026:34-3026:35
ATTRIBUTE, 3026:36-3026:45
DOMSTRING, 3026:46-3026:55
ID("chOff"), 3026:56-3026:61
SEMI, 3026:61-3026:62
LBRACKET, 3027:3-3027:4
ID("CEReactions"), 3027:4-3027:15
COMMA, 3027:15-3027:16
ID("Reflect"), 3027:17-3027:24
RBRACKET, 3027:24-3027:25
ATTRIBUTE, 3027:26-3027:35
DOMSTRING, 3027:36-3027:45
ID("vAlign"), 3027:46-3027:52
SEMI, 3027:52-3027:53
LBRACKET, 3029:3-3029:4
ID("CEReactions"), 3029:4-3029:15
COMMA, 3029:15-3029:16
ID("Reflect"), 3029:17-3029:24
RBRACKET, 3029:24-3029:25
ATTRIBUTE, 3029:26-3029:35
LBRACKET, 3029:36-3029:37
ID("LegacyNullToEmptyString"), 3029:37-3029:60
RBRACKET, 3029:60-3029:61
DOMSTRING, 3029:62-3029:71
ID("bgColor"), 3029:72-3029:79
SEMI, 3029:79-3029:80
RBRACE, 3030:1-3030:2
SEMI, 3030:2-3030:3
PARTIAL, 3032:1-3032:8
INTERFACE, 3032:9-3032:18
ID("HTMLUListElement"), 3032:19-3032:35
LBRACE, 3032:36-3032:37
LBRACKET, 3033:3-3033:4
ID("CEReactions"), 3033:4-3033:15
COMMA, 3033:15-3033:16
ID("Reflect"), 3033:17-3033:24
RBRACKET, 3033:24-3033:25
ATTRIBUTE, 3033:26-3033:35
BOOLEAN, 3033:36-3033:43
ID("compact"), 3033:44-3033:51
SEMI, 3033:51-3033:52
LBRACKET, 3034:3-3034:4
ID("CEReactions"), 3034:4-3034:15
COMMA, 3034:15-3034:16
ID("Reflect"), 3034:17-3034:24
RBRACKET, 3034:24-3034:25
ATTRIBUTE, 3034:26-3034:35
DOMSTRING, 3034:36-3034:45
ID("type"), 3034:46-3034:50
SEMI, 3034:50-3034:51
RBRACE, 3035:1-3035:2
SEMI, 3035:2-3035:3
PARTIAL, 3037:1-3037:8
INTERFACE, 3037:9-3037:18
ID("Document"), 3037:19-3037:27
LBRACE, 3037:28-3037:29
LBRACKET, 3038:3-3038:4
ID("CEReactions"), 3038:4-3038:15
RBRACKET, 3038:15-3038:16
ATTRIBUTE, 3038:17-3038:26
LBRACKET, 3038:27-3038:28
ID("LegacyNullToEmptyString"), 3038:28-3038:51
RBRACKET, 3038:51-3038:52
DOMSTRING, 3038:53-3038:62
ID("fgColor"), 3038:63-3038:70
SEMI, 3038:70-3038:71
LBRACKET, 3039:3-3039:4
ID("CEReactions"), 3039:4-3039:15
RBRACKET, 3039:15-3039:16
ATTRIBUTE, 3039:17-3039:26
LBRACKET, 3039:27-3039:28
ID("LegacyNullToEmptyString"), 3039:28-3039:51
RBRACKET, 3039:51-3039:52
DOMSTRING, 3039:53-3039:62
ID("linkColor"), 3039:63-3039:72
SEMI, 3039:72-3039:73
LBRACKET, 3040:3-3040:4
ID("CEReactions"), 3040:4-3040:15
RBRACKET, 3040:15-3040:16
ATTRIBUTE, 3040:17-3040:26
LBRACKET, 3040:27-3040:28
ID("LegacyNullToEmptyString"), 3040:28-3040:51
RBRACKET, 3040:51-3040:52
DOMSTRING, 3040:53-3040:62
ID("vlinkColor"), 3040:63-3040:73
SEMI, 3040:73-3040:74
LBRACKET, 3041:3-3041:4
ID("CEReactions"), 3041:4-3041:15
RBRACKET, 3041:15-3041:16
ATTRIBUTE, 3041:17-3041:26
LBRACKET, 3041:27-3041:28
ID("LegacyNullToEmptyString"), 3041:28-3041:51
RBRACKET, 3041:51-3041:52
DOMSTRING, 3041:53-3041:62
ID("alinkColor"), 3041:63-3041:73
SEMI, 3041:73-3041:74
LBRACKET, 3042:3-3042:4
ID("CEReactions"), 3042:4-3042:15
RBRACKET, 3042:15-3042:16
ATTRIBUTE, 3042:17-3042:26
LBRACKET, 3042:27-3042:28
ID("LegacyNullToEmptyString"), 3042:28-3042:51
RBRACKET, 3042:51-3042:52
DOMSTRING, 3042:53-3042:62
ID("bgColor"), 3042:63-3042:70
SEMI, 3042:70-3042:71
LBRACKET, 3044:3-3044:4
ID("SameObject"), 3044:4-3044:14
RBRACKET, 3044:14-3044:15
READONLY, 3044:16-3044:24
ATTRIBUTE, 3044:25-3044:34
ID("HTMLCollection"), 3044:35-3044:49
ID("anchors"), 3044:50-3044:57
SEMI, 3044:57-3044:58
LBRACKET, 3045:3-3045:4
ID("SameObject"), 3045:4-3045:14
RBRACKET, 3045:14-3045:15
READONLY, 3045:16-3045:24
ATTRIBUTE, 3045:25-3045:34
ID("HTMLCollection"), 3045:35-3045:49
ID("applets"), 3045:50-3045:57
SEMI, 3045:57-3045:58
UNDEFINED, 3047:3-3047:12
ID("clear"), 3047:13-3047:18
LPAREN, 3047:18-3047:19
RPAREN, 3047:19-3047:20
SEMI, 3047:20-3047:21
UNDEFINED, 3048:3-3048:12
ID("captureEvents"), 3048:13-3048:26
LPAREN, 3048:26-3048:27
RPAREN, 3048:27-3048:28
SEMI, 3048:28-3048:29
UNDEFINED, 3049:3-3049:12
ID("releaseEvents"), 3049:13-3049:26
LPAREN, 3049:26-3049:27
RPAREN, 3049:27-3049:28
SEMI, 3049:28-3049:29
LBRACKET, 3051:3-3051:4
ID("SameObject"), 3051:4-3051:14
RBRACKET, 3051:14-3051:15
READONLY, 3051:16-3051:24
ATTRIBUTE, 3051:25-3051:34
ID("HTMLAllCollection"), 3051:35-3051:52
ID("all"), 3051:53-3051:56
SEMI, 3051:56-3051:57
RBRACE, 3052:1-3052:2
SEMI, 3052:2-3052:3
PARTIAL, 3054:1-3054:8
INTERFACE, 3054:9-3054:18
ID("Window"), 3054:19-3054:25
LBRACE, 3054:26-3054:27
UNDEFINED, 3055:3-3055:12
ID("captureEvents"), 3055:13-3055:26
LPAREN, 3055:26-3055:27
RPAREN, 3055:27-3055:28
SEMI, 3055:28-3055:29
UNDEFINED, 3056:3-3056:12
ID("releaseEvents"), 3056:13-3056:26
LPAREN, 3056:26-3056:27
RPAREN, 3056:27-3056:28
SEMI, 3056:28-3056:29
LBRACKET, 3058:3-3058:4
ID("Replaceable"), 3058:4-3058:15
COMMA, 3058:15-3058:16
ID("SameObject"), 3058:17-3058:27
RBRACKET, 3058:27-3058:28
READONLY, 3058:29-3058:37
ATTRIBUTE, 3058:38-3058:47
ID("External"), 3058:48-3058:56
ID("external"), 3058:57-3058:65
SEMI, 3058:65-3058:66
RBRACE, 3059:1-3059:2
SEMI, 3059:2-3059:3
LBRACKET, 3061:1-3061:2
ID("Exposed"), 3061:2-3061:9
EQUAL, 3061:9-3061:10
ID("Window"), 3061:10-3061:16
RBRACKET, 3061:16-3061:17
INTERFACE, 3062:1-3062:10
ID("External"), 3062:11-3062:19
LBRACE, 3062:20-3062:21
UNDEFINED, 3063:3-3063:12
ID("AddSearchProvider"), 3063:13-3063:30
LPAREN, 3063:30-3063:31
RPAREN, 3063:31-3063:32
SEMI, 3063:32-3063:33
UNDEFINED, 3064:3-3064:12
ID("IsSearchProviderInstalled"), 3064:13-3064:38
LPAREN, 3064:38-3064:39
RPAREN, 3064:39-3064:40
SEMI, 3064:40-3064:41
RBRACE, 3065:1-3065:2
SEMI, 3065:2-3065:3
EOF, 3066:1-3066:1
---------------------------------------------
[
  Interface(
    {
      name: "HTMLAllCollection",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("Element")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(
              Union(
                [
                  {attrs: [], ty: Id("HTMLCollection")},
                  {attrs: [], ty: Id("Element")}
                ],
              ),
            )),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(
              Union(
                [
                  {attrs: [], ty: Id("HTMLCollection")},
                  {attrs: [], ty: Id("Element")}
                ],
              ),
            )),
            arguments: [
              {
                name: "nameOrIndex",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "HTMLFormControlsCollection",
      partial: false,
      members: [
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(
              Union(
                [
                  {attrs: [], ty: Id("RadioNodeList")},
                  {attrs: [], ty: Id("Element")}
                ],
              ),
            )),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLCollection"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "RadioNodeList",
      partial: false,
      members: [
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("NodeList"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLOptionsCollection",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "option",
                idl_type: {attrs: [], ty: Nullable(Id("HTMLOptionElement"))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Setter(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("add"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "element",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("HTMLOptionElement")},
                      {attrs: [], ty: Id("HTMLOptGroupElement")}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "before",
                idl_type: {
                  attrs: [],
                  ty: Nullable(
                    Union(
                      [
                        {attrs: [], ty: Id("HTMLElement")},
                        {attrs: [], ty: Integer(Long())}
                      ],
                    ),
                  ),
                },
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("remove"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "selectedIndex",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLCollection"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "DOMStringList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(String(DOMString()))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("contains"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "string",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Enum(
    {
      name: "DocumentReadyState",
      values: [""loading"", ""interactive"", ""complete""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "DocumentVisibilityState",
      values: [""visible"", ""hidden""],
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "HTMLOrSVGScriptElement",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("HTMLScriptElement")},
            {attrs: [], ty: Id("SVGScriptElement")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Document",
      partial: true,
      members: [
        Operation(
          {
            name: Some("parseHTMLUnsafe"),
            idl_type: Some(Id("Document")),
            arguments: [
              {
                name: "html",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Static(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "location",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Location"))},
            attrs: [
              {name: "PutForwards", rhs: Ident("href")},
              {name: "LegacyUnforgeable", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "domain",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "referrer",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "cookie",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lastModified",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "readyState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DocumentReadyState")},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Object()),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "title",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "dir",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "body",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLElement"))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "head",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLHeadElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "images",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "embeds",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "plugins",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "links",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "forms",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "scripts",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("getElementsByName"),
            idl_type: Some(Id("NodeList")),
            arguments: [
              {
                name: "elementName",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "currentScript",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLOrSVGScriptElement"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("open"),
            idl_type: Some(Id("Document")),
            arguments: [
              {
                name: "unused1",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              },
              {
                name: "unused2",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("open"),
            idl_type: Some(Nullable(Id("WindowProxy"))),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "features",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("write"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "text",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("writeln"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "text",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "defaultView",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("hasFocus"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "designMode",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("execCommand"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "showUI",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "value",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("queryCommandEnabled"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("queryCommandIndeterm"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("queryCommandState"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("queryCommandSupported"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("queryCommandValue"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "commandId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hidden",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "visibilityState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DocumentVisibilityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onreadystatechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [{name: "LegacyLenientThis", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "onvisibilitychange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "LegacyOverrideBuiltIns", rhs: NoArgs()}],
    },
  ),
  Includes({target: "Document", includes: "GlobalEventHandlers", attrs: []}),
  InterfaceMixin(
    {
      name: "DocumentOrShadowRoot",
      partial: true,
      members: [
        Attribute(
          {
            name: "activeElement",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "title",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "lang",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "translate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "dir",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "hidden",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Nullable(
                Union(
                  [
                    {attrs: [], ty: Boolean()},
                    {attrs: [], ty: Floating(Unrestricted(Double()))},
                    {attrs: [], ty: String(DOMString())}
                  ],
                ),
              ),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "inert",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("click"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "accessKey",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "accessKeyLabel",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "draggable",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "spellcheck",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "writingSuggestions",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "autocapitalize",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "autocorrect",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "innerText",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "outerText",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("attachInternals"),
            idl_type: Some(Id("ElementInternals")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("showPopover"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("ShowPopoverOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("hidePopover"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("togglePopover"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "options",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TogglePopoverOptions")},
                      {attrs: [], ty: Boolean()}
                    ],
                  ),
                },
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "popover",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "headingOffset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectRange", rhs: IntegerList(["0", "8"])}
            ],
          },
        ),
        Attribute(
          {
            name: "headingReset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("Element"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "ShowPopoverOptions",
      partial: false,
      members: [
        {
          name: "source",
          required: false,
          idl_type: {attrs: [], ty: Id("HTMLElement")},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "TogglePopoverOptions",
      partial: false,
      members: [
        {
          name: "force",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("ShowPopoverOptions"),
      attrs: [],
    },
  ),
  Includes({target: "HTMLElement", includes: "GlobalEventHandlers", attrs: []}),
  Includes(
    {target: "HTMLElement", includes: "ElementContentEditable", attrs: []},
  ),
  Includes({target: "HTMLElement", includes: "HTMLOrSVGElement", attrs: []}),
  Interface(
    {
      name: "HTMLUnknownElement",
      partial: false,
      members: [],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  InterfaceMixin(
    {
      name: "HTMLOrSVGElement",
      partial: false,
      members: [
        Attribute(
          {
            name: "dataset",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMStringMap")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "nonce",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "autofocus",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "tabIndex",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("focus"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("FocusOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("blur"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "DOMStringMap",
      partial: false,
      members: [
        Operation(
          {
            name: None,
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "value",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Setter(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Deleter(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyOverrideBuiltIns", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "HTMLHtmlElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLHeadElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTitleElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "text",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLBaseElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "href",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "target",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLLinkElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "href",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "crossOrigin",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "rel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "as",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "relList",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: String(""rel"")}
            ],
          },
        ),
        Attribute(
          {
            name: "media",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "integrity",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "hreflang",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "sizes",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "imageSrcset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "imageSizes",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "blocking",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "fetchPriority",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes({target: "HTMLLinkElement", includes: "LinkStyle", attrs: []}),
  Interface(
    {
      name: "HTMLMetaElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "httpEquiv",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""http-equiv"")}
            ],
          },
        ),
        Attribute(
          {
            name: "content",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "media",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLStyleElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "media",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "blocking",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes({target: "HTMLStyleElement", includes: "LinkStyle", attrs: []}),
  Interface(
    {
      name: "HTMLBodyElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {target: "HTMLBodyElement", includes: "WindowEventHandlers", attrs: []},
  ),
  Interface(
    {
      name: "HTMLHeadingElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLParagraphElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLHRElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLPreElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLQuoteElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "cite",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLOListElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "reversed",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "start",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("1")}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLUListElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLMenuElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLLIElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLDListElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLDivElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLAnchorElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "target",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "download",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ping",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "relList",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: String(""rel"")}
            ],
          },
        ),
        Attribute(
          {
            name: "hreflang",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "text",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {
      target: "HTMLAnchorElement",
      includes: "HTMLHyperlinkElementUtils",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLDataElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTimeElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "dateTime",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLSpanElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLBRElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  InterfaceMixin(
    {
      name: "HTMLHyperlinkElementUtils",
      partial: false,
      members: [
        Attribute(
          {
            name: "href",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "origin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "protocol",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "username",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "password",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "host",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "hostname",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "port",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "pathname",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "search",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "hash",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLModElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "cite",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "dateTime",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLPictureElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLSourceElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "srcset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "sizes",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "media",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLImageElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "alt",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "srcset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "sizes",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "crossOrigin",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "useMap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "isMap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "naturalWidth",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "naturalHeight",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "complete",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "currentSrc",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "decoding",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "loading",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "fetchPriority",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("decode"),
            idl_type: Some(Promise(Undefined())),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {
          name: "LegacyFactoryFunction",
          rhs: NamedArgList(
            "Image",
            [
              {
                name: "width",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              },
              {
                name: "height",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
          ),
        }
      ],
    },
  ),
  Interface(
    {
      name: "HTMLIFrameElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "srcdoc",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: Id("TrustedHTML")},
                  {attrs: [], ty: String(DOMString())}
                ],
              ),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "sandbox",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "allow",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "allowFullscreen",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "loading",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "contentDocument",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Document"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "contentWindow",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getSVGDocument"),
            idl_type: Some(Nullable(Id("Document"))),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLEmbedElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("getSVGDocument"),
            idl_type: Some(Nullable(Id("Document"))),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLObjectElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "data",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "contentDocument",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Document"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "contentWindow",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getSVGDocument"),
            idl_type: Some(Nullable(Id("Document"))),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLVideoElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "videoWidth",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "videoHeight",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "poster",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "playsInline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLMediaElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLAudioElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLMediaElement"),
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {
          name: "LegacyFactoryFunction",
          rhs: NamedArgList(
            "Audio",
            [
              {
                name: "src",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
          ),
        }
      ],
    },
  ),
  Interface(
    {
      name: "HTMLTrackElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "kind",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "srclang",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "default",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Const(
          {
            name: "NONE",
            idl_type: Integer(Unsigned(Short())),
            value: Number("0"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "LOADING",
            idl_type: Integer(Unsigned(Short())),
            value: Number("1"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "LOADED",
            idl_type: Integer(Unsigned(Short())),
            value: Number("2"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "ERROR",
            idl_type: Integer(Unsigned(Short())),
            value: Number("3"),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "readyState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Short()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "track",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TextTrack")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Enum(
    {
      name: "CanPlayTypeResult",
      values: ["""", ""maybe"", ""probably""],
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "MediaProvider",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("MediaStream")},
            {attrs: [], ty: Id("MediaSource")},
            {attrs: [], ty: Id("Blob")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLMediaElement",
      partial: false,
      members: [
        Attribute(
          {
            name: "error",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("MediaError"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "srcObject",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("MediaProvider"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "currentSrc",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "crossOrigin",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Const(
          {
            name: "NETWORK_EMPTY",
            idl_type: Integer(Unsigned(Short())),
            value: Number("0"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "NETWORK_IDLE",
            idl_type: Integer(Unsigned(Short())),
            value: Number("1"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "NETWORK_LOADING",
            idl_type: Integer(Unsigned(Short())),
            value: Number("2"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "NETWORK_NO_SOURCE",
            idl_type: Integer(Unsigned(Short())),
            value: Number("3"),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "networkState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Short()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "preload",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "buffered",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TimeRanges")},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("load"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("canPlayType"),
            idl_type: Some(Id("CanPlayTypeResult")),
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Const(
          {
            name: "HAVE_NOTHING",
            idl_type: Integer(Unsigned(Short())),
            value: Number("0"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "HAVE_METADATA",
            idl_type: Integer(Unsigned(Short())),
            value: Number("1"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "HAVE_CURRENT_DATA",
            idl_type: Integer(Unsigned(Short())),
            value: Number("2"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "HAVE_FUTURE_DATA",
            idl_type: Integer(Unsigned(Short())),
            value: Number("3"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "HAVE_ENOUGH_DATA",
            idl_type: Integer(Unsigned(Short())),
            value: Number("4"),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "readyState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Short()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "seeking",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "currentTime",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("fastSeek"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "time",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "duration",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getStartDate"),
            idl_type: Some(Object()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "paused",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "defaultPlaybackRate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "playbackRate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "preservesPitch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "played",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TimeRanges")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "seekable",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TimeRanges")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ended",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "autoplay",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "loop",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("play"),
            idl_type: Some(Promise(Undefined())),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("pause"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "controls",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "volume",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "muted",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "defaultMuted",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""muted"")}
            ],
          },
        ),
        Attribute(
          {
            name: "audioTracks",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("AudioTrackList")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "videoTracks",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("VideoTrackList")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "textTracks",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TextTrackList")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("addTextTrack"),
            idl_type: Some(Id("TextTrack")),
            arguments: [
              {
                name: "kind",
                idl_type: {attrs: [], ty: Id("TextTrackKind")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "label",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "language",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "MediaError",
      partial: false,
      members: [
        Const(
          {
            name: "MEDIA_ERR_ABORTED",
            idl_type: Integer(Unsigned(Short())),
            value: Number("1"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "MEDIA_ERR_NETWORK",
            idl_type: Integer(Unsigned(Short())),
            value: Number("2"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "MEDIA_ERR_DECODE",
            idl_type: Integer(Unsigned(Short())),
            value: Number("3"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "MEDIA_ERR_SRC_NOT_SUPPORTED",
            idl_type: Integer(Unsigned(Short())),
            value: Number("4"),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "code",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Short()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "message",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "AudioTrackList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("AudioTrack")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getTrackById"),
            idl_type: Some(Nullable(Id("AudioTrack"))),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onaddtrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onremovetrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "AudioTrack",
      partial: false,
      members: [
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "kind",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "language",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "enabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "VideoTrackList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("VideoTrack")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getTrackById"),
            idl_type: Some(Nullable(Id("VideoTrack"))),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectedIndex",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onaddtrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onremovetrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "VideoTrack",
      partial: false,
      members: [
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "kind",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "language",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selected",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "TextTrackList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("TextTrack")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getTrackById"),
            idl_type: Some(Nullable(Id("TextTrack"))),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onaddtrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onremovetrack",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Enum(
    {
      name: "TextTrackMode",
      values: [""disabled"", ""hidden"", ""showing""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "TextTrackKind",
      values: [
        ""subtitles"",
        ""captions"",
        ""descriptions"",
        ""chapters"",
        ""metadata""
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "TextTrack",
      partial: false,
      members: [
        Attribute(
          {
            name: "kind",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("TextTrackKind")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "language",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "inBandMetadataTrackDispatchType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "mode",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("TextTrackMode")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "cues",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("TextTrackCueList"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "activeCues",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("TextTrackCueList"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("addCue"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "cue",
                idl_type: {attrs: [], ty: Id("TextTrackCue")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("removeCue"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "cue",
                idl_type: {attrs: [], ty: Id("TextTrackCue")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncuechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "TextTrackCueList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("TextTrackCue")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getCueById"),
            idl_type: Some(Nullable(Id("TextTrackCue"))),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "TextTrackCue",
      partial: false,
      members: [
        Attribute(
          {
            name: "track",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("TextTrack"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "startTime",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "endTime",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "pauseOnExit",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onenter",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onexit",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "TimeRanges",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("start"),
            idl_type: Some(Floating(Double())),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("end"),
            idl_type: Some(Floating(Double())),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "TrackEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("TrackEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "track",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: Nullable(
                Union(
                  [
                    {attrs: [], ty: Id("VideoTrack")},
                    {attrs: [], ty: Id("AudioTrack")},
                    {attrs: [], ty: Id("TextTrack")}
                  ],
                ),
              ),
            },
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "TrackEventInit",
      partial: false,
      members: [
        {
          name: "track",
          required: false,
          idl_type: {
            attrs: [],
            ty: Nullable(
              Union(
                [
                  {attrs: [], ty: Id("VideoTrack")},
                  {attrs: [], ty: Id("AudioTrack")},
                  {attrs: [], ty: Id("TextTrack")}
                ],
              ),
            ),
          },
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLMapElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "areas",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLAreaElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "alt",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "coords",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "shape",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "target",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "download",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ping",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "relList",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: String(""rel"")}
            ],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {
      target: "HTMLAreaElement",
      includes: "HTMLHyperlinkElementUtils",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "caption",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLTableCaptionElement"))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("createCaption"),
            idl_type: Some(Id("HTMLTableCaptionElement")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteCaption"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "tHead",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLTableSectionElement"))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("createTHead"),
            idl_type: Some(Id("HTMLTableSectionElement")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteTHead"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "tFoot",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLTableSectionElement"))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("createTFoot"),
            idl_type: Some(Id("HTMLTableSectionElement")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteTFoot"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "tBodies",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("createTBody"),
            idl_type: Some(Id("HTMLTableSectionElement")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "rows",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("insertRow"),
            idl_type: Some(Id("HTMLTableRowElement")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("-1")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteRow"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTableCaptionElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTableColElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "span",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("1")},
              {name: "ReflectRange", rhs: IntegerList(["1", "1000"])}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTableSectionElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "rows",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("insertRow"),
            idl_type: Some(Id("HTMLTableRowElement")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("-1")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteRow"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTableRowElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "rowIndex",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "sectionRowIndex",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "cells",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("insertCell"),
            idl_type: Some(Id("HTMLTableCellElement")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("-1")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("deleteCell"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTableCellElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "colSpan",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("1")},
              {name: "ReflectRange", rhs: IntegerList(["1", "1000"])}
            ],
          },
        ),
        Attribute(
          {
            name: "rowSpan",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("1")},
              {name: "ReflectRange", rhs: IntegerList(["0", "65534"])}
            ],
          },
        ),
        Attribute(
          {
            name: "headers",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "cellIndex",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "scope",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "abbr",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLFormElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "acceptCharset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""accept-charset"")}
            ],
          },
        ),
        Attribute(
          {
            name: "action",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "autocomplete",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "enctype",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "encoding",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "method",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "noValidate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "target",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "relList",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: String(""rel"")}
            ],
          },
        ),
        Attribute(
          {
            name: "elements",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLFormControlsCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("Element")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Union(
              [
                {attrs: [], ty: Id("RadioNodeList")},
                {attrs: [], ty: Id("Element")}
              ],
            )),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("submit"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("requestSubmit"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "submitter",
                idl_type: {attrs: [], ty: Nullable(Id("HTMLElement"))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reset"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyOverrideBuiltIns", rhs: NoArgs()},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "HTMLLabelElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "htmlFor",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""for"")}
            ],
          },
        ),
        Attribute(
          {
            name: "control",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLElement"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLInputElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "accept",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "alpha",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "alt",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "autocomplete",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "defaultChecked",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""checked"")}
            ],
          },
        ),
        Attribute(
          {
            name: "checked",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "colorSpace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "dirName",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "files",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("FileList"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "formAction",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "formEnctype",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "formMethod",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "formNoValidate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "formTarget",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "indeterminate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "list",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLDataListElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "max",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "maxLength",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectNonNegative", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "min",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "minLength",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectNonNegative", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "multiple",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "pattern",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "placeholder",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "readOnly",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "required",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "size",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "step",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "defaultValue",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""value"")}
            ],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "valueAsDate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Object())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "valueAsNumber",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("stepUp"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "n",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("1")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("stepDown"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "n",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("1")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NodeList"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("select"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionStart",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Integer(Unsigned(Long())))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionEnd",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Integer(Unsigned(Long())))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionDirection",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setRangeText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "replacement",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setRangeText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "replacement",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "start",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "end",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "selectionMode",
                idl_type: {attrs: [], ty: Id("SelectionMode")},
                optional: true,
                variadic: false,
                default: Some(String(""preserve"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setSelectionRange"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "start",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "end",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "direction",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("showPicker"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {target: "HTMLInputElement", includes: "PopoverTargetAttributes", attrs: []},
  ),
  Interface(
    {
      name: "HTMLButtonElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "command",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "commandForElement",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "formAction",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "formEnctype",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "formMethod",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "formNoValidate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "formTarget",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {
      target: "HTMLButtonElement",
      includes: "PopoverTargetAttributes",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLSelectElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "autocomplete",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "multiple",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "required",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "size",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("0")}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "options",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLOptionsCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(Id("HTMLOptionElement"))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(Id("HTMLOptionElement"))),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("add"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "element",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("HTMLOptionElement")},
                      {attrs: [], ty: Id("HTMLOptGroupElement")}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "before",
                idl_type: {
                  attrs: [],
                  ty: Nullable(
                    Union(
                      [
                        {attrs: [], ty: Id("HTMLElement")},
                        {attrs: [], ty: Integer(Long())}
                      ],
                    ),
                  ),
                },
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("remove"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("remove"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "option",
                idl_type: {attrs: [], ty: Nullable(Id("HTMLOptionElement"))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Setter(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "selectedOptions",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "selectedIndex",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("showPicker"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLDataListElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "options",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLOptGroupElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLOptionElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "label",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "defaultSelected",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""selected"")}
            ],
          },
        ),
        Attribute(
          {
            name: "selected",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "text",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "index",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {
          name: "LegacyFactoryFunction",
          rhs: NamedArgList(
            "Option",
            [
              {
                name: "text",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "value",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              },
              {
                name: "defaultSelected",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "selected",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              }
            ],
          ),
        }
      ],
    },
  ),
  Interface(
    {
      name: "HTMLTextAreaElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "autocomplete",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "cols",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectPositiveWithFallback", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("20")}
            ],
          },
        ),
        Attribute(
          {
            name: "dirName",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "maxLength",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectNonNegative", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "minLength",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectNonNegative", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "placeholder",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "readOnly",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "required",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rows",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectPositiveWithFallback", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("2")}
            ],
          },
        ),
        Attribute(
          {
            name: "wrap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "defaultValue",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "textLength",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("select"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionStart",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionEnd",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "selectionDirection",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setRangeText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "replacement",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setRangeText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "replacement",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "start",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "end",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "selectionMode",
                idl_type: {attrs: [], ty: Id("SelectionMode")},
                optional: true,
                variadic: false,
                default: Some(String(""preserve"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setSelectionRange"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "start",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "end",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "direction",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLOutputElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "htmlFor",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: String(""for"")}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "defaultValue",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLProgressElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "max",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectPositive", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Decimal("1.0")}
            ],
          },
        ),
        Attribute(
          {
            name: "position",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLMeterElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "min",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "max",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "low",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "high",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "optimum",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLFieldSetElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "disabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "elements",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setCustomValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "error",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLLegendElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLSelectedContentElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Enum(
    {
      name: "SelectionMode",
      values: [""select"", ""start"", ""end"", ""preserve""],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "ValidityState",
      partial: false,
      members: [
        Attribute(
          {
            name: "valueMissing",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "typeMismatch",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "patternMismatch",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "tooLong",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "tooShort",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "rangeUnderflow",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "rangeOverflow",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "stepMismatch",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "badInput",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "customError",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "valid",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "SubmitEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("SubmitEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "submitter",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLElement"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "SubmitEventInit",
      partial: false,
      members: [
        {
          name: "submitter",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("HTMLElement"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "FormDataEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("FormDataEventInit")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "formData",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("FormData")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "FormDataEventInit",
      partial: false,
      members: [
        {
          name: "formData",
          required: true,
          idl_type: {attrs: [], ty: Id("FormData")},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLDetailsElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "open",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLDialogElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "open",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "returnValue",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "closedBy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectSetter", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("show"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("showModal"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "returnValue",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("requestClose"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "returnValue",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLScriptElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "noModule",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "async",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "defer",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "blocking",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMTokenList")},
            attrs: [
              {name: "SameObject", rhs: NoArgs()},
              {name: "PutForwards", rhs: Ident("value")},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "crossOrigin",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "referrerPolicy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "integrity",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "fetchPriority",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "text",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("supports"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Static(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLTemplateElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "content",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DocumentFragment")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "shadowRootMode",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "shadowRootDelegatesFocus",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "shadowRootClonable",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "shadowRootSerializable",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "shadowRootCustomElementRegistry",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLSlotElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("assignedNodes"),
            idl_type: Some(Sequence({attrs: [], ty: Id("Node")})),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("AssignedNodesOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("assignedElements"),
            idl_type: Some(Sequence({attrs: [], ty: Id("Element")})),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("AssignedNodesOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("assign"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "nodes",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("Element")},
                      {attrs: [], ty: Id("Text")}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "AssignedNodesOptions",
      partial: false,
      members: [
        {
          name: "flatten",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "RenderingContext",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("CanvasRenderingContext2D")},
            {attrs: [], ty: Id("ImageBitmapRenderingContext")},
            {attrs: [], ty: Id("WebGLRenderingContext")},
            {attrs: [], ty: Id("WebGL2RenderingContext")},
            {attrs: [], ty: Id("GPUCanvasContext")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLCanvasElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("getContext"),
            idl_type: Some(Nullable(Id("RenderingContext"))),
            arguments: [
              {
                name: "contextId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Any()},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("toDataURL"),
            idl_type: Some(String(USVString())),
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String(""image/png"")),
                attrs: [],
              },
              {
                name: "quality",
                idl_type: {attrs: [], ty: Any()},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("toBlob"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "_callback",
                idl_type: {attrs: [], ty: Id("BlobCallback")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String(""image/png"")),
                attrs: [],
              },
              {
                name: "quality",
                idl_type: {attrs: [], ty: Any()},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("transferControlToOffscreen"),
            idl_type: Some(Id("OffscreenCanvas")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Callback(
    {
      name: "BlobCallback",
      idl_type: Undefined(),
      arguments: [
        {
          name: "blob",
          idl_type: {attrs: [], ty: Nullable(Id("Blob"))},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "HTMLOrSVGImageElement",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("HTMLImageElement")},
            {attrs: [], ty: Id("SVGImageElement")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "CanvasImageSource",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("HTMLOrSVGImageElement")},
            {attrs: [], ty: Id("HTMLVideoElement")},
            {attrs: [], ty: Id("HTMLCanvasElement")},
            {attrs: [], ty: Id("ImageBitmap")},
            {attrs: [], ty: Id("OffscreenCanvas")},
            {attrs: [], ty: Id("VideoFrame")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Enum(
    {
      name: "PredefinedColorSpace",
      values: [""srgb"", ""display-p3""],
      attrs: [],
    },
  ),
  Enum({name: "CanvasColorType", values: [""unorm8"", ""float16""], attrs: []}),
  Enum({name: "CanvasFillRule", values: [""nonzero"", ""evenodd""], attrs: []}),
  Dictionary(
    {
      name: "CanvasRenderingContext2DSettings",
      partial: false,
      members: [
        {
          name: "alpha",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(true)),
        },
        {
          name: "desynchronized",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "colorSpace",
          required: false,
          idl_type: {attrs: [], ty: Id("PredefinedColorSpace")},
          attrs: [],
          default: Some(String(""srgb"")),
        },
        {
          name: "colorType",
          required: false,
          idl_type: {attrs: [], ty: Id("CanvasColorType")},
          attrs: [],
          default: Some(String(""unorm8"")),
        },
        {
          name: "willReadFrequently",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Enum(
    {
      name: "ImageSmoothingQuality",
      values: [""low"", ""medium"", ""high""],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CanvasRenderingContext2D",
      partial: false,
      members: [
        Attribute(
          {
            name: "canvas",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCanvasElement")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasSettings", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasState", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasTransform", attrs: []},
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasCompositing",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasImageSmoothing",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasFillStrokeStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasShadowStyles",
      attrs: [],
    },
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasFilters", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasRect", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasDrawPath", attrs: []},
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasUserInterface",
      attrs: [],
    },
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasText", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasDrawImage", attrs: []},
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasImageData", attrs: []},
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasPathDrawingStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "CanvasRenderingContext2D",
      includes: "CanvasTextDrawingStyles",
      attrs: [],
    },
  ),
  Includes(
    {target: "CanvasRenderingContext2D", includes: "CanvasPath", attrs: []},
  ),
  InterfaceMixin(
    {
      name: "CanvasSettings",
      partial: false,
      members: [
        Operation(
          {
            name: Some("getContextAttributes"),
            idl_type: Some(Id("CanvasRenderingContext2DSettings")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasState",
      partial: false,
      members: [
        Operation(
          {
            name: Some("save"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("restore"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reset"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("isContextLost"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasTransform",
      partial: false,
      members: [
        Operation(
          {
            name: Some("scale"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("rotate"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "angle",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("translate"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("transform"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "a",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "b",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "c",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "d",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "e",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "f",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getTransform"),
            idl_type: Some(Id("DOMMatrix")),
            arguments: [],
            special: Regular(),
            attrs: [{name: "NewObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("setTransform"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "a",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "b",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "c",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "d",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "e",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "f",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setTransform"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "transform",
                idl_type: {attrs: [], ty: Id("DOMMatrix2DInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("resetTransform"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasCompositing",
      partial: false,
      members: [
        Attribute(
          {
            name: "globalAlpha",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "globalCompositeOperation",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasImageSmoothing",
      partial: false,
      members: [
        Attribute(
          {
            name: "imageSmoothingEnabled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "imageSmoothingQuality",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("ImageSmoothingQuality")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasFillStrokeStyles",
      partial: false,
      members: [
        Attribute(
          {
            name: "strokeStyle",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: String(DOMString())},
                  {attrs: [], ty: Id("CanvasGradient")},
                  {attrs: [], ty: Id("CanvasPattern")}
                ],
              ),
            },
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fillStyle",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: String(DOMString())},
                  {attrs: [], ty: Id("CanvasGradient")},
                  {attrs: [], ty: Id("CanvasPattern")}
                ],
              ),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createLinearGradient"),
            idl_type: Some(Id("CanvasGradient")),
            arguments: [
              {
                name: "x0",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y0",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x1",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y1",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createRadialGradient"),
            idl_type: Some(Id("CanvasGradient")),
            arguments: [
              {
                name: "x0",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y0",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "r0",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x1",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y1",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "r1",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createConicGradient"),
            idl_type: Some(Id("CanvasGradient")),
            arguments: [
              {
                name: "startAngle",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createPattern"),
            idl_type: Some(Nullable(Id("CanvasPattern"))),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("CanvasImageSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "repetition",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasShadowStyles",
      partial: false,
      members: [
        Attribute(
          {
            name: "shadowOffsetX",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "shadowOffsetY",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "shadowBlur",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "shadowColor",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasFilters",
      partial: false,
      members: [
        Attribute(
          {
            name: "filter",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasRect",
      partial: false,
      members: [
        Operation(
          {
            name: Some("clearRect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "w",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "h",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("fillRect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "w",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "h",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("strokeRect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "w",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "h",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasDrawPath",
      partial: false,
      members: [
        Operation(
          {
            name: Some("beginPath"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("fill"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("fill"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("stroke"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("stroke"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clip"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clip"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("isPointInPath"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("isPointInPath"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "fillRule",
                idl_type: {attrs: [], ty: Id("CanvasFillRule")},
                optional: true,
                variadic: false,
                default: Some(String(""nonzero"")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("isPointInStroke"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("isPointInStroke"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasUserInterface",
      partial: false,
      members: [
        Operation(
          {
            name: Some("drawFocusIfNeeded"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "element",
                idl_type: {attrs: [], ty: Id("Element")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("drawFocusIfNeeded"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "element",
                idl_type: {attrs: [], ty: Id("Element")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasText",
      partial: false,
      members: [
        Operation(
          {
            name: Some("fillText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "text",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "maxWidth",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("strokeText"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "text",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "maxWidth",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("measureText"),
            idl_type: Some(Id("TextMetrics")),
            arguments: [
              {
                name: "text",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasDrawImage",
      partial: false,
      members: [
        Operation(
          {
            name: Some("drawImage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("CanvasImageSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dx",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dy",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("drawImage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("CanvasImageSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dx",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dy",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dw",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dh",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("drawImage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("CanvasImageSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sx",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sy",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sw",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dx",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dy",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dw",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dh",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasImageData",
      partial: false,
      members: [
        Operation(
          {
            name: Some("createImageData"),
            idl_type: Some(Id("ImageData")),
            arguments: [
              {
                name: "sw",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "settings",
                idl_type: {attrs: [], ty: Id("ImageDataSettings")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createImageData"),
            idl_type: Some(Id("ImageData")),
            arguments: [
              {
                name: "imageData",
                idl_type: {attrs: [], ty: Id("ImageData")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getImageData"),
            idl_type: Some(Id("ImageData")),
            arguments: [
              {
                name: "sx",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "sy",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "sw",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "settings",
                idl_type: {attrs: [], ty: Id("ImageDataSettings")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("putImageData"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "imageData",
                idl_type: {attrs: [], ty: Id("ImageData")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dx",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dy",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("putImageData"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "imageData",
                idl_type: {attrs: [], ty: Id("ImageData")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "dx",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dy",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dirtyX",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dirtyY",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dirtyWidth",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "dirtyHeight",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasLineCap",
      values: [""butt"", ""round"", ""square""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasLineJoin",
      values: [""round"", ""bevel"", ""miter""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasTextAlign",
      values: [""start"", ""end"", ""left"", ""right"", ""center""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasTextBaseline",
      values: [
        ""top"",
        ""hanging"",
        ""middle"",
        ""alphabetic"",
        ""ideographic"",
        ""bottom""
      ],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasDirection",
      values: [""ltr"", ""rtl"", ""inherit""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasFontKerning",
      values: [""auto"", ""normal"", ""none""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasFontStretch",
      values: [
        ""ultra-condensed"",
        ""extra-condensed"",
        ""condensed"",
        ""semi-condensed"",
        ""normal"",
        ""semi-expanded"",
        ""expanded"",
        ""extra-expanded"",
        ""ultra-expanded""
      ],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasFontVariantCaps",
      values: [
        ""normal"",
        ""small-caps"",
        ""all-small-caps"",
        ""petite-caps"",
        ""all-petite-caps"",
        ""unicase"",
        ""titling-caps""
      ],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "CanvasTextRendering",
      values: [
        ""auto"",
        ""optimizeSpeed"",
        ""optimizeLegibility"",
        ""geometricPrecision""
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasPathDrawingStyles",
      partial: false,
      members: [
        Attribute(
          {
            name: "lineWidth",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lineCap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasLineCap")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lineJoin",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasLineJoin")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "miterLimit",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setLineDash"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "segments",
                idl_type: {
                  attrs: [],
                  ty: Sequence(
                    {attrs: [], ty: Floating(Unrestricted(Double()))},
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getLineDash"),
            idl_type: Some(Sequence(
              {attrs: [], ty: Floating(Unrestricted(Double()))},
            )),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lineDashOffset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasTextDrawingStyles",
      partial: false,
      members: [
        Attribute(
          {
            name: "lang",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "font",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "textAlign",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasTextAlign")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "textBaseline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasTextBaseline")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "direction",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasDirection")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "letterSpacing",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fontKerning",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasFontKerning")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fontStretch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasFontStretch")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fontVariantCaps",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasFontVariantCaps")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "textRendering",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("CanvasTextRendering")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "wordSpacing",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "CanvasPath",
      partial: false,
      members: [
        Operation(
          {
            name: Some("closePath"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("moveTo"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("lineTo"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("quadraticCurveTo"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "cpx",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "cpy",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("bezierCurveTo"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "cp1x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "cp1y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "cp2x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "cp2y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("arcTo"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x1",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y1",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x2",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y2",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "radius",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("rect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "w",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "h",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("roundRect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "w",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "h",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "radii",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Floating(Unrestricted(Double()))},
                      {attrs: [], ty: Id("DOMPointInit")},
                      {
                        attrs: [],
                        ty: Sequence(
                          {
                            attrs: [],
                            ty: Union(
                              [
                                {
                                  attrs: [],
                                  ty: Floating(Unrestricted(Double())),
                                },
                                {attrs: [], ty: Id("DOMPointInit")}
                              ],
                            ),
                          },
                        ),
                      }
                    ],
                  ),
                },
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("arc"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "radius",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "startAngle",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "endAngle",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "counterclockwise",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("ellipse"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "x",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "radiusX",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "radiusY",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "rotation",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "startAngle",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "endAngle",
                idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "counterclockwise",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CanvasGradient",
      partial: false,
      members: [
        Operation(
          {
            name: Some("addColorStop"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "offset",
                idl_type: {attrs: [], ty: Floating(Double())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "color",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Interface(
    {
      name: "CanvasPattern",
      partial: false,
      members: [
        Operation(
          {
            name: Some("setTransform"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "transform",
                idl_type: {attrs: [], ty: Id("DOMMatrix2DInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Interface(
    {
      name: "TextMetrics",
      partial: false,
      members: [
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "actualBoundingBoxLeft",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "actualBoundingBoxRight",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fontBoundingBoxAscent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "fontBoundingBoxDescent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "actualBoundingBoxAscent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "actualBoundingBoxDescent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "emHeightAscent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "emHeightDescent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hangingBaseline",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "alphabeticBaseline",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ideographicBaseline",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Floating(Double())},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Interface(
    {
      name: "Path2D",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "path",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("Path2D")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("addPath"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "path",
                idl_type: {attrs: [], ty: Id("Path2D")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "transform",
                idl_type: {attrs: [], ty: Id("DOMMatrix2DInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Includes({target: "Path2D", includes: "CanvasPath", attrs: []}),
  Interface(
    {
      name: "ImageBitmapRenderingContext",
      partial: false,
      members: [
        Attribute(
          {
            name: "canvas",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: Id("HTMLCanvasElement")},
                  {attrs: [], ty: Id("OffscreenCanvas")}
                ],
              ),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("transferFromImageBitmap"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "bitmap",
                idl_type: {attrs: [], ty: Nullable(Id("ImageBitmap"))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Dictionary(
    {
      name: "ImageBitmapRenderingContextSettings",
      partial: false,
      members: [
        {
          name: "alpha",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(true)),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "OffscreenRenderingContext",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("OffscreenCanvasRenderingContext2D")},
            {attrs: [], ty: Id("ImageBitmapRenderingContext")},
            {attrs: [], ty: Id("WebGLRenderingContext")},
            {attrs: [], ty: Id("WebGL2RenderingContext")},
            {attrs: [], ty: Id("GPUCanvasContext")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "ImageEncodeOptions",
      partial: false,
      members: [
        {
          name: "type",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String(""image/png"")),
        },
        {
          name: "quality",
          required: false,
          idl_type: {attrs: [], ty: Floating(Unrestricted(Double()))},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Enum(
    {
      name: "OffscreenRenderingContextId",
      values: [""2d"", ""bitmaprenderer"", ""webgl"", ""webgl2"", ""webgpu""],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "OffscreenCanvas",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "width",
                idl_type: {attrs: [], ty: Integer(Unsigned(LongLong()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              },
              {
                name: "height",
                idl_type: {attrs: [], ty: Integer(Unsigned(LongLong()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              ty: Integer(Unsigned(LongLong())),
            },
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "EnforceRange", rhs: NoArgs()}],
              ty: Integer(Unsigned(LongLong())),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getContext"),
            idl_type: Some(Nullable(Id("OffscreenRenderingContext"))),
            arguments: [
              {
                name: "contextId",
                idl_type: {attrs: [], ty: Id("OffscreenRenderingContextId")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Any()},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("transferToImageBitmap"),
            idl_type: Some(Id("ImageBitmap")),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("convertToBlob"),
            idl_type: Some(Promise(Id("Blob"))),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("ImageEncodeOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncontextlost",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncontextrestored",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [
        {name: "Exposed", rhs: IdentList(["Window", "Worker"])},
        {name: "Transferable", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "OffscreenCanvasRenderingContext2D",
      partial: false,
      members: [
        Attribute(
          {
            name: "canvas",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("OffscreenCanvas")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasSettings",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasState",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasTransform",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasCompositing",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasImageSmoothing",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasFillStrokeStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasShadowStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasFilters",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasRect",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasDrawPath",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasText",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasDrawImage",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasImageData",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasPathDrawingStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasTextDrawingStyles",
      attrs: [],
    },
  ),
  Includes(
    {
      target: "OffscreenCanvasRenderingContext2D",
      includes: "CanvasPath",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CustomElementRegistry",
      partial: false,
      members: [
        Constructor({arguments: [], attrs: []}),
        Operation(
          {
            name: Some("define"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "constructor",
                idl_type: {attrs: [], ty: Id("CustomElementConstructor")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("ElementDefinitionOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("get"),
            idl_type: Some(Union(
              [
                {attrs: [], ty: Id("CustomElementConstructor")},
                {attrs: [], ty: Undefined()}
              ],
            )),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getName"),
            idl_type: Some(Nullable(String(DOMString()))),
            arguments: [
              {
                name: "constructor",
                idl_type: {attrs: [], ty: Id("CustomElementConstructor")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("whenDefined"),
            idl_type: Some(Promise(Id("CustomElementConstructor"))),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("upgrade"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "root",
                idl_type: {attrs: [], ty: Id("Node")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("initialize"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "root",
                idl_type: {attrs: [], ty: Id("Node")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Callback(
    {
      name: "CustomElementConstructor",
      idl_type: Id("HTMLElement"),
      arguments: [],
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "ElementDefinitionOptions",
      partial: false,
      members: [
        {
          name: "extends",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "ElementInternals",
      partial: false,
      members: [
        Attribute(
          {
            name: "shadowRoot",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("ShadowRoot"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setFormValue"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "value",
                idl_type: {
                  attrs: [],
                  ty: Nullable(
                    Union(
                      [
                        {attrs: [], ty: Id("File")},
                        {attrs: [], ty: String(USVString())},
                        {attrs: [], ty: Id("FormData")}
                      ],
                    ),
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "state",
                idl_type: {
                  attrs: [],
                  ty: Nullable(
                    Union(
                      [
                        {attrs: [], ty: Id("File")},
                        {attrs: [], ty: String(USVString())},
                        {attrs: [], ty: Id("FormData")}
                      ],
                    ),
                  ),
                },
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "form",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("HTMLFormElement"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setValidity"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "flags",
                idl_type: {attrs: [], ty: Id("ValidityStateFlags")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              },
              {
                name: "message",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              },
              {
                name: "anchor",
                idl_type: {attrs: [], ty: Id("HTMLElement")},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "willValidate",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validity",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ValidityState")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "validationMessage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("checkValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportValidity"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "labels",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NodeList")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "states",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("CustomStateSet")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes({target: "ElementInternals", includes: "ARIAMixin", attrs: []}),
  Dictionary(
    {
      name: "ValidityStateFlags",
      partial: false,
      members: [
        {
          name: "valueMissing",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "typeMismatch",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "patternMismatch",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "tooLong",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "tooShort",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "rangeUnderflow",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "rangeOverflow",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "stepMismatch",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "badInput",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "customError",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CustomStateSet",
      partial: false,
      members: [
        SetLike(
          {
            idl_type: {attrs: [], ty: String(DOMString())},
            readonly: false,
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "VisibilityStateEntry",
      partial: false,
      members: [
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "entryType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "startTime",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMHighResTimeStamp")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "duration",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("PerformanceEntry"),
      attrs: [{name: "Exposed", rhs: IdentList(["Window"])}],
    },
  ),
  Interface(
    {
      name: "UserActivation",
      partial: false,
      members: [
        Attribute(
          {
            name: "hasBeenActive",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "isActive",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "Navigator",
      partial: true,
      members: [
        Attribute(
          {
            name: "userActivation",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("UserActivation")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "ToggleEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("ToggleEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oldState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "newState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "source",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "ToggleEventInit",
      partial: false,
      members: [
        {
          name: "oldState",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "newState",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CommandEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("CommandEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "source",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "command",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "CommandEventInit",
      partial: false,
      members: [
        {
          name: "source",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("Element"))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "command",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "FocusOptions",
      partial: false,
      members: [
        {
          name: "preventScroll",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "focusVisible",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "ElementContentEditable",
      partial: false,
      members: [
        Attribute(
          {
            name: "contentEditable",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "enterKeyHint",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "isContentEditable",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "inputMode",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "CloseWatcher",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("CloseWatcherOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("requestClose"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("destroy"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncancel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onclose",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "CloseWatcherOptions",
      partial: false,
      members: [
        {
          name: "signal",
          required: false,
          idl_type: {attrs: [], ty: Id("AbortSignal")},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "DataTransfer",
      partial: false,
      members: [
        Constructor({arguments: [], attrs: []}),
        Attribute(
          {
            name: "dropEffect",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "effectAllowed",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "items",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DataTransferItemList")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("setDragImage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("Element")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "x",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "y",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "types",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: FrozenArray({attrs: [], ty: String(DOMString())}),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getData"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "format",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setData"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "format",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "data",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clearData"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "format",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "files",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("FileList")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "DataTransferItemList",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Id("DataTransferItem")),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("add"),
            idl_type: Some(Nullable(Id("DataTransferItem"))),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("add"),
            idl_type: Some(Nullable(Id("DataTransferItem"))),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: Id("File")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("remove"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clear"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "DataTransferItem",
      partial: false,
      members: [
        Attribute(
          {
            name: "kind",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getAsString"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "_callback",
                idl_type: {
                  attrs: [],
                  ty: Nullable(Id("FunctionStringCallback")),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getAsFile"),
            idl_type: Some(Nullable(Id("File"))),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Callback(
    {
      name: "FunctionStringCallback",
      idl_type: Undefined(),
      arguments: [
        {
          name: "data",
          idl_type: {attrs: [], ty: String(DOMString())},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "DragEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("DragEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "dataTransfer",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("DataTransfer"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("MouseEvent"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "DragEventInit",
      partial: false,
      members: [
        {
          name: "dataTransfer",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("DataTransfer"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("MouseEventInit"),
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "PopoverTargetAttributes",
      partial: false,
      members: [
        Attribute(
          {
            name: "popoverTargetElement",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "popoverTargetAction",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Window",
      partial: false,
      members: [
        Attribute(
          {
            name: "window",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WindowProxy")},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "self",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WindowProxy")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "document",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Document")},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "location",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Location")},
            attrs: [
              {name: "PutForwards", rhs: Ident("href")},
              {name: "LegacyUnforgeable", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "history",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("History")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigation",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Navigation")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "customElements",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("CustomElementRegistry")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "locationbar",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "menubar",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "personalbar",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "scrollbars",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "statusbar",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "toolbar",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("BarProp")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "status",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "closed",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("stop"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("focus"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("blur"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "frames",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WindowProxy")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "top",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "opener",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "parent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "frameElement",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("open"),
            idl_type: Some(Nullable(Id("WindowProxy"))),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "target",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String(""_blank"")),
                attrs: [],
              },
              {
                name: "features",
                idl_type: {
                  attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
                  ty: String(DOMString()),
                },
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: None,
            idl_type: Some(Object()),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigator",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Navigator")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "clientInformation",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Navigator")},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "originAgentCluster",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("alert"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("alert"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("confirm"),
            idl_type: Some(Boolean()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("prompt"),
            idl_type: Some(Nullable(String(DOMString()))),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "default",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("print"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "targetOrigin",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "transfer",
                idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Object()})},
                optional: true,
                variadic: false,
                default: Some(Sequence()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("WindowPostMessageOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [
        {name: "Global", rhs: Ident("Window")},
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Includes({target: "Window", includes: "GlobalEventHandlers", attrs: []}),
  Includes({target: "Window", includes: "WindowEventHandlers", attrs: []}),
  Dictionary(
    {
      name: "WindowPostMessageOptions",
      partial: false,
      members: [
        {
          name: "targetOrigin",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String(""/"")),
        }
      ],
      inheritance: Some("StructuredSerializeOptions"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "BarProp",
      partial: false,
      members: [
        Attribute(
          {
            name: "visible",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "Location",
      partial: false,
      members: [
        Attribute(
          {
            name: "href",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "origin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "protocol",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "host",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "hostname",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "port",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "pathname",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "search",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "hash",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("assign"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("replace"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("reload"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "LegacyUnforgeable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "ancestorOrigins",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("DOMStringList")},
            attrs: [
              {name: "LegacyUnforgeable", rhs: NoArgs()},
              {name: "SameObject", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Enum({name: "ScrollRestoration", values: [""auto"", ""manual""], attrs: []}),
  Interface(
    {
      name: "History",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "scrollRestoration",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("ScrollRestoration")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "state",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("go"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "delta",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("back"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("forward"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("pushState"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "unused",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "url",
                idl_type: {attrs: [], ty: Nullable(String(USVString()))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("replaceState"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "unused",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "url",
                idl_type: {attrs: [], ty: Nullable(String(USVString()))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "Navigation",
      partial: false,
      members: [
        Operation(
          {
            name: Some("entries"),
            idl_type: Some(Sequence(
              {attrs: [], ty: Id("NavigationHistoryEntry")},
            )),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "currentEntry",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationHistoryEntry"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("updateCurrentEntry"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "options",
                idl_type: {
                  attrs: [],
                  ty: Id("NavigationUpdateCurrentEntryOptions"),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "transition",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationTransition"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "activation",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationActivation"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "canGoBack",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "canGoForward",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("navigate"),
            idl_type: Some(Id("NavigationResult")),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationNavigateOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reload"),
            idl_type: Some(Id("NavigationResult")),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationReloadOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("traverseTo"),
            idl_type: Some(Id("NavigationResult")),
            arguments: [
              {
                name: "key",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("back"),
            idl_type: Some(Id("NavigationResult")),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("forward"),
            idl_type: Some(Id("NavigationResult")),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onnavigate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onnavigatesuccess",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onnavigateerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncurrententrychange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "NavigationUpdateCurrentEntryOptions",
      partial: false,
      members: [
        {
          name: "state",
          required: true,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "NavigationOptions",
      partial: false,
      members: [
        {
          name: "info",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "NavigationNavigateOptions",
      partial: false,
      members: [
        {
          name: "state",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        },
        {
          name: "history",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationHistoryBehavior")},
          attrs: [],
          default: Some(String(""auto"")),
        }
      ],
      inheritance: Some("NavigationOptions"),
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "NavigationReloadOptions",
      partial: false,
      members: [
        {
          name: "state",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("NavigationOptions"),
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "NavigationResult",
      partial: false,
      members: [
        {
          name: "committed",
          required: false,
          idl_type: {attrs: [], ty: Promise(Id("NavigationHistoryEntry"))},
          attrs: [],
          default: None,
        },
        {
          name: "finished",
          required: false,
          idl_type: {attrs: [], ty: Promise(Id("NavigationHistoryEntry"))},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Enum(
    {
      name: "NavigationHistoryBehavior",
      values: [""auto"", ""push"", ""replace""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "NavigationType",
      values: [""push"", ""replace"", ""reload"", ""traverse""],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "NavigationHistoryEntry",
      partial: false,
      members: [
        Attribute(
          {
            name: "url",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(USVString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "key",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "index",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(LongLong())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "sameDocument",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getState"),
            idl_type: Some(Any()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondispose",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NavigationTransition",
      partial: false,
      members: [
        Attribute(
          {
            name: "navigationType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationType")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "from",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationHistoryEntry")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "committed",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Promise(Undefined())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "finished",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Promise(Undefined())},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NavigationActivation",
      partial: false,
      members: [
        Attribute(
          {
            name: "from",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationHistoryEntry"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "entry",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationHistoryEntry")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigationType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationType")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NavigateEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("NavigateEventInit")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigationType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationType")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "destination",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationDestination")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "canIntercept",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "userInitiated",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hashChange",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "signal",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("AbortSignal")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "formData",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("FormData"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "downloadRequest",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "info",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hasUAVisualTransition",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "sourceElement",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Element"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("intercept"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationInterceptOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("scroll"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "NavigateEventInit",
      partial: false,
      members: [
        {
          name: "navigationType",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationType")},
          attrs: [],
          default: Some(String(""push"")),
        },
        {
          name: "destination",
          required: true,
          idl_type: {attrs: [], ty: Id("NavigationDestination")},
          attrs: [],
          default: None,
        },
        {
          name: "canIntercept",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "userInitiated",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "hashChange",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "signal",
          required: true,
          idl_type: {attrs: [], ty: Id("AbortSignal")},
          attrs: [],
          default: None,
        },
        {
          name: "formData",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("FormData"))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "downloadRequest",
          required: false,
          idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "info",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        },
        {
          name: "hasUAVisualTransition",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "sourceElement",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("Element"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "NavigationInterceptOptions",
      partial: false,
      members: [
        {
          name: "precommitHandler",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationPrecommitHandler")},
          attrs: [],
          default: None,
        },
        {
          name: "handler",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationInterceptHandler")},
          attrs: [],
          default: None,
        },
        {
          name: "focusReset",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationFocusReset")},
          attrs: [],
          default: None,
        },
        {
          name: "scroll",
          required: false,
          idl_type: {attrs: [], ty: Id("NavigationScrollBehavior")},
          attrs: [],
          default: None,
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Enum(
    {
      name: "NavigationFocusReset",
      values: [""after-transition"", ""manual""],
      attrs: [],
    },
  ),
  Enum(
    {
      name: "NavigationScrollBehavior",
      values: [""after-transition"", ""manual""],
      attrs: [],
    },
  ),
  Callback(
    {
      name: "NavigationInterceptHandler",
      idl_type: Promise(Undefined()),
      arguments: [],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "NavigationPrecommitController",
      partial: false,
      members: [
        Operation(
          {
            name: Some("redirect"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("NavigationNavigateOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Callback(
    {
      name: "NavigationPrecommitHandler",
      idl_type: Promise(Undefined()),
      arguments: [
        {
          name: "controller",
          idl_type: {attrs: [], ty: Id("NavigationPrecommitController")},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "NavigationDestination",
      partial: false,
      members: [
        Attribute(
          {
            name: "url",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "key",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "index",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(LongLong())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "sameDocument",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getState"),
            idl_type: Some(Any()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NavigationCurrentEntryChangeEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {
                  attrs: [],
                  ty: Id("NavigationCurrentEntryChangeEventInit"),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigationType",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationType"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "from",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("NavigationHistoryEntry")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "NavigationCurrentEntryChangeEventInit",
      partial: false,
      members: [
        {
          name: "navigationType",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("NavigationType"))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "from",
          required: true,
          idl_type: {attrs: [], ty: Id("NavigationHistoryEntry")},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PopStateEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("PopStateEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "state",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hasUAVisualTransition",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "PopStateEventInit",
      partial: false,
      members: [
        {
          name: "state",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "hasUAVisualTransition",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HashChangeEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("HashChangeEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oldURL",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "newURL",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "HashChangeEventInit",
      partial: false,
      members: [
        {
          name: "oldURL",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "newURL",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String("""")),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PageSwapEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("PageSwapEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "activation",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("NavigationActivation"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "viewTransition",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("ViewTransition"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "PageSwapEventInit",
      partial: false,
      members: [
        {
          name: "activation",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("NavigationActivation"))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "viewTransition",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("ViewTransition"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PageRevealEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("PageRevealEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "viewTransition",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("ViewTransition"))},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "PageRevealEventInit",
      partial: false,
      members: [
        {
          name: "viewTransition",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("ViewTransition"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PageTransitionEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("PageTransitionEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "persisted",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "PageTransitionEventInit",
      partial: false,
      members: [
        {
          name: "persisted",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "BeforeUnloadEvent",
      partial: false,
      members: [
        Attribute(
          {
            name: "returnValue",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NotRestoredReasonDetails",
      partial: false,
      members: [
        Attribute(
          {
            name: "reason",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("toJSON"),
            idl_type: Some(Object()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "Default", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "NotRestoredReasons",
      partial: false,
      members: [
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(USVString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "id",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "url",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(USVString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "reasons",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: Nullable(
                FrozenArray({attrs: [], ty: Id("NotRestoredReasonDetails")}),
              ),
            },
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "children",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: Nullable(
                FrozenArray({attrs: [], ty: Id("NotRestoredReasons")}),
              ),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("toJSON"),
            idl_type: Some(Object()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "Default", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "ErrorEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("ErrorEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "message",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "filename",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lineno",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "colno",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "error",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: WildCard()}],
    },
  ),
  Dictionary(
    {
      name: "ErrorEventInit",
      partial: false,
      members: [
        {
          name: "message",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "filename",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "lineno",
          required: false,
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          attrs: [],
          default: Some(Number("0")),
        },
        {
          name: "colno",
          required: false,
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          attrs: [],
          default: Some(Number("0")),
        },
        {
          name: "error",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PromiseRejectionEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("PromiseRejectionEventInit")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "promise",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Object()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "reason",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: WildCard()}],
    },
  ),
  Dictionary(
    {
      name: "PromiseRejectionEventInit",
      partial: false,
      members: [
        {
          name: "promise",
          required: true,
          idl_type: {attrs: [], ty: Object()},
          attrs: [],
          default: None,
        },
        {
          name: "reason",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: None,
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Callback(
    {
      name: "EventHandlerNonNull",
      idl_type: Any(),
      arguments: [
        {
          name: "event",
          idl_type: {attrs: [], ty: Id("Event")},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [{name: "LegacyTreatNonObjectAsNull", rhs: NoArgs()}],
    },
  ),
  Typedef(
    {
      name: "EventHandler",
      idl_type: {attrs: [], ty: Nullable(Id("EventHandlerNonNull"))},
      attrs: [],
    },
  ),
  Callback(
    {
      name: "OnErrorEventHandlerNonNull",
      idl_type: Any(),
      arguments: [
        {
          name: "event",
          idl_type: {
            attrs: [],
            ty: Union(
              [
                {attrs: [], ty: Id("Event")},
                {attrs: [], ty: String(DOMString())}
              ],
            ),
          },
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        },
        {
          name: "source",
          idl_type: {attrs: [], ty: String(DOMString())},
          optional: true,
          variadic: false,
          default: None,
          attrs: [],
        },
        {
          name: "lineno",
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          optional: true,
          variadic: false,
          default: None,
          attrs: [],
        },
        {
          name: "colno",
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          optional: true,
          variadic: false,
          default: None,
          attrs: [],
        },
        {
          name: "error",
          idl_type: {attrs: [], ty: Any()},
          optional: true,
          variadic: false,
          default: None,
          attrs: [],
        }
      ],
      attrs: [{name: "LegacyTreatNonObjectAsNull", rhs: NoArgs()}],
    },
  ),
  Typedef(
    {
      name: "OnErrorEventHandler",
      idl_type: {attrs: [], ty: Nullable(Id("OnErrorEventHandlerNonNull"))},
      attrs: [],
    },
  ),
  Callback(
    {
      name: "OnBeforeUnloadEventHandlerNonNull",
      idl_type: Nullable(String(DOMString())),
      arguments: [
        {
          name: "event",
          idl_type: {attrs: [], ty: Id("Event")},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [{name: "LegacyTreatNonObjectAsNull", rhs: NoArgs()}],
    },
  ),
  Typedef(
    {
      name: "OnBeforeUnloadEventHandler",
      idl_type: {
        attrs: [],
        ty: Nullable(Id("OnBeforeUnloadEventHandlerNonNull")),
      },
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "GlobalEventHandlers",
      partial: false,
      members: [
        Attribute(
          {
            name: "onabort",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onauxclick",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onbeforeinput",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onbeforematch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onbeforetoggle",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onblur",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncancel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncanplay",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncanplaythrough",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onclick",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onclose",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncommand",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncontextlost",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncontextmenu",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncontextrestored",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncopy",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncuechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oncut",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondblclick",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondrag",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondragend",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondragenter",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondragleave",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondragover",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondragstart",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondrop",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ondurationchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onemptied",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onended",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("OnErrorEventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onfocus",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onformdata",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oninput",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oninvalid",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onkeydown",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onkeypress",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onkeyup",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onload",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onloadeddata",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onloadedmetadata",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onloadstart",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmousedown",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmouseenter",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [{name: "LegacyLenientThis", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "onmouseleave",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [{name: "LegacyLenientThis", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "onmousemove",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmouseout",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmouseover",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmouseup",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpaste",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpause",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onplay",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onplaying",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onprogress",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onratechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onreset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onresize",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onscroll",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onscrollend",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onsecuritypolicyviolation",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onseeked",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onseeking",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onselect",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onslotchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onstalled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onsubmit",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onsuspend",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ontimeupdate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ontoggle",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onvolumechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwaiting",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwebkitanimationend",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwebkitanimationiteration",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwebkitanimationstart",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwebkittransitionend",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onwheel",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "WindowEventHandlers",
      partial: false,
      members: [
        Attribute(
          {
            name: "onafterprint",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onbeforeprint",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onbeforeunload",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("OnBeforeUnloadEventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onhashchange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onlanguagechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessage",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessageerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onoffline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ononline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpagehide",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpagereveal",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpageshow",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpageswap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onpopstate",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onrejectionhandled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onstorage",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onunhandledrejection",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onunload",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "TimerHandler",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: String(DOMString())},
            {attrs: [], ty: Id("Function")},
            {attrs: [], ty: Id("TrustedScript")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "WindowOrWorkerGlobalScope",
      partial: false,
      members: [
        Attribute(
          {
            name: "origin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "isSecureContext",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "crossOriginIsolated",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("reportError"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "e",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("btoa"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("atob"),
            idl_type: Some(String(ByteString())),
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setTimeout"),
            idl_type: Some(Integer(Long())),
            arguments: [
              {
                name: "handler",
                idl_type: {attrs: [], ty: Id("TimerHandler")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "timeout",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              },
              {
                name: "arguments",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clearTimeout"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setInterval"),
            idl_type: Some(Integer(Long())),
            arguments: [
              {
                name: "handler",
                idl_type: {attrs: [], ty: Id("TimerHandler")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "timeout",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              },
              {
                name: "arguments",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clearInterval"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "id",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: true,
                variadic: false,
                default: Some(Number("0")),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("queueMicrotask"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "callback",
                idl_type: {attrs: [], ty: Id("VoidFunction")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createImageBitmap"),
            idl_type: Some(Promise(Id("ImageBitmap"))),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("ImageBitmapSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("ImageBitmapOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("createImageBitmap"),
            idl_type: Some(Promise(Id("ImageBitmap"))),
            arguments: [
              {
                name: "image",
                idl_type: {attrs: [], ty: Id("ImageBitmapSource")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sx",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sy",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sw",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Integer(Long())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("ImageBitmapOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("structuredClone"),
            idl_type: Some(Any()),
            arguments: [
              {
                name: "value",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("StructuredSerializeOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Includes({target: "Window", includes: "WindowOrWorkerGlobalScope", attrs: []}),
  Includes(
    {
      target: "WorkerGlobalScope",
      includes: "WindowOrWorkerGlobalScope",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Element",
      partial: true,
      members: [
        Operation(
          {
            name: Some("setHTMLUnsafe"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "html",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("getHTML"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("GetHTMLOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "innerHTML",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: Id("TrustedHTML")},
                  {
                    attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
                    ty: String(DOMString()),
                  }
                ],
              ),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "outerHTML",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: Id("TrustedHTML")},
                  {
                    attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
                    ty: String(DOMString()),
                  }
                ],
              ),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("insertAdjacentHTML"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "position",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "string",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "ShadowRoot",
      partial: true,
      members: [
        Operation(
          {
            name: Some("setHTMLUnsafe"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "html",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("getHTML"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("GetHTMLOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "innerHTML",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [],
              ty: Union(
                [
                  {attrs: [], ty: Id("TrustedHTML")},
                  {
                    attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
                    ty: String(DOMString()),
                  }
                ],
              ),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "GetHTMLOptions",
      partial: false,
      members: [
        {
          name: "serializableShadowRoots",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        },
        {
          name: "shadowRoots",
          required: false,
          idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Id("ShadowRoot")})},
          attrs: [],
          default: Some(Sequence()),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "DOMParser",
      partial: false,
      members: [
        Constructor({arguments: [], attrs: []}),
        Operation(
          {
            name: Some("parseFromString"),
            idl_type: Some(Id("Document")),
            arguments: [
              {
                name: "string",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "type",
                idl_type: {attrs: [], ty: Id("DOMParserSupportedType")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "NewObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Enum(
    {
      name: "DOMParserSupportedType",
      values: [
        ""text/html"",
        ""text/xml"",
        ""application/xml"",
        ""application/xhtml+xml"",
        ""image/svg+xml""
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Range",
      partial: true,
      members: [
        Operation(
          {
            name: Some("createContextualFragment"),
            idl_type: Some(Id("DocumentFragment")),
            arguments: [
              {
                name: "string",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedHTML")},
                      {attrs: [], ty: String(DOMString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "NewObject", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "XMLSerializer",
      partial: false,
      members: [
        Constructor({arguments: [], attrs: []}),
        Operation(
          {
            name: Some("serializeToString"),
            idl_type: Some(String(DOMString())),
            arguments: [
              {
                name: "root",
                idl_type: {attrs: [], ty: Id("Node")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "Navigator",
      partial: false,
      members: [],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes({target: "Navigator", includes: "NavigatorID", attrs: []}),
  Includes({target: "Navigator", includes: "NavigatorLanguage", attrs: []}),
  Includes({target: "Navigator", includes: "NavigatorOnLine", attrs: []}),
  Includes({target: "Navigator", includes: "NavigatorContentUtils", attrs: []}),
  Includes({target: "Navigator", includes: "NavigatorCookies", attrs: []}),
  Includes({target: "Navigator", includes: "NavigatorPlugins", attrs: []}),
  Includes(
    {target: "Navigator", includes: "NavigatorConcurrentHardware", attrs: []},
  ),
  InterfaceMixin(
    {
      name: "NavigatorID",
      partial: false,
      members: [
        Attribute(
          {
            name: "appCodeName",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "appName",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "appVersion",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "platform",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "product",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "productSub",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Exposed", rhs: Ident("Window")}],
          },
        ),
        Attribute(
          {
            name: "userAgent",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "vendor",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Exposed", rhs: Ident("Window")}],
          },
        ),
        Attribute(
          {
            name: "vendorSub",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Exposed", rhs: Ident("Window")}],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorID",
      partial: true,
      members: [
        Operation(
          {
            name: Some("taintEnabled"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [{name: "Exposed", rhs: Ident("Window")}],
          },
        ),
        Attribute(
          {
            name: "oscpu",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Exposed", rhs: Ident("Window")}],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorLanguage",
      partial: false,
      members: [
        Attribute(
          {
            name: "language",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "languages",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: FrozenArray({attrs: [], ty: String(DOMString())}),
            },
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorOnLine",
      partial: false,
      members: [
        Attribute(
          {
            name: "onLine",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorContentUtils",
      partial: false,
      members: [
        Operation(
          {
            name: Some("registerProtocolHandler"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "scheme",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "SecureContext", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("unregisterProtocolHandler"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "scheme",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "SecureContext", rhs: NoArgs()}],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorCookies",
      partial: false,
      members: [
        Attribute(
          {
            name: "cookieEnabled",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "NavigatorPlugins",
      partial: false,
      members: [
        Attribute(
          {
            name: "plugins",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("PluginArray")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "mimeTypes",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("MimeTypeArray")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("javaEnabled"),
            idl_type: Some(Boolean()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "pdfViewerEnabled",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "PluginArray",
      partial: false,
      members: [
        Operation(
          {
            name: Some("refresh"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(Id("Plugin"))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(Id("Plugin"))),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "MimeTypeArray",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(Id("MimeType"))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(Id("MimeType"))),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "Plugin",
      partial: false,
      members: [
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "description",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "filename",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("item"),
            idl_type: Some(Nullable(Id("MimeType"))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("namedItem"),
            idl_type: Some(Nullable(Id("MimeType"))),
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "LegacyUnenumerableNamedProperties", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "MimeType",
      partial: false,
      members: [
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "description",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "suffixes",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "enabledPlugin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Plugin")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Typedef(
    {
      name: "ImageDataArray",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Uint8ClampedArray()},
            {attrs: [], ty: Float16Array()}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Enum(
    {
      name: "ImageDataPixelFormat",
      values: [""rgba-unorm8"", ""rgba-float16""],
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "ImageDataSettings",
      partial: false,
      members: [
        {
          name: "colorSpace",
          required: false,
          idl_type: {attrs: [], ty: Id("PredefinedColorSpace")},
          attrs: [],
          default: None,
        },
        {
          name: "pixelFormat",
          required: false,
          idl_type: {attrs: [], ty: Id("ImageDataPixelFormat")},
          attrs: [],
          default: Some(String(""rgba-unorm8"")),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "ImageData",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "sw",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "settings",
                idl_type: {attrs: [], ty: Id("ImageDataSettings")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Constructor(
          {
            arguments: [
              {
                name: "data",
                idl_type: {attrs: [], ty: Id("ImageDataArray")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sw",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "sh",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: true,
                variadic: false,
                default: None,
                attrs: [],
              },
              {
                name: "settings",
                idl_type: {attrs: [], ty: Id("ImageDataSettings")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "data",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ImageDataArray")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "pixelFormat",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("ImageDataPixelFormat")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "colorSpace",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("PredefinedColorSpace")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: IdentList(["Window", "Worker"])},
        {name: "Serializable", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "ImageBitmap",
      partial: false,
      members: [
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: IdentList(["Window", "Worker"])},
        {name: "Serializable", rhs: NoArgs()},
        {name: "Transferable", rhs: NoArgs()}
      ],
    },
  ),
  Typedef(
    {
      name: "ImageBitmapSource",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("CanvasImageSource")},
            {attrs: [], ty: Id("Blob")},
            {attrs: [], ty: Id("ImageData")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Enum(
    {name: "ImageOrientation", values: [""from-image"", ""flipY""], attrs: []},
  ),
  Enum(
    {
      name: "PremultiplyAlpha",
      values: [""none"", ""premultiply"", ""default""],
      attrs: [],
    },
  ),
  Enum(
    {name: "ColorSpaceConversion", values: [""none"", ""default""], attrs: []},
  ),
  Enum(
    {
      name: "ResizeQuality",
      values: [""pixelated"", ""low"", ""medium"", ""high""],
      attrs: [],
    },
  ),
  Dictionary(
    {
      name: "ImageBitmapOptions",
      partial: false,
      members: [
        {
          name: "imageOrientation",
          required: false,
          idl_type: {attrs: [], ty: Id("ImageOrientation")},
          attrs: [],
          default: Some(String(""from-image"")),
        },
        {
          name: "premultiplyAlpha",
          required: false,
          idl_type: {attrs: [], ty: Id("PremultiplyAlpha")},
          attrs: [],
          default: Some(String(""default"")),
        },
        {
          name: "colorSpaceConversion",
          required: false,
          idl_type: {attrs: [], ty: Id("ColorSpaceConversion")},
          attrs: [],
          default: Some(String(""default"")),
        },
        {
          name: "resizeWidth",
          required: false,
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          attrs: [{name: "EnforceRange", rhs: NoArgs()}],
          default: None,
        },
        {
          name: "resizeHeight",
          required: false,
          idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
          attrs: [{name: "EnforceRange", rhs: NoArgs()}],
          default: None,
        },
        {
          name: "resizeQuality",
          required: false,
          idl_type: {attrs: [], ty: Id("ResizeQuality")},
          attrs: [],
          default: Some(String(""low"")),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Callback(
    {
      name: "FrameRequestCallback",
      idl_type: Undefined(),
      arguments: [
        {
          name: "time",
          idl_type: {attrs: [], ty: Id("DOMHighResTimeStamp")},
          optional: false,
          variadic: true,
          default: None,
          attrs: [],
        }
      ],
      attrs: [],
    },
  ),
  InterfaceMixin(
    {
      name: "AnimationFrameProvider",
      partial: false,
      members: [
        Operation(
          {
            name: Some("requestAnimationFrame"),
            idl_type: Some(Integer(Unsigned(Long()))),
            arguments: [
              {
                name: "callback",
                idl_type: {attrs: [], ty: Id("FrameRequestCallback")},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("cancelAnimationFrame"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "handle",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Includes({target: "Window", includes: "AnimationFrameProvider", attrs: []}),
  Includes(
    {
      target: "DedicatedWorkerGlobalScope",
      includes: "AnimationFrameProvider",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "MessageEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("MessageEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "data",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Any()},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "origin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "lastEventId",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "source",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("MessageEventSource"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ports",
            special: Regular(),
            readonly: true,
            idl_type: {
              attrs: [],
              ty: FrozenArray({attrs: [], ty: Id("MessagePort")}),
            },
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("initMessageEvent"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "bubbles",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "cancelable",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "data",
                idl_type: {attrs: [], ty: Any()},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              },
              {
                name: "origin",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "lastEventId",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "source",
                idl_type: {attrs: [], ty: Nullable(Id("MessageEventSource"))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              },
              {
                name: "ports",
                idl_type: {
                  attrs: [],
                  ty: Sequence({attrs: [], ty: Id("MessagePort")}),
                },
                optional: true,
                variadic: false,
                default: Some(Sequence()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [
        {name: "Exposed", rhs: IdentList(["Window", "Worker", "AudioWorklet"])}
      ],
    },
  ),
  Dictionary(
    {
      name: "MessageEventInit",
      partial: false,
      members: [
        {
          name: "data",
          required: false,
          idl_type: {attrs: [], ty: Any()},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "origin",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "lastEventId",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "source",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("MessageEventSource"))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "ports",
          required: false,
          idl_type: {
            attrs: [],
            ty: Sequence({attrs: [], ty: Id("MessagePort")}),
          },
          attrs: [],
          default: Some(Sequence()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Typedef(
    {
      name: "MessageEventSource",
      idl_type: {
        attrs: [],
        ty: Union(
          [
            {attrs: [], ty: Id("WindowProxy")},
            {attrs: [], ty: Id("MessagePort")},
            {attrs: [], ty: Id("ServiceWorker")}
          ],
        ),
      },
      attrs: [],
    },
  ),
  Interface(
    {
      name: "EventSource",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventSourceInitDict",
                idl_type: {attrs: [], ty: Id("EventSourceInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "url",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "withCredentials",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [],
          },
        ),
        Const(
          {
            name: "CONNECTING",
            idl_type: Integer(Unsigned(Short())),
            value: Number("0"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "OPEN",
            idl_type: Integer(Unsigned(Short())),
            value: Number("1"),
            attrs: [],
          },
        ),
        Const(
          {
            name: "CLOSED",
            idl_type: Integer(Unsigned(Short())),
            value: Number("2"),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "readyState",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Short()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onopen",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessage",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Dictionary(
    {
      name: "EventSourceInit",
      partial: false,
      members: [
        {
          name: "withCredentials",
          required: false,
          idl_type: {attrs: [], ty: Boolean()},
          attrs: [],
          default: Some(Boolean(false)),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "MessageChannel",
      partial: false,
      members: [
        Constructor({arguments: [], attrs: []}),
        Attribute(
          {
            name: "port1",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("MessagePort")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "port2",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("MessagePort")},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  InterfaceMixin(
    {
      name: "MessageEventTarget",
      partial: false,
      members: [
        Attribute(
          {
            name: "onmessage",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessageerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "MessagePort",
      partial: false,
      members: [
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "transfer",
                idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Object()})},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("StructuredSerializeOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("start"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onclose",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [
        {name: "Exposed", rhs: IdentList(["Window", "Worker", "AudioWorklet"])},
        {name: "Transferable", rhs: NoArgs()}
      ],
    },
  ),
  Includes({target: "MessagePort", includes: "MessageEventTarget", attrs: []}),
  Dictionary(
    {
      name: "StructuredSerializeOptions",
      partial: false,
      members: [
        {
          name: "transfer",
          required: false,
          idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Object()})},
          attrs: [],
          default: Some(Sequence()),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "BroadcastChannel",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "name",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessage",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onmessageerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: IdentList(["Window", "Worker"])}],
    },
  ),
  Interface(
    {
      name: "WorkerGlobalScope",
      partial: false,
      members: [
        Attribute(
          {
            name: "self",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WorkerGlobalScope")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "location",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WorkerLocation")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "navigator",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("WorkerNavigator")},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("importScripts"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "urls",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedScriptURL")},
                      {attrs: [], ty: String(USVString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("OnErrorEventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onlanguagechange",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onoffline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "ononline",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onrejectionhandled",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onunhandledrejection",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Worker")}],
    },
  ),
  Interface(
    {
      name: "DedicatedWorkerGlobalScope",
      partial: false,
      members: [
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "transfer",
                idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Object()})},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("StructuredSerializeOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("WorkerGlobalScope"),
      attrs: [
        {name: "Global", rhs: IdentList(["Worker", "DedicatedWorker"])},
        {name: "Exposed", rhs: Ident("DedicatedWorker")}
      ],
    },
  ),
  Includes(
    {
      target: "DedicatedWorkerGlobalScope",
      includes: "MessageEventTarget",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "SharedWorkerGlobalScope",
      partial: false,
      members: [
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [{name: "Replaceable", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("close"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "onconnect",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("WorkerGlobalScope"),
      attrs: [
        {name: "Global", rhs: IdentList(["Worker", "SharedWorker"])},
        {name: "Exposed", rhs: Ident("SharedWorker")}
      ],
    },
  ),
  InterfaceMixin(
    {
      name: "AbstractWorker",
      partial: false,
      members: [
        Attribute(
          {
            name: "onerror",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Id("EventHandler")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Worker",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "scriptURL",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedScriptURL")},
                      {attrs: [], ty: String(USVString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("WorkerOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("terminate"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "transfer",
                idl_type: {attrs: [], ty: Sequence({attrs: [], ty: Object()})},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("postMessage"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "message",
                idl_type: {attrs: [], ty: Any()},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("StructuredSerializeOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [
        {
          name: "Exposed",
          rhs: IdentList(["Window", "DedicatedWorker", "SharedWorker"]),
        }
      ],
    },
  ),
  Dictionary(
    {
      name: "WorkerOptions",
      partial: false,
      members: [
        {
          name: "name",
          required: false,
          idl_type: {attrs: [], ty: String(DOMString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "type",
          required: false,
          idl_type: {attrs: [], ty: Id("WorkerType")},
          attrs: [],
          default: Some(String(""classic"")),
        },
        {
          name: "credentials",
          required: false,
          idl_type: {attrs: [], ty: Id("RequestCredentials")},
          attrs: [],
          default: Some(String(""same-origin"")),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Enum({name: "WorkerType", values: [""classic"", ""module""], attrs: []}),
  Includes({target: "Worker", includes: "AbstractWorker", attrs: []}),
  Includes({target: "Worker", includes: "MessageEventTarget", attrs: []}),
  Interface(
    {
      name: "SharedWorker",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "scriptURL",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: Id("TrustedScriptURL")},
                      {attrs: [], ty: String(USVString())}
                    ],
                  ),
                },
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {
                  attrs: [],
                  ty: Union(
                    [
                      {attrs: [], ty: String(DOMString())},
                      {attrs: [], ty: Id("WorkerOptions")}
                    ],
                  ),
                },
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "port",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("MessagePort")},
            attrs: [],
          },
        )
      ],
      inheritance: Some("EventTarget"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes({target: "SharedWorker", includes: "AbstractWorker", attrs: []}),
  InterfaceMixin(
    {
      name: "NavigatorConcurrentHardware",
      partial: false,
      members: [
        Attribute(
          {
            name: "hardwareConcurrency",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(LongLong()))},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Interface(
    {
      name: "WorkerNavigator",
      partial: false,
      members: [],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Worker")}],
    },
  ),
  Includes({target: "WorkerNavigator", includes: "NavigatorID", attrs: []}),
  Includes(
    {target: "WorkerNavigator", includes: "NavigatorLanguage", attrs: []},
  ),
  Includes({target: "WorkerNavigator", includes: "NavigatorOnLine", attrs: []}),
  Includes(
    {
      target: "WorkerNavigator",
      includes: "NavigatorConcurrentHardware",
      attrs: [],
    },
  ),
  Interface(
    {
      name: "WorkerLocation",
      partial: false,
      members: [
        Attribute(
          {
            name: "href",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "origin",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "protocol",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "host",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hostname",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "port",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "pathname",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "search",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "hash",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Worker")}],
    },
  ),
  Interface(
    {
      name: "WorkletGlobalScope",
      partial: false,
      members: [],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Worklet")},
        {name: "SecureContext", rhs: NoArgs()}
      ],
    },
  ),
  Interface(
    {
      name: "Worklet",
      partial: false,
      members: [
        Operation(
          {
            name: Some("addModule"),
            idl_type: Some(Promise(Undefined())),
            arguments: [
              {
                name: "moduleURL",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "options",
                idl_type: {attrs: [], ty: Id("WorkletOptions")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [{name: "NewObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [
        {name: "Exposed", rhs: Ident("Window")},
        {name: "SecureContext", rhs: NoArgs()}
      ],
    },
  ),
  Dictionary(
    {
      name: "WorkletOptions",
      partial: false,
      members: [
        {
          name: "credentials",
          required: false,
          idl_type: {attrs: [], ty: Id("RequestCredentials")},
          attrs: [],
          default: Some(String(""same-origin"")),
        }
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Storage",
      partial: false,
      members: [
        Attribute(
          {
            name: "length",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("key"),
            idl_type: Some(Nullable(String(DOMString()))),
            arguments: [
              {
                name: "index",
                idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("getItem"),
            idl_type: Some(Nullable(String(DOMString()))),
            arguments: [
              {
                name: "key",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Getter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("setItem"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "key",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "value",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Setter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("removeItem"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "key",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              }
            ],
            special: Deleter(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("clear"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  InterfaceMixin(
    {
      name: "WindowSessionStorage",
      partial: false,
      members: [
        Attribute(
          {
            name: "sessionStorage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Storage")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Includes({target: "Window", includes: "WindowSessionStorage", attrs: []}),
  InterfaceMixin(
    {
      name: "WindowLocalStorage",
      partial: false,
      members: [
        Attribute(
          {
            name: "localStorage",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("Storage")},
            attrs: [],
          },
        )
      ],
      attrs: [],
    },
  ),
  Includes({target: "Window", includes: "WindowLocalStorage", attrs: []}),
  Interface(
    {
      name: "StorageEvent",
      partial: false,
      members: [
        Constructor(
          {
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "eventInitDict",
                idl_type: {attrs: [], ty: Id("StorageEventInit")},
                optional: true,
                variadic: false,
                default: Some(Dictionary()),
                attrs: [],
              }
            ],
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "key",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "oldValue",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "newValue",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "url",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "storageArea",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Storage"))},
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("initStorageEvent"),
            idl_type: Some(Undefined()),
            arguments: [
              {
                name: "type",
                idl_type: {attrs: [], ty: String(DOMString())},
                optional: false,
                variadic: true,
                default: None,
                attrs: [],
              },
              {
                name: "bubbles",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "cancelable",
                idl_type: {attrs: [], ty: Boolean()},
                optional: true,
                variadic: false,
                default: Some(Boolean(false)),
                attrs: [],
              },
              {
                name: "key",
                idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              },
              {
                name: "oldValue",
                idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              },
              {
                name: "newValue",
                idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              },
              {
                name: "url",
                idl_type: {attrs: [], ty: String(USVString())},
                optional: true,
                variadic: false,
                default: Some(String("""")),
                attrs: [],
              },
              {
                name: "storageArea",
                idl_type: {attrs: [], ty: Nullable(Id("Storage"))},
                optional: true,
                variadic: false,
                default: Some(Null()),
                attrs: [],
              }
            ],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("Event"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Dictionary(
    {
      name: "StorageEventInit",
      partial: false,
      members: [
        {
          name: "key",
          required: false,
          idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "oldValue",
          required: false,
          idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "newValue",
          required: false,
          idl_type: {attrs: [], ty: Nullable(String(DOMString()))},
          attrs: [],
          default: Some(Null()),
        },
        {
          name: "url",
          required: false,
          idl_type: {attrs: [], ty: String(USVString())},
          attrs: [],
          default: Some(String("""")),
        },
        {
          name: "storageArea",
          required: false,
          idl_type: {attrs: [], ty: Nullable(Id("Storage"))},
          attrs: [],
          default: Some(Null()),
        }
      ],
      inheritance: Some("EventInit"),
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLMarqueeElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "behavior",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "direction",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "hspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "loop",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "scrollAmount",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("6")}
            ],
          },
        ),
        Attribute(
          {
            name: "scrollDelay",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()},
              {name: "ReflectDefault", rhs: Integer("85")}
            ],
          },
        ),
        Attribute(
          {
            name: "trueSpeed",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "vspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Operation(
          {
            name: Some("start"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("stop"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLFrameSetElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "cols",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rows",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Includes(
    {target: "HTMLFrameSetElement", includes: "WindowEventHandlers", attrs: []},
  ),
  Interface(
    {
      name: "HTMLFrameElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "scrolling",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "src",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "frameBorder",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "longDesc",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "noResize",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "contentDocument",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("Document"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "contentWindow",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Nullable(Id("WindowProxy"))},
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "marginHeight",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "marginWidth",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLAnchorElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "coords",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "charset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rev",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "shape",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLAreaElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "noHref",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLBodyElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "text",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "link",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "vLink",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "aLink",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "background",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLBRElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "clear",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableCaptionElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableColElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""char"")}
            ],
          },
        ),
        Attribute(
          {
            name: "chOff",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""charoff"")}
            ],
          },
        ),
        Attribute(
          {
            name: "vAlign",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLDirectoryElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "compact",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLDivElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLDListElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "compact",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLEmbedElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLFontElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "color",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "face",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "size",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLHeadingElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLHRElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "color",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "noShade",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "size",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLHtmlElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "version",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLIFrameElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "scrolling",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "frameBorder",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "longDesc",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "marginHeight",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "marginWidth",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLImageElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "lowsrc",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "hspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "vspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "longDesc",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(USVString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "border",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLInputElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "useMap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLLegendElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLLIElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLLinkElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "charset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rev",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "target",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLMenuElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "compact",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLMetaElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "scheme",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLObjectElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "archive",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "code",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "declare",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "hspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "standby",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "vspace",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Unsigned(Long()))},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "codeBase",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "ReflectURL", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "codeType",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "useMap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "border",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLOListElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "compact",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLParagraphElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLParamElement",
      partial: false,
      members: [
        Constructor(
          {arguments: [], attrs: [{name: "HTMLConstructor", rhs: NoArgs()}]},
        ),
        Attribute(
          {
            name: "name",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "value",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "valueType",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: Some("HTMLElement"),
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  ),
  Interface(
    {
      name: "HTMLPreElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Integer(Long())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLStyleElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLScriptElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "charset",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "event",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "htmlFor",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""for"")}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "border",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "frame",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "rules",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "summary",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "cellPadding",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "cellSpacing",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableSectionElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""char"")}
            ],
          },
        ),
        Attribute(
          {
            name: "chOff",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""charoff"")}
            ],
          },
        ),
        Attribute(
          {
            name: "vAlign",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableCellElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "axis",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "height",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "width",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""char"")}
            ],
          },
        ),
        Attribute(
          {
            name: "chOff",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""charoff"")}
            ],
          },
        ),
        Attribute(
          {
            name: "noWrap",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "vAlign",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLTableRowElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "align",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "ch",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""char"")}
            ],
          },
        ),
        Attribute(
          {
            name: "chOff",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: String(""charoff"")}
            ],
          },
        ),
        Attribute(
          {
            name: "vAlign",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "HTMLUListElement",
      partial: true,
      members: [
        Attribute(
          {
            name: "compact",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: Boolean()},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        ),
        Attribute(
          {
            name: "type",
            special: Regular(),
            readonly: false,
            idl_type: {attrs: [], ty: String(DOMString())},
            attrs: [
              {name: "CEReactions", rhs: NoArgs()},
              {name: "Reflect", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Document",
      partial: true,
      members: [
        Attribute(
          {
            name: "fgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "linkColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "vlinkColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "alinkColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "bgColor",
            special: Regular(),
            readonly: false,
            idl_type: {
              attrs: [{name: "LegacyNullToEmptyString", rhs: NoArgs()}],
              ty: String(DOMString()),
            },
            attrs: [{name: "CEReactions", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "anchors",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Attribute(
          {
            name: "applets",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        ),
        Operation(
          {
            name: Some("clear"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("captureEvents"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("releaseEvents"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "all",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("HTMLAllCollection")},
            attrs: [{name: "SameObject", rhs: NoArgs()}],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "Window",
      partial: true,
      members: [
        Operation(
          {
            name: Some("captureEvents"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("releaseEvents"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Attribute(
          {
            name: "external",
            special: Regular(),
            readonly: true,
            idl_type: {attrs: [], ty: Id("External")},
            attrs: [
              {name: "Replaceable", rhs: NoArgs()},
              {name: "SameObject", rhs: NoArgs()}
            ],
          },
        )
      ],
      inheritance: None,
      attrs: [],
    },
  ),
  Interface(
    {
      name: "External",
      partial: false,
      members: [
        Operation(
          {
            name: Some("AddSearchProvider"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        ),
        Operation(
          {
            name: Some("IsSearchProviderInstalled"),
            idl_type: Some(Undefined()),
            arguments: [],
            special: Regular(),
            attrs: [],
          },
        )
      ],
      inheritance: None,
      attrs: [{name: "Exposed", rhs: Ident("Window")}],
    },
  )
]
