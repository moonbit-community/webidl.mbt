// Generated using `moon info`, DON'T EDIT IT
package "Yoorkin/webidl/parser"

import(
  "Yoorkin/webidl/syntax"
  "moonbitlang/core/list"
)

// Values
fn definitions(Array[(Token, Unit, Unit)], initial_pos? : Unit) -> @list.List[@syntax.Definition] raise ParseError

fn lex_(StringView) -> Array[Token]

fn parse(Array[Token]) -> @list.List[@syntax.Definition]

// Errors
pub suberror ParseError {
  UnexpectedToken(Token, (Unit, Unit), Array[TokenKind])
  UnexpectedEndOfInput(Unit, Array[TokenKind])
}

// Types and methods
pub(all) enum Token {
  INT(String)
  ID(String)
  STRING(String)
  DECIMAL(String)
  ATTRIBUTE
  CALLBACK
  CONST
  CONSTRUCTOR
  DELETER
  DICTIONARY
  ENUM
  GETTER
  INCLUDES
  INHERIT
  INTERFACE
  ITERABLE
  MAPLIKE
  MIXIN
  NAMESPACE
  PARTIAL
  READONLY
  REQUIRED
  SETLIKE
  SETTER
  STATIC
  STRINGIFIER
  TYPEDEF
  UNRESTRICTED
  ARRAYBUFFER
  SHAREDARRAYBUFFER
  DATAVIEW
  INT8ARRAY
  INT16ARRAY
  INT32ARRAY
  UINT8ARRAY
  UINT16ARRAY
  UINT32ARRAY
  UINT8CLAMPEDARRAY
  BIGINT64ARRAY
  BIGUINT64ARRAY
  FLOAT16ARRAY
  FLOAT32ARRAY
  FLOAT64ARRAY
  BYTESTRING
  DOMSTRING
  USVSTRING
  FROZENARRAY
  INFINITY
  NEGINFINITY
  NAN
  OBSERVABLEARRAY
  PROMISE
  ANY
  BIGINT
  BOOLEAN
  BYTE
  DOUBLE
  FLOAT
  LONG
  OBJECT
  OCTET
  RECORD
  SEQUENCE
  SHORT
  SYMBOL
  UNSIGNED
  ASYNCITERABLE
  ASYNCSEQUENCE
  FALSE
  TRUE
  NULL
  UNDEFINED
  ELLIPS
  COLON
  SEMI
  LT
  EQUAL
  GT
  QUESTION
  STAR
  OR
  OPTIONAL
  LBRACE
  RBRACE
  LPAREN
  RPAREN
  LBRACKET
  RBRACKET
  COMMA
  EOF
}
fn Token::kind(Self) -> TokenKind
impl Show for Token

pub(all) enum TokenKind {
  TK_INT
  TK_ID
  TK_STRING
  TK_DECIMAL
  TK_ATTRIBUTE
  TK_CALLBACK
  TK_CONST
  TK_CONSTRUCTOR
  TK_DELETER
  TK_DICTIONARY
  TK_ENUM
  TK_GETTER
  TK_INCLUDES
  TK_INHERIT
  TK_INTERFACE
  TK_ITERABLE
  TK_MAPLIKE
  TK_MIXIN
  TK_NAMESPACE
  TK_PARTIAL
  TK_READONLY
  TK_REQUIRED
  TK_SETLIKE
  TK_SETTER
  TK_STATIC
  TK_STRINGIFIER
  TK_TYPEDEF
  TK_UNRESTRICTED
  TK_ARRAYBUFFER
  TK_SHAREDARRAYBUFFER
  TK_DATAVIEW
  TK_INT8ARRAY
  TK_INT16ARRAY
  TK_INT32ARRAY
  TK_UINT8ARRAY
  TK_UINT16ARRAY
  TK_UINT32ARRAY
  TK_UINT8CLAMPEDARRAY
  TK_BIGINT64ARRAY
  TK_BIGUINT64ARRAY
  TK_FLOAT16ARRAY
  TK_FLOAT32ARRAY
  TK_FLOAT64ARRAY
  TK_BYTESTRING
  TK_DOMSTRING
  TK_USVSTRING
  TK_FROZENARRAY
  TK_INFINITY
  TK_NEGINFINITY
  TK_NAN
  TK_OBSERVABLEARRAY
  TK_PROMISE
  TK_ANY
  TK_BIGINT
  TK_BOOLEAN
  TK_BYTE
  TK_DOUBLE
  TK_FLOAT
  TK_LONG
  TK_OBJECT
  TK_OCTET
  TK_RECORD
  TK_SEQUENCE
  TK_SHORT
  TK_SYMBOL
  TK_UNSIGNED
  TK_ASYNCITERABLE
  TK_ASYNCSEQUENCE
  TK_FALSE
  TK_TRUE
  TK_NULL
  TK_UNDEFINED
  TK_ELLIPS
  TK_COLON
  TK_SEMI
  TK_LT
  TK_EQUAL
  TK_GT
  TK_QUESTION
  TK_STAR
  TK_OR
  TK_OPTIONAL
  TK_LBRACE
  TK_RBRACE
  TK_LPAREN
  TK_RPAREN
  TK_LBRACKET
  TK_RBRACKET
  TK_COMMA
  TK_EOF
}
impl Eq for TokenKind
impl Show for TokenKind

// Type aliases

// Traits

